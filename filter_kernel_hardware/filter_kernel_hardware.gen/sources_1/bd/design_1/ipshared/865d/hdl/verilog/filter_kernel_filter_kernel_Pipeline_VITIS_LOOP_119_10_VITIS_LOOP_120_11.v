// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        line_buffer_8_address0,
        line_buffer_8_ce0,
        line_buffer_8_we0,
        line_buffer_8_d0,
        line_buffer_7_address0,
        line_buffer_7_ce0,
        line_buffer_7_we0,
        line_buffer_7_d0,
        line_buffer_6_address0,
        line_buffer_6_ce0,
        line_buffer_6_we0,
        line_buffer_6_d0,
        xor_ln114,
        mul_ln114,
        zext_ln114,
        sext_ln75_1,
        sext_ln75,
        cmp155,
        axie4_data
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] line_buffer_8_address0;
output   line_buffer_8_ce0;
output   line_buffer_8_we0;
output  [7:0] line_buffer_8_d0;
output  [10:0] line_buffer_7_address0;
output   line_buffer_7_ce0;
output   line_buffer_7_we0;
output  [7:0] line_buffer_7_d0;
output  [10:0] line_buffer_6_address0;
output   line_buffer_6_ce0;
output   line_buffer_6_we0;
output  [7:0] line_buffer_6_d0;
input  [63:0] xor_ln114;
input  [127:0] mul_ln114;
input  [30:0] zext_ln114;
input  [30:0] sext_ln75_1;
input  [31:0] sext_ln75;
input  [0:0] cmp155;
input  [127:0] axie4_data;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln119_1_fu_202_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire  signed [60:0] sext_ln75_cast_fu_160_p1;
reg  signed [60:0] sext_ln75_cast_reg_397;
wire   [63:0] sext_ln75_1_cast_fu_164_p1;
reg   [63:0] sext_ln75_1_cast_reg_402;
wire   [63:0] zext_ln114_cast_fu_168_p1;
reg   [63:0] zext_ln114_cast_reg_407;
wire   [1:0] select_ln119_fu_222_p3;
reg   [1:0] select_ln119_reg_416;
reg   [1:0] select_ln119_reg_416_pp0_iter2_reg;
reg   [1:0] select_ln119_reg_416_pp0_iter3_reg;
reg   [1:0] select_ln119_reg_416_pp0_iter4_reg;
reg   [1:0] select_ln119_reg_416_pp0_iter5_reg;
wire   [63:0] select_ln119_1_fu_230_p3;
reg   [63:0] select_ln119_1_reg_421;
wire  signed [60:0] trunc_ln119_fu_238_p1;
reg  signed [60:0] trunc_ln119_reg_426;
wire   [0:0] icmp_ln119_fu_270_p2;
reg   [0:0] icmp_ln119_reg_431;
reg   [0:0] icmp_ln119_reg_431_pp0_iter3_reg;
reg   [0:0] icmp_ln119_reg_431_pp0_iter4_reg;
reg   [0:0] icmp_ln119_reg_431_pp0_iter5_reg;
reg   [10:0] line_buffer_6_addr_reg_436;
reg   [10:0] line_buffer_6_addr_reg_436_pp0_iter3_reg;
reg   [10:0] line_buffer_6_addr_reg_436_pp0_iter4_reg;
reg   [10:0] line_buffer_6_addr_reg_436_pp0_iter5_reg;
reg   [10:0] line_buffer_7_addr_reg_441;
reg   [10:0] line_buffer_7_addr_reg_441_pp0_iter3_reg;
reg   [10:0] line_buffer_7_addr_reg_441_pp0_iter4_reg;
reg   [10:0] line_buffer_7_addr_reg_441_pp0_iter5_reg;
reg   [10:0] line_buffer_8_addr_reg_446;
reg   [10:0] line_buffer_8_addr_reg_446_pp0_iter3_reg;
reg   [10:0] line_buffer_8_addr_reg_446_pp0_iter4_reg;
reg   [10:0] line_buffer_8_addr_reg_446_pp0_iter5_reg;
wire   [60:0] grp_fu_156_p2;
reg   [60:0] empty_reg_451;
wire   [60:0] add_ln123_fu_278_p2;
reg   [60:0] add_ln123_reg_456;
wire   [31:0] trunc_ln5_fu_287_p3;
reg   [31:0] trunc_ln5_reg_461;
wire   [31:0] sub_ln123_fu_295_p2;
reg   [31:0] sub_ln123_reg_466;
wire   [63:0] add_ln119_fu_263_p2;
wire    ap_block_pp0_stage0;
reg   [1:0] k_3_fu_66;
wire   [1:0] add_ln120_fu_242_p2;
wire    ap_loop_init;
reg   [63:0] x_fu_70;
reg   [127:0] indvar_flatten111_fu_74;
wire   [127:0] add_ln119_2_fu_207_p2;
reg    line_buffer_7_we0_local;
wire   [7:0] select_ln124_fu_344_p3;
reg    line_buffer_7_ce0_local;
reg    line_buffer_6_we0_local;
reg    line_buffer_6_ce0_local;
reg    line_buffer_8_we0_local;
reg    line_buffer_8_ce0_local;
wire  signed [31:0] grp_fu_156_p1;
wire   [63:0] zext_ln120_fu_193_p1;
wire   [0:0] icmp_ln120_fu_197_p2;
wire   [63:0] add_ln119_1_fu_216_p2;
wire   [60:0] zext_ln120_1_fu_275_p1;
wire   [28:0] trunc_ln123_fu_283_p1;
wire   [127:0] zext_ln123_fu_312_p1;
wire   [127:0] zext_ln123_1_fu_320_p1;
wire   [127:0] shl_ln123_fu_323_p2;
wire   [127:0] lshr_ln123_fu_315_p2;
wire   [0:0] tmp_fu_305_p3;
wire   [7:0] trunc_ln123_1_fu_328_p1;
wire   [7:0] trunc_ln123_2_fu_332_p1;
wire   [0:0] brmerge47_demorgan_fu_301_p2;
wire   [7:0] pixel_val_fu_336_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 k_3_fu_66 = 2'd0;
#0 x_fu_70 = 64'd0;
#0 indvar_flatten111_fu_74 = 128'd0;
#0 ap_done_reg = 1'b0;
end

filter_kernel_mul_61s_32s_61_3_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 61 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 61 ))
mul_61s_32s_61_3_1_U39(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(trunc_ln119_reg_426),
    .din1(grp_fu_156_p1),
    .ce(1'b1),
    .dout(grp_fu_156_p2)
);

filter_kernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten111_fu_74 <= 128'd0;
        end else if (((icmp_ln119_1_fu_202_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten111_fu_74 <= add_ln119_2_fu_207_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_3_fu_66 <= 2'd0;
        end else if (((icmp_ln119_1_fu_202_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_3_fu_66 <= add_ln120_fu_242_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            x_fu_70 <= 64'd0;
        end else if (((icmp_ln119_1_fu_202_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            x_fu_70 <= select_ln119_1_fu_230_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln123_reg_456 <= add_ln123_fu_278_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        empty_reg_451 <= grp_fu_156_p2;
        icmp_ln119_reg_431 <= icmp_ln119_fu_270_p2;
        icmp_ln119_reg_431_pp0_iter3_reg <= icmp_ln119_reg_431;
        icmp_ln119_reg_431_pp0_iter4_reg <= icmp_ln119_reg_431_pp0_iter3_reg;
        icmp_ln119_reg_431_pp0_iter5_reg <= icmp_ln119_reg_431_pp0_iter4_reg;
        line_buffer_6_addr_reg_436 <= add_ln119_fu_263_p2;
        line_buffer_6_addr_reg_436_pp0_iter3_reg <= line_buffer_6_addr_reg_436;
        line_buffer_6_addr_reg_436_pp0_iter4_reg <= line_buffer_6_addr_reg_436_pp0_iter3_reg;
        line_buffer_6_addr_reg_436_pp0_iter5_reg <= line_buffer_6_addr_reg_436_pp0_iter4_reg;
        line_buffer_7_addr_reg_441 <= add_ln119_fu_263_p2;
        line_buffer_7_addr_reg_441_pp0_iter3_reg <= line_buffer_7_addr_reg_441;
        line_buffer_7_addr_reg_441_pp0_iter4_reg <= line_buffer_7_addr_reg_441_pp0_iter3_reg;
        line_buffer_7_addr_reg_441_pp0_iter5_reg <= line_buffer_7_addr_reg_441_pp0_iter4_reg;
        line_buffer_8_addr_reg_446 <= add_ln119_fu_263_p2;
        line_buffer_8_addr_reg_446_pp0_iter3_reg <= line_buffer_8_addr_reg_446;
        line_buffer_8_addr_reg_446_pp0_iter4_reg <= line_buffer_8_addr_reg_446_pp0_iter3_reg;
        line_buffer_8_addr_reg_446_pp0_iter5_reg <= line_buffer_8_addr_reg_446_pp0_iter4_reg;
        select_ln119_reg_416_pp0_iter2_reg <= select_ln119_reg_416;
        select_ln119_reg_416_pp0_iter3_reg <= select_ln119_reg_416_pp0_iter2_reg;
        select_ln119_reg_416_pp0_iter4_reg <= select_ln119_reg_416_pp0_iter3_reg;
        select_ln119_reg_416_pp0_iter5_reg <= select_ln119_reg_416_pp0_iter4_reg;
        sub_ln123_reg_466[31 : 3] <= sub_ln123_fu_295_p2[31 : 3];
        trunc_ln5_reg_461[31 : 3] <= trunc_ln5_fu_287_p3[31 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        select_ln119_1_reg_421 <= select_ln119_1_fu_230_p3;
        select_ln119_reg_416 <= select_ln119_fu_222_p3;
        sext_ln75_1_cast_reg_402[30 : 0] <= sext_ln75_1_cast_fu_164_p1[30 : 0];
        sext_ln75_cast_reg_397 <= sext_ln75_cast_fu_160_p1;
        trunc_ln119_reg_426 <= trunc_ln119_fu_238_p1;
        zext_ln114_cast_reg_407[30 : 0] <= zext_ln114_cast_fu_168_p1[30 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln119_1_fu_202_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        line_buffer_6_ce0_local = 1'b1;
    end else begin
        line_buffer_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln119_reg_416_pp0_iter5_reg == 2'd0))) begin
        line_buffer_6_we0_local = 1'b1;
    end else begin
        line_buffer_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        line_buffer_7_ce0_local = 1'b1;
    end else begin
        line_buffer_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (select_ln119_reg_416_pp0_iter5_reg == 2'd1))) begin
        line_buffer_7_we0_local = 1'b1;
    end else begin
        line_buffer_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        line_buffer_8_ce0_local = 1'b1;
    end else begin
        line_buffer_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln119_reg_416_pp0_iter5_reg == 2'd0) & ~(select_ln119_reg_416_pp0_iter5_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        line_buffer_8_we0_local = 1'b1;
    end else begin
        line_buffer_8_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln119_1_fu_216_p2 = (x_fu_70 + 64'd1);

assign add_ln119_2_fu_207_p2 = (indvar_flatten111_fu_74 + 128'd1);

assign add_ln119_fu_263_p2 = (select_ln119_1_reg_421 + zext_ln114_cast_reg_407);

assign add_ln120_fu_242_p2 = (select_ln119_fu_222_p3 + 2'd1);

assign add_ln123_fu_278_p2 = (zext_ln120_1_fu_275_p1 + empty_reg_451);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_ready = ap_ready_sig;

assign brmerge47_demorgan_fu_301_p2 = (icmp_ln119_reg_431_pp0_iter5_reg & cmp155);

assign grp_fu_156_p1 = sext_ln75_cast_reg_397;

assign icmp_ln119_1_fu_202_p2 = ((indvar_flatten111_fu_74 == mul_ln114) ? 1'b1 : 1'b0);

assign icmp_ln119_fu_270_p2 = (($signed(add_ln119_fu_263_p2) < $signed(sext_ln75_1_cast_reg_402)) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_197_p2 = ((zext_ln120_fu_193_p1 == xor_ln114) ? 1'b1 : 1'b0);

assign line_buffer_6_address0 = line_buffer_6_addr_reg_436_pp0_iter5_reg;

assign line_buffer_6_ce0 = line_buffer_6_ce0_local;

assign line_buffer_6_d0 = select_ln124_fu_344_p3;

assign line_buffer_6_we0 = line_buffer_6_we0_local;

assign line_buffer_7_address0 = line_buffer_7_addr_reg_441_pp0_iter5_reg;

assign line_buffer_7_ce0 = line_buffer_7_ce0_local;

assign line_buffer_7_d0 = select_ln124_fu_344_p3;

assign line_buffer_7_we0 = line_buffer_7_we0_local;

assign line_buffer_8_address0 = line_buffer_8_addr_reg_446_pp0_iter5_reg;

assign line_buffer_8_ce0 = line_buffer_8_ce0_local;

assign line_buffer_8_d0 = select_ln124_fu_344_p3;

assign line_buffer_8_we0 = line_buffer_8_we0_local;

assign lshr_ln123_fu_315_p2 = axie4_data >> zext_ln123_fu_312_p1;

assign pixel_val_fu_336_p3 = ((tmp_fu_305_p3[0:0] == 1'b1) ? trunc_ln123_1_fu_328_p1 : trunc_ln123_2_fu_332_p1);

assign select_ln119_1_fu_230_p3 = ((icmp_ln120_fu_197_p2[0:0] == 1'b1) ? add_ln119_1_fu_216_p2 : x_fu_70);

assign select_ln119_fu_222_p3 = ((icmp_ln120_fu_197_p2[0:0] == 1'b1) ? 2'd0 : k_3_fu_66);

assign select_ln124_fu_344_p3 = ((brmerge47_demorgan_fu_301_p2[0:0] == 1'b1) ? pixel_val_fu_336_p3 : 8'd0);

assign sext_ln75_1_cast_fu_164_p1 = sext_ln75_1;

assign sext_ln75_cast_fu_160_p1 = $signed(sext_ln75);

assign shl_ln123_fu_323_p2 = axie4_data << zext_ln123_1_fu_320_p1;

assign sub_ln123_fu_295_p2 = (32'd0 - trunc_ln5_fu_287_p3);

assign tmp_fu_305_p3 = add_ln123_reg_456[32'd60];

assign trunc_ln119_fu_238_p1 = select_ln119_1_fu_230_p3[60:0];

assign trunc_ln123_1_fu_328_p1 = shl_ln123_fu_323_p2[7:0];

assign trunc_ln123_2_fu_332_p1 = lshr_ln123_fu_315_p2[7:0];

assign trunc_ln123_fu_283_p1 = add_ln123_fu_278_p2[28:0];

assign trunc_ln5_fu_287_p3 = {{trunc_ln123_fu_283_p1}, {3'd0}};

assign zext_ln114_cast_fu_168_p1 = zext_ln114;

assign zext_ln120_1_fu_275_p1 = select_ln119_reg_416_pp0_iter4_reg;

assign zext_ln120_fu_193_p1 = k_3_fu_66;

assign zext_ln123_1_fu_320_p1 = sub_ln123_reg_466;

assign zext_ln123_fu_312_p1 = trunc_ln5_reg_461;

always @ (posedge ap_clk) begin
    sext_ln75_1_cast_reg_402[63:31] <= 33'b000000000000000000000000000000000;
    zext_ln114_cast_reg_407[63:31] <= 33'b000000000000000000000000000000000;
    trunc_ln5_reg_461[2:0] <= 3'b000;
    sub_ln123_reg_466[2:0] <= 3'b000;
end

endmodule //filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11
