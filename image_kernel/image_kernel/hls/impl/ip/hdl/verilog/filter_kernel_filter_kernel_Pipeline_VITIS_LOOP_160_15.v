// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_160_15 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        channels,
        window_load,
        window_1_load,
        window_2_load,
        window_9_load,
        window_10_load,
        window_11_load,
        window_18_load,
        window_19_load,
        window_20_load,
        window_3_load_1,
        window_4_load_1,
        window_5_load_1,
        window_12_load_2,
        window_13_load_2,
        window_14_load_2,
        window_21_load_1,
        window_22_load_1,
        window_23_load_1,
        window_6_load_1,
        window_7_load_1,
        window_8_load_1,
        window_15_load_1,
        window_16_load_1,
        window_17_load_1,
        window_24_load_1,
        window_25_load_1,
        window_26_load_1,
        mux_case_014216_reload,
        mux_case_032243_reload,
        mux_case_097270_reload,
        mux_case_116225_reload,
        mux_case_134252_reload,
        mux_case_199279_reload,
        mux_case_218234_reload,
        mux_case_236261_reload,
        mux_case_2101288_reload,
        filter_divisor,
        output_pixel_2_out,
        output_pixel_2_out_ap_vld,
        output_pixel_1_out,
        output_pixel_1_out_ap_vld,
        output_pixel_out,
        output_pixel_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] channels;
input  [7:0] window_load;
input  [7:0] window_1_load;
input  [7:0] window_2_load;
input  [7:0] window_9_load;
input  [7:0] window_10_load;
input  [7:0] window_11_load;
input  [7:0] window_18_load;
input  [7:0] window_19_load;
input  [7:0] window_20_load;
input  [7:0] window_3_load_1;
input  [7:0] window_4_load_1;
input  [7:0] window_5_load_1;
input  [7:0] window_12_load_2;
input  [7:0] window_13_load_2;
input  [7:0] window_14_load_2;
input  [7:0] window_21_load_1;
input  [7:0] window_22_load_1;
input  [7:0] window_23_load_1;
input  [7:0] window_6_load_1;
input  [7:0] window_7_load_1;
input  [7:0] window_8_load_1;
input  [7:0] window_15_load_1;
input  [7:0] window_16_load_1;
input  [7:0] window_17_load_1;
input  [7:0] window_24_load_1;
input  [7:0] window_25_load_1;
input  [7:0] window_26_load_1;
input  [31:0] mux_case_014216_reload;
input  [31:0] mux_case_032243_reload;
input  [31:0] mux_case_097270_reload;
input  [31:0] mux_case_116225_reload;
input  [31:0] mux_case_134252_reload;
input  [31:0] mux_case_199279_reload;
input  [31:0] mux_case_218234_reload;
input  [31:0] mux_case_236261_reload;
input  [31:0] mux_case_2101288_reload;
input  [31:0] filter_divisor;
output  [7:0] output_pixel_2_out;
output   output_pixel_2_out_ap_vld;
output  [7:0] output_pixel_1_out;
output   output_pixel_1_out_ap_vld;
output  [7:0] output_pixel_out;
output   output_pixel_out_ap_vld;

reg ap_idle;
reg output_pixel_2_out_ap_vld;
reg output_pixel_1_out_ap_vld;
reg output_pixel_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln160_fu_535_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [1:0] k_reg_1138;
reg   [1:0] k_reg_1138_pp0_iter1_reg;
reg   [1:0] k_reg_1138_pp0_iter2_reg;
reg   [1:0] k_reg_1138_pp0_iter3_reg;
reg   [1:0] k_reg_1138_pp0_iter4_reg;
reg   [1:0] k_reg_1138_pp0_iter5_reg;
reg   [1:0] k_reg_1138_pp0_iter6_reg;
reg   [1:0] k_reg_1138_pp0_iter7_reg;
reg   [1:0] k_reg_1138_pp0_iter8_reg;
reg   [1:0] k_reg_1138_pp0_iter9_reg;
reg   [1:0] k_reg_1138_pp0_iter10_reg;
reg   [1:0] k_reg_1138_pp0_iter11_reg;
reg   [1:0] k_reg_1138_pp0_iter12_reg;
reg   [1:0] k_reg_1138_pp0_iter13_reg;
reg   [1:0] k_reg_1138_pp0_iter14_reg;
reg   [1:0] k_reg_1138_pp0_iter15_reg;
reg   [1:0] k_reg_1138_pp0_iter16_reg;
reg   [1:0] k_reg_1138_pp0_iter17_reg;
reg   [1:0] k_reg_1138_pp0_iter18_reg;
reg   [1:0] k_reg_1138_pp0_iter19_reg;
reg   [1:0] k_reg_1138_pp0_iter20_reg;
reg   [1:0] k_reg_1138_pp0_iter21_reg;
reg   [1:0] k_reg_1138_pp0_iter22_reg;
reg   [1:0] k_reg_1138_pp0_iter23_reg;
reg   [1:0] k_reg_1138_pp0_iter24_reg;
reg   [1:0] k_reg_1138_pp0_iter25_reg;
reg   [1:0] k_reg_1138_pp0_iter26_reg;
reg   [1:0] k_reg_1138_pp0_iter27_reg;
reg   [1:0] k_reg_1138_pp0_iter28_reg;
reg   [1:0] k_reg_1138_pp0_iter29_reg;
reg   [1:0] k_reg_1138_pp0_iter30_reg;
reg   [1:0] k_reg_1138_pp0_iter31_reg;
reg   [1:0] k_reg_1138_pp0_iter32_reg;
reg   [1:0] k_reg_1138_pp0_iter33_reg;
reg   [1:0] k_reg_1138_pp0_iter34_reg;
reg   [1:0] k_reg_1138_pp0_iter35_reg;
reg   [1:0] k_reg_1138_pp0_iter36_reg;
reg   [1:0] k_reg_1138_pp0_iter37_reg;
reg   [1:0] k_reg_1138_pp0_iter38_reg;
reg   [1:0] k_reg_1138_pp0_iter39_reg;
reg   [1:0] k_reg_1138_pp0_iter40_reg;
reg   [1:0] k_reg_1138_pp0_iter41_reg;
reg   [1:0] k_reg_1138_pp0_iter42_reg;
reg   [1:0] k_reg_1138_pp0_iter43_reg;
reg   [1:0] k_reg_1138_pp0_iter44_reg;
reg   [1:0] k_reg_1138_pp0_iter45_reg;
reg   [1:0] k_reg_1138_pp0_iter46_reg;
reg   [1:0] k_reg_1138_pp0_iter47_reg;
reg   [1:0] k_reg_1138_pp0_iter48_reg;
reg   [1:0] k_reg_1138_pp0_iter49_reg;
reg   [1:0] k_reg_1138_pp0_iter50_reg;
reg   [1:0] k_reg_1138_pp0_iter51_reg;
reg   [1:0] k_reg_1138_pp0_iter52_reg;
reg   [1:0] k_reg_1138_pp0_iter53_reg;
reg   [1:0] k_reg_1138_pp0_iter54_reg;
reg   [1:0] k_reg_1138_pp0_iter55_reg;
reg   [1:0] k_reg_1138_pp0_iter56_reg;
reg   [1:0] k_reg_1138_pp0_iter57_reg;
reg   [0:0] icmp_ln160_reg_1150;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter1_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter2_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter3_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter4_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter5_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter6_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter7_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter8_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter9_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter10_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter11_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter12_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter13_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter14_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter15_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter16_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter17_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter18_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter19_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter20_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter21_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter22_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter23_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter24_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter25_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter26_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter27_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter28_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter29_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter30_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter31_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter32_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter33_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter34_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter35_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter36_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter37_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter38_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter39_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter40_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter41_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter42_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter43_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter44_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter45_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter46_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter47_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter48_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter49_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter50_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter51_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter52_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter53_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter54_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter55_reg;
reg   [0:0] icmp_ln160_reg_1150_pp0_iter56_reg;
wire   [7:0] tmp_s_fu_547_p9;
reg   [7:0] tmp_s_reg_1154;
wire   [7:0] tmp_3_fu_576_p9;
reg   [7:0] tmp_3_reg_1164;
wire   [31:0] grp_fu_496_p1;
reg   [31:0] conv_reg_1169;
wire   [7:0] tmp_6_fu_596_p9;
reg   [7:0] tmp_6_reg_1179;
wire   [31:0] grp_fu_456_p2;
reg   [31:0] mul_reg_1184;
wire   [31:0] grp_fu_499_p1;
reg   [31:0] conv268_1_reg_1189;
wire   [7:0] tmp_1_fu_616_p9;
reg   [7:0] tmp_1_reg_1199;
wire   [31:0] grp_fu_419_p2;
reg   [31:0] sum_reg_1204;
wire   [31:0] grp_fu_460_p2;
reg   [31:0] mul273_1_reg_1209;
wire   [31:0] grp_fu_502_p1;
reg   [31:0] conv268_2_reg_1214;
wire   [7:0] tmp_4_fu_636_p9;
reg   [7:0] tmp_4_reg_1224;
wire   [31:0] grp_fu_424_p2;
reg   [31:0] sum_1_reg_1229;
wire   [31:0] grp_fu_464_p2;
reg   [31:0] mul273_2_reg_1234;
wire   [31:0] grp_fu_505_p1;
reg   [31:0] conv268_s_reg_1239;
wire   [7:0] tmp_7_fu_656_p9;
reg   [7:0] tmp_7_reg_1249;
wire   [31:0] grp_fu_428_p2;
reg   [31:0] sum_2_reg_1254;
wire   [31:0] grp_fu_468_p2;
reg   [31:0] mul273_s_reg_1259;
wire   [31:0] grp_fu_508_p1;
reg   [31:0] conv268_1_1_reg_1264;
wire   [7:0] tmp_2_fu_676_p9;
reg   [7:0] tmp_2_reg_1274;
wire   [31:0] grp_fu_432_p2;
reg   [31:0] sum_3_reg_1279;
wire   [31:0] grp_fu_472_p2;
reg   [31:0] mul273_1_1_reg_1284;
wire   [31:0] grp_fu_511_p1;
reg   [31:0] conv268_2_1_reg_1289;
wire   [7:0] tmp_5_fu_696_p9;
reg   [7:0] tmp_5_reg_1299;
wire   [31:0] grp_fu_436_p2;
reg   [31:0] sum_4_reg_1304;
wire   [31:0] grp_fu_476_p2;
reg   [31:0] mul273_2_1_reg_1309;
wire   [31:0] grp_fu_514_p1;
reg   [31:0] conv268_3_reg_1314;
wire   [7:0] tmp_8_fu_716_p9;
reg   [7:0] tmp_8_reg_1324;
wire   [31:0] grp_fu_440_p2;
reg   [31:0] sum_5_reg_1329;
wire   [31:0] grp_fu_480_p2;
reg   [31:0] mul273_3_reg_1334;
wire   [31:0] grp_fu_517_p1;
reg   [31:0] conv268_1_2_reg_1339;
wire   [31:0] grp_fu_444_p2;
reg   [31:0] sum_6_reg_1349;
wire   [31:0] grp_fu_484_p2;
reg   [31:0] mul273_1_2_reg_1354;
wire   [31:0] grp_fu_520_p1;
reg   [31:0] conv268_2_2_reg_1359;
wire   [31:0] grp_fu_448_p2;
reg   [31:0] sum_7_reg_1364;
wire   [31:0] grp_fu_488_p2;
reg   [31:0] mul273_2_2_reg_1369;
wire   [31:0] grp_fu_452_p2;
reg   [31:0] sum_8_reg_1374;
wire   [31:0] grp_fu_492_p2;
reg   [31:0] dc_reg_1379;
reg   [0:0] xs_sign_reg_1384;
wire   [31:0] val_fu_849_p3;
reg   [31:0] val_reg_1389;
reg   [1:0] k_6_fu_154;
wire   [1:0] add_ln160_fu_541_p2;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_k;
wire    ap_block_pp0_stage0;
reg   [7:0] output_pixel_fu_158;
wire   [7:0] output_pixel_3_fu_908_p3;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg   [7:0] output_pixel_1_fu_162;
reg   [7:0] output_pixel_2_fu_166;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_496_p0;
wire   [31:0] grp_fu_499_p0;
wire   [31:0] grp_fu_502_p0;
wire   [31:0] grp_fu_505_p0;
wire   [31:0] grp_fu_508_p0;
wire   [31:0] grp_fu_511_p0;
wire   [31:0] grp_fu_514_p0;
wire   [31:0] grp_fu_517_p0;
wire   [31:0] grp_fu_520_p0;
wire   [31:0] zext_ln160_fu_531_p1;
wire   [7:0] tmp_s_fu_547_p7;
wire   [7:0] tmp_3_fu_576_p7;
wire   [7:0] tmp_6_fu_596_p7;
wire   [7:0] tmp_1_fu_616_p7;
wire   [7:0] tmp_4_fu_636_p7;
wire   [7:0] tmp_7_fu_656_p7;
wire   [7:0] tmp_2_fu_676_p7;
wire   [7:0] tmp_5_fu_696_p7;
wire   [7:0] tmp_8_fu_716_p7;
wire   [31:0] data_fu_736_p1;
wire   [22:0] trunc_ln342_fu_755_p1;
wire   [24:0] mantissa_fu_759_p4;
wire   [7:0] xs_exp_fu_747_p3;
wire   [8:0] zext_ln317_fu_773_p1;
wire   [8:0] add_ln317_fu_777_p2;
wire   [7:0] sub_ln18_fu_791_p2;
wire   [0:0] tmp_fu_783_p3;
wire  signed [8:0] sext_ln18_fu_797_p1;
wire   [8:0] select_ln18_fu_801_p3;
wire  signed [31:0] sext_ln18_1_fu_809_p1;
wire   [78:0] zext_ln15_fu_769_p1;
wire   [78:0] zext_ln18_fu_813_p1;
wire   [78:0] lshr_ln18_fu_817_p2;
wire   [78:0] shl_ln18_fu_823_p2;
wire   [31:0] tmp_9_fu_829_p4;
wire   [31:0] tmp_10_fu_839_p4;
wire   [31:0] result_1_fu_857_p2;
wire   [31:0] result_2_fu_862_p3;
wire   [0:0] tmp_11_fu_872_p3;
wire   [30:0] trunc_ln58_fu_868_p1;
wire   [30:0] result_3_fu_880_p3;
wire   [22:0] tmp_12_fu_888_p4;
wire   [0:0] icmp_ln175_fu_898_p2;
wire   [7:0] trunc_ln176_fu_904_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [1:0] tmp_s_fu_547_p1;
wire   [1:0] tmp_s_fu_547_p3;
wire  signed [1:0] tmp_s_fu_547_p5;
wire   [1:0] tmp_3_fu_576_p1;
wire   [1:0] tmp_3_fu_576_p3;
wire  signed [1:0] tmp_3_fu_576_p5;
wire   [1:0] tmp_6_fu_596_p1;
wire   [1:0] tmp_6_fu_596_p3;
wire  signed [1:0] tmp_6_fu_596_p5;
wire   [1:0] tmp_1_fu_616_p1;
wire   [1:0] tmp_1_fu_616_p3;
wire  signed [1:0] tmp_1_fu_616_p5;
wire   [1:0] tmp_4_fu_636_p1;
wire   [1:0] tmp_4_fu_636_p3;
wire  signed [1:0] tmp_4_fu_636_p5;
wire   [1:0] tmp_7_fu_656_p1;
wire   [1:0] tmp_7_fu_656_p3;
wire  signed [1:0] tmp_7_fu_656_p5;
wire   [1:0] tmp_2_fu_676_p1;
wire   [1:0] tmp_2_fu_676_p3;
wire  signed [1:0] tmp_2_fu_676_p5;
wire   [1:0] tmp_5_fu_696_p1;
wire   [1:0] tmp_5_fu_696_p3;
wire  signed [1:0] tmp_5_fu_696_p5;
wire   [1:0] tmp_8_fu_716_p1;
wire   [1:0] tmp_8_fu_716_p3;
wire  signed [1:0] tmp_8_fu_716_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 k_6_fu_154 = 2'd0;
#0 output_pixel_fu_158 = 8'd0;
#0 output_pixel_1_fu_162 = 8'd0;
#0 output_pixel_2_fu_166 = 8'd0;
#0 ap_done_reg = 1'b0;
end

filter_kernel_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_reg_1184),
    .din1(32'd0),
    .ce(1'b1),
    .dout(grp_fu_419_p2)
);

filter_kernel_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_reg_1204),
    .din1(mul273_1_reg_1209),
    .ce(1'b1),
    .dout(grp_fu_424_p2)
);

filter_kernel_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_1_reg_1229),
    .din1(mul273_2_reg_1234),
    .ce(1'b1),
    .dout(grp_fu_428_p2)
);

filter_kernel_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_2_reg_1254),
    .din1(mul273_s_reg_1259),
    .ce(1'b1),
    .dout(grp_fu_432_p2)
);

filter_kernel_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_3_reg_1279),
    .din1(mul273_1_1_reg_1284),
    .ce(1'b1),
    .dout(grp_fu_436_p2)
);

filter_kernel_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_4_reg_1304),
    .din1(mul273_2_1_reg_1309),
    .ce(1'b1),
    .dout(grp_fu_440_p2)
);

filter_kernel_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_5_reg_1329),
    .din1(mul273_3_reg_1334),
    .ce(1'b1),
    .dout(grp_fu_444_p2)
);

filter_kernel_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_6_reg_1349),
    .din1(mul273_1_2_reg_1354),
    .ce(1'b1),
    .dout(grp_fu_448_p2)
);

filter_kernel_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_7_reg_1364),
    .din1(mul273_2_2_reg_1369),
    .ce(1'b1),
    .dout(grp_fu_452_p2)
);

filter_kernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_reg_1169),
    .din1(mux_case_014216_reload),
    .ce(1'b1),
    .dout(grp_fu_456_p2)
);

filter_kernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv268_1_reg_1189),
    .din1(mux_case_032243_reload),
    .ce(1'b1),
    .dout(grp_fu_460_p2)
);

filter_kernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv268_2_reg_1214),
    .din1(mux_case_097270_reload),
    .ce(1'b1),
    .dout(grp_fu_464_p2)
);

filter_kernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv268_s_reg_1239),
    .din1(mux_case_116225_reload),
    .ce(1'b1),
    .dout(grp_fu_468_p2)
);

filter_kernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv268_1_1_reg_1264),
    .din1(mux_case_134252_reload),
    .ce(1'b1),
    .dout(grp_fu_472_p2)
);

filter_kernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv268_2_1_reg_1289),
    .din1(mux_case_199279_reload),
    .ce(1'b1),
    .dout(grp_fu_476_p2)
);

filter_kernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U86(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv268_3_reg_1314),
    .din1(mux_case_218234_reload),
    .ce(1'b1),
    .dout(grp_fu_480_p2)
);

filter_kernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U87(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv268_1_2_reg_1339),
    .din1(mux_case_236261_reload),
    .ce(1'b1),
    .dout(grp_fu_484_p2)
);

filter_kernel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U88(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv268_2_2_reg_1359),
    .din1(mux_case_2101288_reload),
    .ce(1'b1),
    .dout(grp_fu_488_p2)
);

filter_kernel_fdiv_32ns_32ns_32_12_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_12_no_dsp_1_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_8_reg_1374),
    .din1(filter_divisor),
    .ce(1'b1),
    .dout(grp_fu_492_p2)
);

filter_kernel_uitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_4_no_dsp_1_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_496_p0),
    .ce(1'b1),
    .dout(grp_fu_496_p1)
);

filter_kernel_uitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_4_no_dsp_1_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_499_p0),
    .ce(1'b1),
    .dout(grp_fu_499_p1)
);

filter_kernel_uitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_4_no_dsp_1_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_502_p0),
    .ce(1'b1),
    .dout(grp_fu_502_p1)
);

filter_kernel_uitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_4_no_dsp_1_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_505_p0),
    .ce(1'b1),
    .dout(grp_fu_505_p1)
);

filter_kernel_uitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_4_no_dsp_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_508_p0),
    .ce(1'b1),
    .dout(grp_fu_508_p1)
);

filter_kernel_uitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_4_no_dsp_1_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_511_p0),
    .ce(1'b1),
    .dout(grp_fu_511_p1)
);

filter_kernel_uitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_4_no_dsp_1_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_514_p0),
    .ce(1'b1),
    .dout(grp_fu_514_p1)
);

filter_kernel_uitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_4_no_dsp_1_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_517_p0),
    .ce(1'b1),
    .dout(grp_fu_517_p1)
);

filter_kernel_uitofp_32ns_32_4_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_4_no_dsp_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_520_p0),
    .ce(1'b1),
    .dout(grp_fu_520_p1)
);

(* dissolve_hierarchy = "yes" *) filter_kernel_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U99(
    .din0(window_load),
    .din1(window_1_load),
    .din2(window_2_load),
    .def(tmp_s_fu_547_p7),
    .sel(ap_sig_allocacmp_k),
    .dout(tmp_s_fu_547_p9)
);

(* dissolve_hierarchy = "yes" *) filter_kernel_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U100(
    .din0(window_3_load_1),
    .din1(window_4_load_1),
    .din2(window_5_load_1),
    .def(tmp_3_fu_576_p7),
    .sel(k_reg_1138_pp0_iter3_reg),
    .dout(tmp_3_fu_576_p9)
);

(* dissolve_hierarchy = "yes" *) filter_kernel_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U101(
    .din0(window_6_load_1),
    .din1(window_7_load_1),
    .din2(window_8_load_1),
    .def(tmp_6_fu_596_p7),
    .sel(k_reg_1138_pp0_iter7_reg),
    .dout(tmp_6_fu_596_p9)
);

(* dissolve_hierarchy = "yes" *) filter_kernel_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U102(
    .din0(window_9_load),
    .din1(window_10_load),
    .din2(window_11_load),
    .def(tmp_1_fu_616_p7),
    .sel(k_reg_1138_pp0_iter11_reg),
    .dout(tmp_1_fu_616_p9)
);

(* dissolve_hierarchy = "yes" *) filter_kernel_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U103(
    .din0(window_12_load_2),
    .din1(window_13_load_2),
    .din2(window_14_load_2),
    .def(tmp_4_fu_636_p7),
    .sel(k_reg_1138_pp0_iter15_reg),
    .dout(tmp_4_fu_636_p9)
);

(* dissolve_hierarchy = "yes" *) filter_kernel_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U104(
    .din0(window_15_load_1),
    .din1(window_16_load_1),
    .din2(window_17_load_1),
    .def(tmp_7_fu_656_p7),
    .sel(k_reg_1138_pp0_iter19_reg),
    .dout(tmp_7_fu_656_p9)
);

(* dissolve_hierarchy = "yes" *) filter_kernel_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U105(
    .din0(window_18_load),
    .din1(window_19_load),
    .din2(window_20_load),
    .def(tmp_2_fu_676_p7),
    .sel(k_reg_1138_pp0_iter23_reg),
    .dout(tmp_2_fu_676_p9)
);

(* dissolve_hierarchy = "yes" *) filter_kernel_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U106(
    .din0(window_21_load_1),
    .din1(window_22_load_1),
    .din2(window_23_load_1),
    .def(tmp_5_fu_696_p7),
    .sel(k_reg_1138_pp0_iter27_reg),
    .dout(tmp_5_fu_696_p9)
);

(* dissolve_hierarchy = "yes" *) filter_kernel_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U107(
    .din0(window_24_load_1),
    .din1(window_25_load_1),
    .din2(window_26_load_1),
    .def(tmp_8_fu_716_p7),
    .sel(k_reg_1138_pp0_iter31_reg),
    .dout(tmp_8_fu_716_p9)
);

filter_kernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter57_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln160_fu_535_p2 == 1'd1))) begin
            k_6_fu_154 <= add_ln160_fu_541_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_6_fu_154 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        conv268_1_1_reg_1264 <= grp_fu_508_p1;
        conv268_1_2_reg_1339 <= grp_fu_517_p1;
        conv268_1_reg_1189 <= grp_fu_499_p1;
        conv268_2_1_reg_1289 <= grp_fu_511_p1;
        conv268_2_2_reg_1359 <= grp_fu_520_p1;
        conv268_2_reg_1214 <= grp_fu_502_p1;
        conv268_3_reg_1314 <= grp_fu_514_p1;
        conv268_s_reg_1239 <= grp_fu_505_p1;
        conv_reg_1169 <= grp_fu_496_p1;
        dc_reg_1379 <= grp_fu_492_p2;
        icmp_ln160_reg_1150_pp0_iter10_reg <= icmp_ln160_reg_1150_pp0_iter9_reg;
        icmp_ln160_reg_1150_pp0_iter11_reg <= icmp_ln160_reg_1150_pp0_iter10_reg;
        icmp_ln160_reg_1150_pp0_iter12_reg <= icmp_ln160_reg_1150_pp0_iter11_reg;
        icmp_ln160_reg_1150_pp0_iter13_reg <= icmp_ln160_reg_1150_pp0_iter12_reg;
        icmp_ln160_reg_1150_pp0_iter14_reg <= icmp_ln160_reg_1150_pp0_iter13_reg;
        icmp_ln160_reg_1150_pp0_iter15_reg <= icmp_ln160_reg_1150_pp0_iter14_reg;
        icmp_ln160_reg_1150_pp0_iter16_reg <= icmp_ln160_reg_1150_pp0_iter15_reg;
        icmp_ln160_reg_1150_pp0_iter17_reg <= icmp_ln160_reg_1150_pp0_iter16_reg;
        icmp_ln160_reg_1150_pp0_iter18_reg <= icmp_ln160_reg_1150_pp0_iter17_reg;
        icmp_ln160_reg_1150_pp0_iter19_reg <= icmp_ln160_reg_1150_pp0_iter18_reg;
        icmp_ln160_reg_1150_pp0_iter20_reg <= icmp_ln160_reg_1150_pp0_iter19_reg;
        icmp_ln160_reg_1150_pp0_iter21_reg <= icmp_ln160_reg_1150_pp0_iter20_reg;
        icmp_ln160_reg_1150_pp0_iter22_reg <= icmp_ln160_reg_1150_pp0_iter21_reg;
        icmp_ln160_reg_1150_pp0_iter23_reg <= icmp_ln160_reg_1150_pp0_iter22_reg;
        icmp_ln160_reg_1150_pp0_iter24_reg <= icmp_ln160_reg_1150_pp0_iter23_reg;
        icmp_ln160_reg_1150_pp0_iter25_reg <= icmp_ln160_reg_1150_pp0_iter24_reg;
        icmp_ln160_reg_1150_pp0_iter26_reg <= icmp_ln160_reg_1150_pp0_iter25_reg;
        icmp_ln160_reg_1150_pp0_iter27_reg <= icmp_ln160_reg_1150_pp0_iter26_reg;
        icmp_ln160_reg_1150_pp0_iter28_reg <= icmp_ln160_reg_1150_pp0_iter27_reg;
        icmp_ln160_reg_1150_pp0_iter29_reg <= icmp_ln160_reg_1150_pp0_iter28_reg;
        icmp_ln160_reg_1150_pp0_iter2_reg <= icmp_ln160_reg_1150_pp0_iter1_reg;
        icmp_ln160_reg_1150_pp0_iter30_reg <= icmp_ln160_reg_1150_pp0_iter29_reg;
        icmp_ln160_reg_1150_pp0_iter31_reg <= icmp_ln160_reg_1150_pp0_iter30_reg;
        icmp_ln160_reg_1150_pp0_iter32_reg <= icmp_ln160_reg_1150_pp0_iter31_reg;
        icmp_ln160_reg_1150_pp0_iter33_reg <= icmp_ln160_reg_1150_pp0_iter32_reg;
        icmp_ln160_reg_1150_pp0_iter34_reg <= icmp_ln160_reg_1150_pp0_iter33_reg;
        icmp_ln160_reg_1150_pp0_iter35_reg <= icmp_ln160_reg_1150_pp0_iter34_reg;
        icmp_ln160_reg_1150_pp0_iter36_reg <= icmp_ln160_reg_1150_pp0_iter35_reg;
        icmp_ln160_reg_1150_pp0_iter37_reg <= icmp_ln160_reg_1150_pp0_iter36_reg;
        icmp_ln160_reg_1150_pp0_iter38_reg <= icmp_ln160_reg_1150_pp0_iter37_reg;
        icmp_ln160_reg_1150_pp0_iter39_reg <= icmp_ln160_reg_1150_pp0_iter38_reg;
        icmp_ln160_reg_1150_pp0_iter3_reg <= icmp_ln160_reg_1150_pp0_iter2_reg;
        icmp_ln160_reg_1150_pp0_iter40_reg <= icmp_ln160_reg_1150_pp0_iter39_reg;
        icmp_ln160_reg_1150_pp0_iter41_reg <= icmp_ln160_reg_1150_pp0_iter40_reg;
        icmp_ln160_reg_1150_pp0_iter42_reg <= icmp_ln160_reg_1150_pp0_iter41_reg;
        icmp_ln160_reg_1150_pp0_iter43_reg <= icmp_ln160_reg_1150_pp0_iter42_reg;
        icmp_ln160_reg_1150_pp0_iter44_reg <= icmp_ln160_reg_1150_pp0_iter43_reg;
        icmp_ln160_reg_1150_pp0_iter45_reg <= icmp_ln160_reg_1150_pp0_iter44_reg;
        icmp_ln160_reg_1150_pp0_iter46_reg <= icmp_ln160_reg_1150_pp0_iter45_reg;
        icmp_ln160_reg_1150_pp0_iter47_reg <= icmp_ln160_reg_1150_pp0_iter46_reg;
        icmp_ln160_reg_1150_pp0_iter48_reg <= icmp_ln160_reg_1150_pp0_iter47_reg;
        icmp_ln160_reg_1150_pp0_iter49_reg <= icmp_ln160_reg_1150_pp0_iter48_reg;
        icmp_ln160_reg_1150_pp0_iter4_reg <= icmp_ln160_reg_1150_pp0_iter3_reg;
        icmp_ln160_reg_1150_pp0_iter50_reg <= icmp_ln160_reg_1150_pp0_iter49_reg;
        icmp_ln160_reg_1150_pp0_iter51_reg <= icmp_ln160_reg_1150_pp0_iter50_reg;
        icmp_ln160_reg_1150_pp0_iter52_reg <= icmp_ln160_reg_1150_pp0_iter51_reg;
        icmp_ln160_reg_1150_pp0_iter53_reg <= icmp_ln160_reg_1150_pp0_iter52_reg;
        icmp_ln160_reg_1150_pp0_iter54_reg <= icmp_ln160_reg_1150_pp0_iter53_reg;
        icmp_ln160_reg_1150_pp0_iter55_reg <= icmp_ln160_reg_1150_pp0_iter54_reg;
        icmp_ln160_reg_1150_pp0_iter56_reg <= icmp_ln160_reg_1150_pp0_iter55_reg;
        icmp_ln160_reg_1150_pp0_iter5_reg <= icmp_ln160_reg_1150_pp0_iter4_reg;
        icmp_ln160_reg_1150_pp0_iter6_reg <= icmp_ln160_reg_1150_pp0_iter5_reg;
        icmp_ln160_reg_1150_pp0_iter7_reg <= icmp_ln160_reg_1150_pp0_iter6_reg;
        icmp_ln160_reg_1150_pp0_iter8_reg <= icmp_ln160_reg_1150_pp0_iter7_reg;
        icmp_ln160_reg_1150_pp0_iter9_reg <= icmp_ln160_reg_1150_pp0_iter8_reg;
        k_reg_1138_pp0_iter10_reg <= k_reg_1138_pp0_iter9_reg;
        k_reg_1138_pp0_iter11_reg <= k_reg_1138_pp0_iter10_reg;
        k_reg_1138_pp0_iter12_reg <= k_reg_1138_pp0_iter11_reg;
        k_reg_1138_pp0_iter13_reg <= k_reg_1138_pp0_iter12_reg;
        k_reg_1138_pp0_iter14_reg <= k_reg_1138_pp0_iter13_reg;
        k_reg_1138_pp0_iter15_reg <= k_reg_1138_pp0_iter14_reg;
        k_reg_1138_pp0_iter16_reg <= k_reg_1138_pp0_iter15_reg;
        k_reg_1138_pp0_iter17_reg <= k_reg_1138_pp0_iter16_reg;
        k_reg_1138_pp0_iter18_reg <= k_reg_1138_pp0_iter17_reg;
        k_reg_1138_pp0_iter19_reg <= k_reg_1138_pp0_iter18_reg;
        k_reg_1138_pp0_iter20_reg <= k_reg_1138_pp0_iter19_reg;
        k_reg_1138_pp0_iter21_reg <= k_reg_1138_pp0_iter20_reg;
        k_reg_1138_pp0_iter22_reg <= k_reg_1138_pp0_iter21_reg;
        k_reg_1138_pp0_iter23_reg <= k_reg_1138_pp0_iter22_reg;
        k_reg_1138_pp0_iter24_reg <= k_reg_1138_pp0_iter23_reg;
        k_reg_1138_pp0_iter25_reg <= k_reg_1138_pp0_iter24_reg;
        k_reg_1138_pp0_iter26_reg <= k_reg_1138_pp0_iter25_reg;
        k_reg_1138_pp0_iter27_reg <= k_reg_1138_pp0_iter26_reg;
        k_reg_1138_pp0_iter28_reg <= k_reg_1138_pp0_iter27_reg;
        k_reg_1138_pp0_iter29_reg <= k_reg_1138_pp0_iter28_reg;
        k_reg_1138_pp0_iter2_reg <= k_reg_1138_pp0_iter1_reg;
        k_reg_1138_pp0_iter30_reg <= k_reg_1138_pp0_iter29_reg;
        k_reg_1138_pp0_iter31_reg <= k_reg_1138_pp0_iter30_reg;
        k_reg_1138_pp0_iter32_reg <= k_reg_1138_pp0_iter31_reg;
        k_reg_1138_pp0_iter33_reg <= k_reg_1138_pp0_iter32_reg;
        k_reg_1138_pp0_iter34_reg <= k_reg_1138_pp0_iter33_reg;
        k_reg_1138_pp0_iter35_reg <= k_reg_1138_pp0_iter34_reg;
        k_reg_1138_pp0_iter36_reg <= k_reg_1138_pp0_iter35_reg;
        k_reg_1138_pp0_iter37_reg <= k_reg_1138_pp0_iter36_reg;
        k_reg_1138_pp0_iter38_reg <= k_reg_1138_pp0_iter37_reg;
        k_reg_1138_pp0_iter39_reg <= k_reg_1138_pp0_iter38_reg;
        k_reg_1138_pp0_iter3_reg <= k_reg_1138_pp0_iter2_reg;
        k_reg_1138_pp0_iter40_reg <= k_reg_1138_pp0_iter39_reg;
        k_reg_1138_pp0_iter41_reg <= k_reg_1138_pp0_iter40_reg;
        k_reg_1138_pp0_iter42_reg <= k_reg_1138_pp0_iter41_reg;
        k_reg_1138_pp0_iter43_reg <= k_reg_1138_pp0_iter42_reg;
        k_reg_1138_pp0_iter44_reg <= k_reg_1138_pp0_iter43_reg;
        k_reg_1138_pp0_iter45_reg <= k_reg_1138_pp0_iter44_reg;
        k_reg_1138_pp0_iter46_reg <= k_reg_1138_pp0_iter45_reg;
        k_reg_1138_pp0_iter47_reg <= k_reg_1138_pp0_iter46_reg;
        k_reg_1138_pp0_iter48_reg <= k_reg_1138_pp0_iter47_reg;
        k_reg_1138_pp0_iter49_reg <= k_reg_1138_pp0_iter48_reg;
        k_reg_1138_pp0_iter4_reg <= k_reg_1138_pp0_iter3_reg;
        k_reg_1138_pp0_iter50_reg <= k_reg_1138_pp0_iter49_reg;
        k_reg_1138_pp0_iter51_reg <= k_reg_1138_pp0_iter50_reg;
        k_reg_1138_pp0_iter52_reg <= k_reg_1138_pp0_iter51_reg;
        k_reg_1138_pp0_iter53_reg <= k_reg_1138_pp0_iter52_reg;
        k_reg_1138_pp0_iter54_reg <= k_reg_1138_pp0_iter53_reg;
        k_reg_1138_pp0_iter55_reg <= k_reg_1138_pp0_iter54_reg;
        k_reg_1138_pp0_iter56_reg <= k_reg_1138_pp0_iter55_reg;
        k_reg_1138_pp0_iter57_reg <= k_reg_1138_pp0_iter56_reg;
        k_reg_1138_pp0_iter5_reg <= k_reg_1138_pp0_iter4_reg;
        k_reg_1138_pp0_iter6_reg <= k_reg_1138_pp0_iter5_reg;
        k_reg_1138_pp0_iter7_reg <= k_reg_1138_pp0_iter6_reg;
        k_reg_1138_pp0_iter8_reg <= k_reg_1138_pp0_iter7_reg;
        k_reg_1138_pp0_iter9_reg <= k_reg_1138_pp0_iter8_reg;
        mul273_1_1_reg_1284 <= grp_fu_472_p2;
        mul273_1_2_reg_1354 <= grp_fu_484_p2;
        mul273_1_reg_1209 <= grp_fu_460_p2;
        mul273_2_1_reg_1309 <= grp_fu_476_p2;
        mul273_2_2_reg_1369 <= grp_fu_488_p2;
        mul273_2_reg_1234 <= grp_fu_464_p2;
        mul273_3_reg_1334 <= grp_fu_480_p2;
        mul273_s_reg_1259 <= grp_fu_468_p2;
        mul_reg_1184 <= grp_fu_456_p2;
        sum_1_reg_1229 <= grp_fu_424_p2;
        sum_2_reg_1254 <= grp_fu_428_p2;
        sum_3_reg_1279 <= grp_fu_432_p2;
        sum_4_reg_1304 <= grp_fu_436_p2;
        sum_5_reg_1329 <= grp_fu_440_p2;
        sum_6_reg_1349 <= grp_fu_444_p2;
        sum_7_reg_1364 <= grp_fu_448_p2;
        sum_8_reg_1374 <= grp_fu_452_p2;
        sum_reg_1204 <= grp_fu_419_p2;
        tmp_1_reg_1199 <= tmp_1_fu_616_p9;
        tmp_2_reg_1274 <= tmp_2_fu_676_p9;
        tmp_3_reg_1164 <= tmp_3_fu_576_p9;
        tmp_4_reg_1224 <= tmp_4_fu_636_p9;
        tmp_5_reg_1299 <= tmp_5_fu_696_p9;
        tmp_6_reg_1179 <= tmp_6_fu_596_p9;
        tmp_7_reg_1249 <= tmp_7_fu_656_p9;
        tmp_8_reg_1324 <= tmp_8_fu_716_p9;
        val_reg_1389 <= val_fu_849_p3;
        xs_sign_reg_1384 <= data_fu_736_p1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln160_reg_1150 <= icmp_ln160_fu_535_p2;
        icmp_ln160_reg_1150_pp0_iter1_reg <= icmp_ln160_reg_1150;
        k_reg_1138 <= ap_sig_allocacmp_k;
        k_reg_1138_pp0_iter1_reg <= k_reg_1138;
        tmp_s_reg_1154 <= tmp_s_fu_547_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter58 == 1'b1) & (k_reg_1138_pp0_iter57_reg == 2'd1))) begin
        output_pixel_1_fu_162 <= output_pixel_3_fu_908_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~(k_reg_1138_pp0_iter57_reg == 2'd1) & ~(k_reg_1138_pp0_iter57_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter58 == 1'b1))) begin
        output_pixel_2_fu_166 <= output_pixel_3_fu_908_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter58 == 1'b1) & (k_reg_1138_pp0_iter57_reg == 2'd0))) begin
        output_pixel_fu_158 <= output_pixel_3_fu_908_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln160_fu_535_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter57_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) 
    & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 
    == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_k = 2'd0;
    end else begin
        ap_sig_allocacmp_k = k_6_fu_154;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter57_reg == 1'b1) & (icmp_ln160_reg_1150_pp0_iter56_reg == 1'd0))) begin
        output_pixel_1_out_ap_vld = 1'b1;
    end else begin
        output_pixel_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter57_reg == 1'b1) & (icmp_ln160_reg_1150_pp0_iter56_reg == 1'd0))) begin
        output_pixel_2_out_ap_vld = 1'b1;
    end else begin
        output_pixel_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter57_reg == 1'b1) & (icmp_ln160_reg_1150_pp0_iter56_reg == 1'd0))) begin
        output_pixel_out_ap_vld = 1'b1;
    end else begin
        output_pixel_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln160_fu_541_p2 = (ap_sig_allocacmp_k + 2'd1);

assign add_ln317_fu_777_p2 = ($signed(zext_ln317_fu_773_p1) + $signed(9'd385));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign data_fu_736_p1 = dc_reg_1379;

assign grp_fu_496_p0 = tmp_s_reg_1154;

assign grp_fu_499_p0 = tmp_3_reg_1164;

assign grp_fu_502_p0 = tmp_6_reg_1179;

assign grp_fu_505_p0 = tmp_1_reg_1199;

assign grp_fu_508_p0 = tmp_4_reg_1224;

assign grp_fu_511_p0 = tmp_7_reg_1249;

assign grp_fu_514_p0 = tmp_2_reg_1274;

assign grp_fu_517_p0 = tmp_5_reg_1299;

assign grp_fu_520_p0 = tmp_8_reg_1324;

assign icmp_ln160_fu_535_p2 = (($signed(zext_ln160_fu_531_p1) < $signed(channels)) ? 1'b1 : 1'b0);

assign icmp_ln175_fu_898_p2 = ((tmp_12_fu_888_p4 != 23'd0) ? 1'b1 : 1'b0);

assign lshr_ln18_fu_817_p2 = zext_ln15_fu_769_p1 >> zext_ln18_fu_813_p1;

assign mantissa_fu_759_p4 = {{{{1'd1}, {trunc_ln342_fu_755_p1}}}, {1'd0}};

assign output_pixel_1_out = output_pixel_1_fu_162;

assign output_pixel_2_out = output_pixel_2_fu_166;

assign output_pixel_3_fu_908_p3 = ((icmp_ln175_fu_898_p2[0:0] == 1'b1) ? 8'd255 : trunc_ln176_fu_904_p1);

assign output_pixel_out = output_pixel_fu_158;

assign result_1_fu_857_p2 = (32'd0 - val_reg_1389);

assign result_2_fu_862_p3 = ((xs_sign_reg_1384[0:0] == 1'b1) ? result_1_fu_857_p2 : val_reg_1389);

assign result_3_fu_880_p3 = ((tmp_11_fu_872_p3[0:0] == 1'b1) ? 31'd0 : trunc_ln58_fu_868_p1);

assign select_ln18_fu_801_p3 = ((tmp_fu_783_p3[0:0] == 1'b1) ? sext_ln18_fu_797_p1 : add_ln317_fu_777_p2);

assign sext_ln18_1_fu_809_p1 = $signed(select_ln18_fu_801_p3);

assign sext_ln18_fu_797_p1 = $signed(sub_ln18_fu_791_p2);

assign shl_ln18_fu_823_p2 = zext_ln15_fu_769_p1 << zext_ln18_fu_813_p1;

assign sub_ln18_fu_791_p2 = (8'd127 - xs_exp_fu_747_p3);

assign tmp_10_fu_839_p4 = {{shl_ln18_fu_823_p2[55:24]}};

assign tmp_11_fu_872_p3 = result_2_fu_862_p3[32'd31];

assign tmp_12_fu_888_p4 = {{result_3_fu_880_p3[30:8]}};

assign tmp_1_fu_616_p7 = 'bx;

assign tmp_2_fu_676_p7 = 'bx;

assign tmp_3_fu_576_p7 = 'bx;

assign tmp_4_fu_636_p7 = 'bx;

assign tmp_5_fu_696_p7 = 'bx;

assign tmp_6_fu_596_p7 = 'bx;

assign tmp_7_fu_656_p7 = 'bx;

assign tmp_8_fu_716_p7 = 'bx;

assign tmp_9_fu_829_p4 = {{lshr_ln18_fu_817_p2[55:24]}};

assign tmp_fu_783_p3 = add_ln317_fu_777_p2[32'd8];

assign tmp_s_fu_547_p7 = 'bx;

assign trunc_ln176_fu_904_p1 = result_3_fu_880_p3[7:0];

assign trunc_ln342_fu_755_p1 = data_fu_736_p1[22:0];

assign trunc_ln58_fu_868_p1 = result_2_fu_862_p3[30:0];

assign val_fu_849_p3 = ((tmp_fu_783_p3[0:0] == 1'b1) ? tmp_9_fu_829_p4 : tmp_10_fu_839_p4);

assign xs_exp_fu_747_p3 = {{data_fu_736_p1[30:23]}};

assign zext_ln15_fu_769_p1 = mantissa_fu_759_p4;

assign zext_ln160_fu_531_p1 = ap_sig_allocacmp_k;

assign zext_ln18_fu_813_p1 = $unsigned(sext_ln18_1_fu_809_p1);

assign zext_ln317_fu_773_p1 = xs_exp_fu_747_p3;

endmodule //filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_160_15
