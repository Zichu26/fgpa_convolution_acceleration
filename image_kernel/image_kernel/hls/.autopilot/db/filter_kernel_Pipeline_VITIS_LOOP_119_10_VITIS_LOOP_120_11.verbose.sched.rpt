

================================================================
== Vitis HLS Report for 'filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11'
================================================================
* Date:           Wed Feb 26 23:19:18 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        image_kernel
* Solution:       hls (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-3


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.189 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |        ?|        ?|         ?|         ?|    0|    0|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                       |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |               Loop Name               |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_119_10_VITIS_LOOP_120_11  |        ?|        ?|         6|          1|          1|     ?|       yes|
        +---------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 7


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 7
* Pipeline : 1
  Pipeline-0 : II = 1, D = 7, States = { 1 2 3 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.14>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%k_3 = alloca i32 1" [filter_kernel.cpp:120]   --->   Operation 9 'alloca' 'k_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%x = alloca i32 1" [filter_kernel.cpp:119]   --->   Operation 10 'alloca' 'x' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%indvar_flatten111 = alloca i32 1"   --->   Operation 11 'alloca' 'indvar_flatten111' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%axie4_data_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %axie4_data"   --->   Operation 12 'read' 'axie4_data_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%cmp155_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %cmp155"   --->   Operation 13 'read' 'cmp155_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%sext_ln75_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %sext_ln75"   --->   Operation 14 'read' 'sext_ln75_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%sext_ln75_1_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %sext_ln75_1"   --->   Operation 15 'read' 'sext_ln75_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln114_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %zext_ln114"   --->   Operation 16 'read' 'zext_ln114_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%mul_ln114_read = read i128 @_ssdm_op_Read.ap_auto.i128, i128 %mul_ln114"   --->   Operation 17 'read' 'mul_ln114_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%xor_ln114_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %xor_ln114"   --->   Operation 18 'read' 'xor_ln114_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%sext_ln75_cast = sext i32 %sext_ln75_read"   --->   Operation 19 'sext' 'sext_ln75_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%sext_ln75_1_cast = zext i31 %sext_ln75_1_read"   --->   Operation 20 'zext' 'sext_ln75_1_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln114_cast = zext i31 %zext_ln114_read"   --->   Operation 21 'zext' 'zext_ln114_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.14ns)   --->   "%store_ln0 = store i128 0, i128 %indvar_flatten111"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 1.14>
ST_1 : Operation 23 [1/1] (1.14ns)   --->   "%store_ln119 = store i64 0, i64 %x" [filter_kernel.cpp:119]   --->   Operation 23 'store' 'store_ln119' <Predicate = true> <Delay = 1.14>
ST_1 : Operation 24 [1/1] (1.14ns)   --->   "%store_ln120 = store i2 0, i2 %k_3" [filter_kernel.cpp:120]   --->   Operation 24 'store' 'store_ln120' <Predicate = true> <Delay = 1.14>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.cond143"   --->   Operation 25 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 5.66>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%k = load i2 %k_3" [filter_kernel.cpp:120]   --->   Operation 26 'load' 'k' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%indvar_flatten111_load = load i128 %indvar_flatten111" [filter_kernel.cpp:119]   --->   Operation 27 'load' 'indvar_flatten111_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln120 = zext i2 %k" [filter_kernel.cpp:120]   --->   Operation 28 'zext' 'zext_ln120' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (2.64ns)   --->   "%icmp_ln120 = icmp_eq  i64 %zext_ln120, i64 %xor_ln114_read" [filter_kernel.cpp:120]   --->   Operation 29 'icmp' 'icmp_ln120' <Predicate = true> <Delay = 2.64> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.64> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (4.10ns)   --->   "%icmp_ln119_1 = icmp_eq  i128 %indvar_flatten111_load, i128 %mul_ln114_read" [filter_kernel.cpp:119]   --->   Operation 30 'icmp' 'icmp_ln119_1' <Predicate = true> <Delay = 4.10> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (4.10ns)   --->   "%add_ln119_2 = add i128 %indvar_flatten111_load, i128 1" [filter_kernel.cpp:119]   --->   Operation 31 'add' 'add_ln119_2' <Predicate = true> <Delay = 4.10> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 4.10> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln119 = br i1 %icmp_ln119_1, void %for.inc175, void %for.inc178.exitStub" [filter_kernel.cpp:119]   --->   Operation 32 'br' 'br_ln119' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%x_load = load i64 %x" [filter_kernel.cpp:119]   --->   Operation 33 'load' 'x_load' <Predicate = (!icmp_ln119_1)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (2.64ns)   --->   "%add_ln119_1 = add i64 %x_load, i64 1" [filter_kernel.cpp:119]   --->   Operation 34 'add' 'add_ln119_1' <Predicate = (!icmp_ln119_1)> <Delay = 2.64> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.64> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.72ns)   --->   "%select_ln119 = select i1 %icmp_ln120, i2 0, i2 %k" [filter_kernel.cpp:119]   --->   Operation 35 'select' 'select_ln119' <Predicate = (!icmp_ln119_1)> <Delay = 0.72> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (1.14ns)   --->   "%select_ln119_1 = select i1 %icmp_ln120, i64 %add_ln119_1, i64 %x_load" [filter_kernel.cpp:119]   --->   Operation 36 'select' 'select_ln119_1' <Predicate = (!icmp_ln119_1)> <Delay = 1.14> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln119 = trunc i64 %select_ln119_1" [filter_kernel.cpp:119]   --->   Operation 37 'trunc' 'trunc_ln119' <Predicate = (!icmp_ln119_1)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (1.14ns)   --->   "%switch_ln119 = switch i2 %select_ln119, void %arrayidx17015.case.2, i2 0, void %arrayidx17015.case.0, i2 1, void %arrayidx17015.case.1" [filter_kernel.cpp:119]   --->   Operation 38 'switch' 'switch_ln119' <Predicate = (!icmp_ln119_1)> <Delay = 1.14>
ST_2 : Operation 39 [1/1] (1.14ns)   --->   "%add_ln120 = add i2 %select_ln119, i2 1" [filter_kernel.cpp:120]   --->   Operation 39 'add' 'add_ln120' <Predicate = (!icmp_ln119_1)> <Delay = 1.14> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.14> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (1.14ns)   --->   "%store_ln119 = store i128 %add_ln119_2, i128 %indvar_flatten111" [filter_kernel.cpp:119]   --->   Operation 40 'store' 'store_ln119' <Predicate = (!icmp_ln119_1)> <Delay = 1.14>
ST_2 : Operation 41 [1/1] (1.14ns)   --->   "%store_ln119 = store i64 %select_ln119_1, i64 %x" [filter_kernel.cpp:119]   --->   Operation 41 'store' 'store_ln119' <Predicate = (!icmp_ln119_1)> <Delay = 1.14>
ST_2 : Operation 42 [1/1] (1.14ns)   --->   "%store_ln120 = store i2 %add_ln120, i2 %k_3" [filter_kernel.cpp:120]   --->   Operation 42 'store' 'store_ln120' <Predicate = (!icmp_ln119_1)> <Delay = 1.14>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%br_ln120 = br void %for.cond143" [filter_kernel.cpp:120]   --->   Operation 43 'br' 'br_ln120' <Predicate = (!icmp_ln119_1)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 7.18>
ST_3 : Operation 44 [1/1] (2.64ns)   --->   "%add_ln119 = add i64 %select_ln119_1, i64 %zext_ln114_cast" [filter_kernel.cpp:119]   --->   Operation 44 'add' 'add_ln119' <Predicate = true> <Delay = 2.64> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.64> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 45 [1/1] (2.64ns)   --->   "%icmp_ln119 = icmp_slt  i64 %add_ln119, i64 %sext_ln75_1_cast" [filter_kernel.cpp:119]   --->   Operation 45 'icmp' 'icmp_ln119' <Predicate = true> <Delay = 2.64> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.64> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [3/3] (7.18ns)   --->   "%empty = mul i61 %trunc_ln119, i61 %sext_ln75_cast" [filter_kernel.cpp:119]   --->   Operation 46 'mul' 'empty' <Predicate = true> <Delay = 7.18> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 2> <II = 1> <Delay = 7.18> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%line_buffer_6_addr = getelementptr i8 %line_buffer_6, i64 0, i64 %add_ln119" [filter_kernel.cpp:119]   --->   Operation 47 'getelementptr' 'line_buffer_6_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%line_buffer_7_addr = getelementptr i8 %line_buffer_7, i64 0, i64 %add_ln119" [filter_kernel.cpp:119]   --->   Operation 48 'getelementptr' 'line_buffer_7_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%line_buffer_8_addr = getelementptr i8 %line_buffer_8, i64 0, i64 %add_ln119" [filter_kernel.cpp:119]   --->   Operation 49 'getelementptr' 'line_buffer_8_addr' <Predicate = true> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.18>
ST_4 : Operation 50 [2/3] (7.18ns)   --->   "%empty = mul i61 %trunc_ln119, i61 %sext_ln75_cast" [filter_kernel.cpp:119]   --->   Operation 50 'mul' 'empty' <Predicate = true> <Delay = 7.18> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 2> <II = 1> <Delay = 7.18> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 7.18>
ST_5 : Operation 51 [1/3] (7.18ns)   --->   "%empty = mul i61 %trunc_ln119, i61 %sext_ln75_cast" [filter_kernel.cpp:119]   --->   Operation 51 'mul' 'empty' <Predicate = true> <Delay = 7.18> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 2> <II = 1> <Delay = 7.18> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.50>
ST_6 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln120_1 = zext i2 %select_ln119" [filter_kernel.cpp:120]   --->   Operation 52 'zext' 'zext_ln120_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 53 [1/1] (2.58ns)   --->   "%add_ln123 = add i61 %zext_ln120_1, i61 %empty" [filter_kernel.cpp:123]   --->   Operation 53 'add' 'add_ln123' <Predicate = true> <Delay = 2.58> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.58> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln123 = trunc i61 %add_ln123" [filter_kernel.cpp:123]   --->   Operation 54 'trunc' 'trunc_ln123' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 55 [1/1] (0.00ns)   --->   "%trunc_ln5 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i29.i3, i29 %trunc_ln123, i3 0" [filter_kernel.cpp:123]   --->   Operation 55 'bitconcatenate' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 56 [1/1] (1.91ns)   --->   "%sub_ln123 = sub i32 0, i32 %trunc_ln5" [filter_kernel.cpp:123]   --->   Operation 56 'sub' 'sub_ln123' <Predicate = true> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 75 [1/1] (1.14ns)   --->   "%ret_ln0 = ret"   --->   Operation 75 'ret' 'ret_ln0' <Predicate = (icmp_ln119_1)> <Delay = 1.14>

State 7 <SV = 6> <Delay = 6.56>
ST_7 : Operation 57 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @VITIS_LOOP_119_10_VITIS_LOOP_120_11_str"   --->   Operation 57 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node select_ln124)   --->   "%brmerge47_demorgan = and i1 %cmp155_read, i1 %icmp_ln119" [filter_kernel.cpp:119]   --->   Operation 58 'and' 'brmerge47_demorgan' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 59 [1/1] (0.00ns)   --->   "%specpipeline_ln121 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_26" [filter_kernel.cpp:121]   --->   Operation 59 'specpipeline' 'specpipeline_ln121' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node select_ln124)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i61.i32, i61 %add_ln123, i32 60" [filter_kernel.cpp:123]   --->   Operation 60 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln123 = zext i32 %trunc_ln5" [filter_kernel.cpp:123]   --->   Operation 61 'zext' 'zext_ln123' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 62 [1/1] (3.21ns)   --->   "%lshr_ln123 = lshr i128 %axie4_data_read, i128 %zext_ln123" [filter_kernel.cpp:123]   --->   Operation 62 'lshr' 'lshr_ln123' <Predicate = true> <Delay = 3.21> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.21> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln123_1 = zext i32 %sub_ln123" [filter_kernel.cpp:123]   --->   Operation 63 'zext' 'zext_ln123_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 64 [1/1] (3.21ns)   --->   "%shl_ln123 = shl i128 %axie4_data_read, i128 %zext_ln123_1" [filter_kernel.cpp:123]   --->   Operation 64 'shl' 'shl_ln123' <Predicate = true> <Delay = 3.21> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 3.21> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node select_ln124)   --->   "%trunc_ln123_1 = trunc i128 %shl_ln123" [filter_kernel.cpp:123]   --->   Operation 65 'trunc' 'trunc_ln123_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node select_ln124)   --->   "%trunc_ln123_2 = trunc i128 %lshr_ln123" [filter_kernel.cpp:123]   --->   Operation 66 'trunc' 'trunc_ln123_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node select_ln124)   --->   "%pixel_val = select i1 %tmp, i8 %trunc_ln123_1, i8 %trunc_ln123_2" [filter_kernel.cpp:123]   --->   Operation 67 'select' 'pixel_val' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 68 [1/1] (0.93ns) (out node of the LUT)   --->   "%select_ln124 = select i1 %brmerge47_demorgan, i8 %pixel_val, i8 0" [filter_kernel.cpp:124]   --->   Operation 68 'select' 'select_ln124' <Predicate = true> <Delay = 0.93> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 69 [1/1] ( I:2.41ns O:2.41ns )   --->   "%store_ln124 = store i8 %select_ln124, i11 %line_buffer_7_addr" [filter_kernel.cpp:124]   --->   Operation 69 'store' 'store_ln124' <Predicate = (select_ln119 == 1)> <Delay = 2.41> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.41> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1920> <RAM>
ST_7 : Operation 70 [1/1] (0.00ns)   --->   "%br_ln0 = br void %arrayidx17015.exit"   --->   Operation 70 'br' 'br_ln0' <Predicate = (select_ln119 == 1)> <Delay = 0.00>
ST_7 : Operation 71 [1/1] ( I:2.41ns O:2.41ns )   --->   "%store_ln124 = store i8 %select_ln124, i11 %line_buffer_6_addr" [filter_kernel.cpp:124]   --->   Operation 71 'store' 'store_ln124' <Predicate = (select_ln119 == 0)> <Delay = 2.41> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.41> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1920> <RAM>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%br_ln0 = br void %arrayidx17015.exit"   --->   Operation 72 'br' 'br_ln0' <Predicate = (select_ln119 == 0)> <Delay = 0.00>
ST_7 : Operation 73 [1/1] ( I:2.41ns O:2.41ns )   --->   "%store_ln124 = store i8 %select_ln124, i11 %line_buffer_8_addr" [filter_kernel.cpp:124]   --->   Operation 73 'store' 'store_ln124' <Predicate = (select_ln119 != 0 & select_ln119 != 1)> <Delay = 2.41> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.41> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1920> <RAM>
ST_7 : Operation 74 [1/1] (0.00ns)   --->   "%br_ln0 = br void %arrayidx17015.exit"   --->   Operation 74 'br' 'br_ln0' <Predicate = (select_ln119 != 0 & select_ln119 != 1)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.146ns
The critical path consists of the following:
	'alloca' operation 128 bit ('indvar_flatten111') [13]  (0.000 ns)
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar_flatten111' [24]  (1.146 ns)

 <State 2>: 5.663ns
The critical path consists of the following:
	'load' operation 2 bit ('k', filter_kernel.cpp:120) on local variable 'k', filter_kernel.cpp:120 [29]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln120', filter_kernel.cpp:120) [32]  (2.649 ns)
	'select' operation 2 bit ('select_ln119', filter_kernel.cpp:119) [40]  (0.723 ns)
	'add' operation 2 bit ('add_ln120', filter_kernel.cpp:120) [76]  (1.145 ns)
	'store' operation 0 bit ('store_ln120', filter_kernel.cpp:120) of variable 'add_ln120', filter_kernel.cpp:120 on local variable 'k', filter_kernel.cpp:120 [79]  (1.146 ns)

 <State 3>: 7.189ns
The critical path consists of the following:
	'mul' operation 61 bit ('empty', filter_kernel.cpp:119) [45]  (7.189 ns)

 <State 4>: 7.189ns
The critical path consists of the following:
	'mul' operation 61 bit ('empty', filter_kernel.cpp:119) [45]  (7.189 ns)

 <State 5>: 7.189ns
The critical path consists of the following:
	'mul' operation 61 bit ('empty', filter_kernel.cpp:119) [45]  (7.189 ns)

 <State 6>: 4.503ns
The critical path consists of the following:
	'add' operation 61 bit ('add_ln123', filter_kernel.cpp:123) [52]  (2.587 ns)
	'sub' operation 32 bit ('sub_ln123', filter_kernel.cpp:123) [58]  (1.916 ns)

 <State 7>: 6.563ns
The critical path consists of the following:
	'lshr' operation 128 bit ('lshr_ln123', filter_kernel.cpp:123) [57]  (3.215 ns)
	'select' operation 8 bit ('pixel_val', filter_kernel.cpp:123) [63]  (0.000 ns)
	'select' operation 8 bit ('select_ln124', filter_kernel.cpp:124) [64]  (0.931 ns)
	'store' operation 0 bit ('store_ln124', filter_kernel.cpp:124) of variable 'select_ln124', filter_kernel.cpp:124 on array 'line_buffer_6' [70]  (2.417 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
