-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity filter_kernel is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 128;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 128;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_CONTROL_R_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_R_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    s_axi_control_r_AWVALID : IN STD_LOGIC;
    s_axi_control_r_AWREADY : OUT STD_LOGIC;
    s_axi_control_r_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_ADDR_WIDTH-1 downto 0);
    s_axi_control_r_WVALID : IN STD_LOGIC;
    s_axi_control_r_WREADY : OUT STD_LOGIC;
    s_axi_control_r_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_DATA_WIDTH-1 downto 0);
    s_axi_control_r_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_DATA_WIDTH/8-1 downto 0);
    s_axi_control_r_ARVALID : IN STD_LOGIC;
    s_axi_control_r_ARREADY : OUT STD_LOGIC;
    s_axi_control_r_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_ADDR_WIDTH-1 downto 0);
    s_axi_control_r_RVALID : OUT STD_LOGIC;
    s_axi_control_r_RREADY : IN STD_LOGIC;
    s_axi_control_r_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_R_DATA_WIDTH-1 downto 0);
    s_axi_control_r_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_r_BVALID : OUT STD_LOGIC;
    s_axi_control_r_BREADY : IN STD_LOGIC;
    s_axi_control_r_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of filter_kernel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "filter_kernel_filter_kernel,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-3,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=47,HLS_SYN_DSP=0,HLS_SYN_FF=15527,HLS_SYN_LUT=28141,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state88 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state89 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state90 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state91 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state92 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state93 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state94 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state95 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state96 : STD_LOGIC_VECTOR (105 downto 0) := "0000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state97 : STD_LOGIC_VECTOR (105 downto 0) := "0000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state98 : STD_LOGIC_VECTOR (105 downto 0) := "0000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state99 : STD_LOGIC_VECTOR (105 downto 0) := "0000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state100 : STD_LOGIC_VECTOR (105 downto 0) := "0000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state101 : STD_LOGIC_VECTOR (105 downto 0) := "0000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state102 : STD_LOGIC_VECTOR (105 downto 0) := "0000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state103 : STD_LOGIC_VECTOR (105 downto 0) := "0001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state104 : STD_LOGIC_VECTOR (105 downto 0) := "0010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state105 : STD_LOGIC_VECTOR (105 downto 0) := "0100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state106 : STD_LOGIC_VECTOR (105 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_59 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011001";
    constant ap_const_lv32_61 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100001";
    constant ap_const_lv32_64 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100100";
    constant ap_const_lv32_65 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100101";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_62 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100010";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv63_10 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv62_10 : STD_LOGIC_VECTOR (61 downto 0) := "00000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv32_FFFFFFF0 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_30 : STD_LOGIC_VECTOR (5 downto 0) := "110000";
    constant ap_const_lv29_1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_const_lv31_7FFFFFF0 : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111110000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (105 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal input_image : STD_LOGIC_VECTOR (63 downto 0);
    signal output_image : STD_LOGIC_VECTOR (63 downto 0);
    signal filter_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal filter_divisor : STD_LOGIC_VECTOR (31 downto 0);
    signal width : STD_LOGIC_VECTOR (31 downto 0);
    signal height : STD_LOGIC_VECTOR (31 downto 0);
    signal channels : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal gmem0_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal gmem1_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal gmem1_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal gmem1_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal gmem1_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal gmem1_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state89 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state89 : signal is "none";
    signal ap_CS_fsm_state90 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state90 : signal is "none";
    signal ap_CS_fsm_state98 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state98 : signal is "none";
    signal ap_CS_fsm_state101 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state101 : signal is "none";
    signal ap_CS_fsm_state102 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state102 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal and_ln155_1_reg_3814 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln200_reg_4116 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal icmp_ln232_reg_4000 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1078_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1183 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal reg_1187 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal reg_1192 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_1197 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_fu_1139_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_1202 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_load_fu_1134_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_1208 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_fu_1144_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_1214 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1161_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1220 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln155_1_fu_2529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1225 : STD_LOGIC_VECTOR (27 downto 0);
    signal channels_read_reg_3067 : STD_LOGIC_VECTOR (31 downto 0);
    signal height_read_reg_3086 : STD_LOGIC_VECTOR (31 downto 0);
    signal width_read_reg_3092 : STD_LOGIC_VECTOR (31 downto 0);
    signal filter_divisor_read_reg_3101 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_image_read_reg_3106 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_image_read_reg_3114 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_49_fu_1255_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal empty_49_reg_3121 : STD_LOGIC_VECTOR (30 downto 0);
    signal cmp2538_fu_1259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp2538_reg_3353 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_50_fu_1265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_50_reg_3359 : STD_LOGIC_VECTOR (0 downto 0);
    signal smax26_fu_1271_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal smax26_reg_3364 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln58_fu_1070_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln58_reg_3370 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sub_ln58_fu_1314_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln58_reg_3377 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sext_ln75_1_fu_1351_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln75_1_reg_3409 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal sub_fu_1358_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_3415 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub192_fu_1363_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub192_reg_3420 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln85_fu_1368_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln85_reg_3425 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln85_fu_1373_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln85_reg_3430 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln85_1_fu_1377_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_ln85_1_reg_3435 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln85_1_fu_1383_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln85_1_reg_3440 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln85_fu_1394_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln85_reg_3445 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln85_1_fu_1398_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln85_1_reg_3450 : STD_LOGIC_VECTOR (62 downto 0);
    signal sext_ln85_2_fu_1414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln85_2_reg_3455 : STD_LOGIC_VECTOR (63 downto 0);
    signal bound67_fu_1074_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal bound67_reg_3461 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_s_fu_1422_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_reg_3466 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln85_3_cast_fu_1457_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln85_3_cast_reg_3471 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul_load_reg_3477 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln85_1_fu_1467_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln85_1_reg_3483 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln85_fu_1481_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln85_reg_3491 : STD_LOGIC_VECTOR (30 downto 0);
    signal cmp155_fu_1487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp155_reg_3496 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln155_fu_1498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln155_reg_3501 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln87_1_fu_1504_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln87_1_reg_3506 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal indvars_iv_next122_fu_1513_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal indvars_iv_next122_reg_3515 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln87_fu_1519_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln87_reg_3521 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln89_1_fu_1537_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln89_1_reg_3531 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal and_ln89_fu_1565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln89_reg_3536 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln89_1_fu_1571_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln89_1_reg_3543 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvars_iv_next62_fu_1579_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal indvars_iv_next62_reg_3549 : STD_LOGIC_VECTOR (1 downto 0);
    signal cond292_fu_1593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cond292_reg_3554 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_fu_1599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln99_reg_3558 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln91_fu_1614_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal sext_ln114_fu_1870_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln114_reg_3570 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal trunc_ln114_fu_1883_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln114_reg_3578 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln114_fu_1896_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln114_reg_3583 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln114_fu_1925_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln114_reg_3588 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln115_fu_1931_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln115_reg_3596 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln119_fu_1936_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln119_reg_3601 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln114_fu_1942_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln114_reg_3607 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln114_1_fu_1948_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln114_1_reg_3612 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln114_2_fu_1953_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln114_2_reg_3617 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln114_3_fu_1958_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln114_3_reg_3622 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln114_4_fu_1964_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln114_4_reg_3627 : STD_LOGIC_VECTOR (31 downto 0);
    signal cmp193_fu_1970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp193_reg_3632 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln114_fu_1999_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln114_reg_3683 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln119_fu_2026_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal sub_ln119_reg_3688 : STD_LOGIC_VECTOR (32 downto 0);
    signal xor_ln119_fu_2042_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln119_reg_3693 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln3_reg_3698 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_fu_1082_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal mul_ln114_reg_3719 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal axie4_data_reg_3724 : STD_LOGIC_VECTOR (127 downto 0);
    signal line_buffer_load_reg_3729 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_load_reg_3734 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_2_load_reg_3739 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_6_load_reg_3744 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_7_load_reg_3749 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_8_load_reg_3754 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln135_fu_2129_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln135_reg_3762 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal sel_tmp_fu_2135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_3767 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_2141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_reg_3773 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp60_fu_2147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp60_reg_3780 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_fu_2165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp13_reg_3785 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln136_fu_2180_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal window_6_0125_load_1_reg_3818 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_7_0126_load_1_reg_3823 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_8_0127_load_1_reg_3828 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_15_0128_load_1_reg_3833 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_16_0129_load_1_reg_3838 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_17_0130_load_1_reg_3843 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_24_0131_load_1_reg_3848 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_25_0132_load_1_reg_3853 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_26_0133_load_1_reg_3858 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_3_load_1_reg_3890 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_4_load_1_reg_3895 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_5_load_1_reg_3900 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_15_load_1_reg_3905 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_16_load_1_reg_3910 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_17_load_1_reg_3915 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_reg_3920 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln217_fu_2570_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln217_reg_3926 : STD_LOGIC_VECTOR (3 downto 0);
    signal axie4_idx_fu_2574_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal axie4_idx_reg_3931 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal byte_offset_fu_2598_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal byte_offset_reg_3936 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln9_reg_3943 : STD_LOGIC_VECTOR (59 downto 0);
    signal trunc_ln1_reg_3948 : STD_LOGIC_VECTOR (59 downto 0);
    signal gmem1_addr_reg_3959 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_axie4_data_reg_3966 : STD_LOGIC_VECTOR (127 downto 0);
    signal output_axie4_data_reg_3971 : STD_LOGIC_VECTOR (127 downto 0);
    signal sext_ln216_fu_2667_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln216_reg_3977 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal sext_ln217_fu_2670_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln217_reg_3982 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln222_fu_2702_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln222_reg_3987 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln232_fu_2715_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln232_reg_3995 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln232_fu_2719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln4_reg_4004 : STD_LOGIC_VECTOR (59 downto 0);
    signal trunc_ln5_reg_4009 : STD_LOGIC_VECTOR (59 downto 0);
    signal gmem1_addr_2_reg_4020 : STD_LOGIC_VECTOR (63 downto 0);
    signal next_input_axie4_data_reg_4027 : STD_LOGIC_VECTOR (127 downto 0);
    signal next_output_axie4_data_reg_4032 : STD_LOGIC_VECTOR (127 downto 0);
    signal remaining_channels_fu_2792_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal remaining_channels_reg_4037 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal tmp_16_reg_4042 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln183_fu_2802_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln183_reg_4048 : STD_LOGIC_VECTOR (3 downto 0);
    signal axie4_idx_1_fu_2806_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal axie4_idx_1_reg_4053 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal byte_offset_1_fu_2830_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal byte_offset_1_reg_4058 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln_reg_4066 : STD_LOGIC_VECTOR (59 downto 0);
    signal gmem1_addr_1_reg_4071 : STD_LOGIC_VECTOR (63 downto 0);
    signal axie4_data_4_reg_4078 : STD_LOGIC_VECTOR (127 downto 0);
    signal sext_ln182_fu_2883_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal sext_ln182_reg_4093 : STD_LOGIC_VECTOR (28 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal sext_ln183_fu_2886_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln183_reg_4098 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln188_fu_2918_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln188_reg_4103 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln200_fu_2931_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln200_reg_4111 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln200_fu_2935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln2_reg_4120 : STD_LOGIC_VECTOR (59 downto 0);
    signal gmem1_addr_3_reg_4125 : STD_LOGIC_VECTOR (63 downto 0);
    signal next_axie4_data_reg_4132 : STD_LOGIC_VECTOR (127 downto 0);
    signal remaining_channels_1_fu_2983_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal remaining_channels_1_reg_4137 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state99 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state99 : signal is "none";
    signal sub342_fu_2989_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub342_reg_4142 : STD_LOGIC_VECTOR (4 downto 0);
    signal line_buffer_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_ce0 : STD_LOGIC;
    signal line_buffer_we0 : STD_LOGIC;
    signal line_buffer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_1_ce0 : STD_LOGIC;
    signal line_buffer_1_we0 : STD_LOGIC;
    signal line_buffer_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_2_ce0 : STD_LOGIC;
    signal line_buffer_2_we0 : STD_LOGIC;
    signal line_buffer_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_3_ce0 : STD_LOGIC;
    signal line_buffer_3_we0 : STD_LOGIC;
    signal line_buffer_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_4_ce0 : STD_LOGIC;
    signal line_buffer_4_we0 : STD_LOGIC;
    signal line_buffer_4_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_5_ce0 : STD_LOGIC;
    signal line_buffer_5_we0 : STD_LOGIC;
    signal line_buffer_5_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_6_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_6_ce0 : STD_LOGIC;
    signal line_buffer_6_we0 : STD_LOGIC;
    signal line_buffer_6_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_7_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_7_ce0 : STD_LOGIC;
    signal line_buffer_7_we0 : STD_LOGIC;
    signal line_buffer_7_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_7_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_8_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_8_ce0 : STD_LOGIC;
    signal line_buffer_8_we0 : STD_LOGIC;
    signal line_buffer_8_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buffer_8_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_start : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_done : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_idle : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_ready : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_filter_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_filter_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_2101288_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_2101288_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_199279_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_199279_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_097270_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_097270_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_236261_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_236261_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_134252_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_134252_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_032243_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_032243_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_218234_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_218234_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_116225_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_116225_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_014216_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_014216_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_start : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_done : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_idle : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_ready : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_start : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_done : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_idle : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_ready : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_6_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_6_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_7_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_7_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_8_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_8_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_start : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_done : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_idle : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_ready : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_ce0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_we0 : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_start : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_done : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_idle : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_ready : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_39_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_39_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_38_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_38_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_37_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_37_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_start : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_done : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_idle : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_ready : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_2_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_2_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_1_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_1_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_start : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_done : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_idle : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_ready : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_output_axie4_data_2_out : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_output_axie4_data_2_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_start : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_done : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_idle : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_ready : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_next_output_axie4_data_1_out : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_next_output_axie4_data_1_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_start : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_done : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_idle : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_ready : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_axie4_data_3_out : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_axie4_data_3_out_ap_vld : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_start : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_done : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_idle : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_ready : STD_LOGIC;
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_next_axie4_data_1_out : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_next_axie4_data_1_out_ap_vld : STD_LOGIC;
    signal gmem0_0_AWREADY : STD_LOGIC;
    signal gmem0_0_WREADY : STD_LOGIC;
    signal gmem0_0_ARVALID : STD_LOGIC;
    signal gmem0_0_ARREADY : STD_LOGIC;
    signal gmem0_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_0_RVALID : STD_LOGIC;
    signal gmem0_0_RREADY : STD_LOGIC;
    signal gmem0_0_RDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal gmem0_0_RFIFONUM : STD_LOGIC_VECTOR (11 downto 0);
    signal gmem0_0_BVALID : STD_LOGIC;
    signal gmem1_0_AWVALID : STD_LOGIC;
    signal gmem1_0_AWREADY : STD_LOGIC;
    signal gmem1_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_0_WVALID : STD_LOGIC;
    signal gmem1_0_WREADY : STD_LOGIC;
    signal gmem1_0_WDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal gmem1_0_ARVALID : STD_LOGIC;
    signal gmem1_0_ARREADY : STD_LOGIC;
    signal gmem1_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem1_0_RVALID : STD_LOGIC;
    signal gmem1_0_RREADY : STD_LOGIC;
    signal gmem1_0_RDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal gmem1_0_RFIFONUM : STD_LOGIC_VECTOR (11 downto 0);
    signal gmem1_0_BVALID : STD_LOGIC;
    signal gmem1_0_BREADY : STD_LOGIC;
    signal col_reg_753 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln85_fu_1476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op722_writeresp_state68 : BOOLEAN;
    signal ap_predicate_op725_writeresp_state68 : BOOLEAN;
    signal ap_block_state68 : BOOLEAN;
    signal indvar_flatten55_reg_765 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln87_fu_1508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln91_fu_1609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_reg_776 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_787 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_k_1_phi_fu_802_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_1_reg_798 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln89_fu_1531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_ln114_reg_809 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_block_state10_on_subcall_done : BOOLEAN;
    signal tripcount_iv_reg_820 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_1_reg_831 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_ln114_1_reg_842 : STD_LOGIC_VECTOR (62 downto 0);
    signal indvars_iv5_reg_853 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_2_reg_864 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln136_fu_2175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_5_reg_876 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln135_fu_2123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_axie4_data_0_lcssa_reg_887 : STD_LOGIC_VECTOR (127 downto 0);
    signal axie4_data300_0_lcssa_reg_897 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_start_reg : STD_LOGIC := '0';
    signal grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_start_reg : STD_LOGIC := '0';
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_start_reg : STD_LOGIC := '0';
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_start_reg : STD_LOGIC := '0';
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal output_axie4_data_2_loc_fu_284 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal axie4_data_3_loc_fu_292 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state100 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state100 : signal is "none";
    signal indvars_iv_next122_cast_fu_1974_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln114_1_fu_1878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln116_1_fu_2101_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln219_1_fu_2647_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln220_fu_2657_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln234_1_fu_2772_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln235_fu_2782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln186_1_fu_2864_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln202_1_fu_2973_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state32_io : BOOLEAN;
    signal ap_block_state40 : BOOLEAN;
    signal ap_block_state51_io : BOOLEAN;
    signal ap_block_state59 : BOOLEAN;
    signal phi_mul_fu_236 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal row_fu_240 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal window_6_0125_fu_244 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal storemerge338_fu_2389_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_7_0126_fu_248 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal storemerge335_fu_2402_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_8_0127_fu_252 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal storemerge341_fu_2351_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_15_0128_fu_256 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal storemerge328_fu_2428_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_16_0129_fu_260 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal storemerge325_fu_2441_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_17_0130_fu_264 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal storemerge331_fu_2415_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_24_0131_fu_268 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal storemerge346_fu_2307_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_25_0132_fu_272 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal storemerge343_fu_2320_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_26_0133_fu_276 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal storemerge349_fu_2294_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_fu_392 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_18_fu_1761_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_1_fu_396 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_2_fu_400 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_3_fu_404 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_4_fu_408 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_5_fu_412 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_6_fu_416 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_7_fu_420 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_8_fu_424 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_9_fu_428 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_sig_allocacmp_window_9_load : STD_LOGIC_VECTOR (7 downto 0);
    signal window_10_fu_432 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_sig_allocacmp_window_10_load : STD_LOGIC_VECTOR (7 downto 0);
    signal window_11_fu_436 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_sig_allocacmp_window_11_load : STD_LOGIC_VECTOR (7 downto 0);
    signal window_12_fu_440 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_13_fu_444 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_14_fu_448 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_15_fu_452 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_16_fu_456 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal window_17_fu_460 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal line_buffer_ce0_local : STD_LOGIC;
    signal line_buffer_1_ce0_local : STD_LOGIC;
    signal line_buffer_2_ce0_local : STD_LOGIC;
    signal line_buffer_3_ce0_local : STD_LOGIC;
    signal line_buffer_3_address0_local : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_4_ce0_local : STD_LOGIC;
    signal line_buffer_4_address0_local : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_5_ce0_local : STD_LOGIC;
    signal line_buffer_5_address0_local : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_6_ce0_local : STD_LOGIC;
    signal line_buffer_7_ce0_local : STD_LOGIC;
    signal line_buffer_8_ce0_local : STD_LOGIC;
    signal mul_ln58_fu_1070_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln58_fu_1070_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal bound67_fu_1074_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound67_fu_1074_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1078_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1082_p0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1082_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1229_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1235_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal empty_fu_1251_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_49_fu_1255_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cmp2538_fu_1259_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_50_fu_1265_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_1251_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal smax_fu_1289_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_shl_fu_1307_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_3_fu_1304_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln75_fu_1348_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal shl_ln_fu_1387_p3 : STD_LOGIC_VECTOR (35 downto 0);
    signal xor_ln85_fu_1402_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln85_fu_1407_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1435_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln85_2_fu_1430_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal smax105_fu_1443_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln85_3_fu_1451_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln85_fu_1472_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cmp237_fu_1492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln90_fu_1553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln89_fu_1543_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln89_fu_1559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln89_fu_1547_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_1_cast_not_fu_1587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln91_fu_1605_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1620_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_1640_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_1640_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_1620_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_1667_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_1687_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_1687_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_1667_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_1714_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_1734_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_1734_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_1714_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_18_fu_1761_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_18_fu_1761_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_18_fu_1761_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_18_fu_1761_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln114_fu_1874_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln114_fu_1891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln114_2_fu_1907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln114_1_fu_1887_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal select_ln114_1_fu_1913_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln114_3_fu_1921_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_2_fu_1903_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln114_3_fu_1989_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln114_2_fu_1993_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln114_1_fu_1986_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal icmp_ln114_4_fu_2010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln114_3_fu_2015_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln119_2_fu_2005_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln119_fu_2022_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal empty_52_fu_2032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal umax106_fu_2036_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_14_fu_2048_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1245_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_15_fu_2056_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal select_ln115_fu_2066_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal shl_ln1_fu_2074_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln116_fu_2082_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln116_fu_2086_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln114_1_fu_2111_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp11_fu_2153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_2159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln136_fu_2171_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_2190_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln136_fu_2186_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_fu_2207_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_2227_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_2190_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_2207_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_fu_2227_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_2244_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_2244_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp2_fu_2271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_2277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp61_fu_2283_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_2289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal storemerge_fu_2264_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp14_fu_2302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp22_fu_2315_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp27_fu_2328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp29_fu_2334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp62_fu_2340_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp30_fu_2346_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_2365_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal empty_53_fu_2359_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_fu_2375_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal empty_54_fu_2383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp38_fu_2397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp46_fu_2410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp50_fu_2423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp54_fu_2436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln155_fu_2518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln155_2_fu_2524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln217_1_fu_2584_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln217_1_fu_2588_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln217_fu_2592_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln217_fu_2581_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln3_fu_2605_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln219_fu_2613_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln219_fu_2617_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln220_fu_2632_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln217_1_fu_2673_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln222_fu_2676_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln222_cast80_fu_2682_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_58_fu_2690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_57_fu_2686_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal umax_fu_2695_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln232_fu_2711_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln234_fu_2725_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal shl_ln7_fu_2730_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln234_fu_2738_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln234_1_fu_2742_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln235_fu_2757_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln183_1_fu_2816_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln183_1_fu_2820_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln183_fu_2824_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln183_fu_2813_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln4_fu_2837_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln186_fu_2845_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln186_fu_2849_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln188_fu_2889_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln188_fu_2892_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln188_cast_fu_2902_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal empty_56_fu_2906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_55_fu_2898_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal umax1_fu_2911_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln200_fu_2927_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln202_fu_2941_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal shl_ln8_fu_2946_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln202_fu_2954_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln202_1_fu_2958_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (105 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_fsm_state84_blk : STD_LOGIC;
    signal ap_ST_fsm_state85_blk : STD_LOGIC;
    signal ap_ST_fsm_state86_blk : STD_LOGIC;
    signal ap_ST_fsm_state87_blk : STD_LOGIC;
    signal ap_ST_fsm_state88_blk : STD_LOGIC;
    signal ap_ST_fsm_state89_blk : STD_LOGIC;
    signal ap_ST_fsm_state90_blk : STD_LOGIC;
    signal ap_ST_fsm_state91_blk : STD_LOGIC;
    signal ap_ST_fsm_state92_blk : STD_LOGIC;
    signal ap_ST_fsm_state93_blk : STD_LOGIC;
    signal ap_ST_fsm_state94_blk : STD_LOGIC;
    signal ap_ST_fsm_state95_blk : STD_LOGIC;
    signal ap_ST_fsm_state96_blk : STD_LOGIC;
    signal ap_ST_fsm_state97_blk : STD_LOGIC;
    signal ap_ST_fsm_state98_blk : STD_LOGIC;
    signal ap_ST_fsm_state99_blk : STD_LOGIC;
    signal ap_ST_fsm_state100_blk : STD_LOGIC;
    signal ap_ST_fsm_state101_blk : STD_LOGIC;
    signal ap_ST_fsm_state102_blk : STD_LOGIC;
    signal ap_ST_fsm_state103_blk : STD_LOGIC;
    signal ap_ST_fsm_state104_blk : STD_LOGIC;
    signal ap_ST_fsm_state105_blk : STD_LOGIC;
    signal ap_ST_fsm_state106_blk : STD_LOGIC;
    signal bound67_fu_1074_p00 : STD_LOGIC_VECTOR (62 downto 0);
    signal bound67_fu_1074_p10 : STD_LOGIC_VECTOR (62 downto 0);
    signal grp_fu_1082_p00 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_fu_1082_p10 : STD_LOGIC_VECTOR (127 downto 0);
    signal mul_ln58_fu_1070_p00 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln58_fu_1070_p10 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_fu_1620_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_1620_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_1620_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_1640_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_1640_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_1640_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_1667_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_1667_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_1667_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_fu_1687_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_fu_1687_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_fu_1687_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_fu_1714_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_fu_1714_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_6_fu_1714_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_1734_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_1734_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_1734_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal window_18_fu_1761_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal window_18_fu_1761_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal window_18_fu_1761_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_2190_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_2190_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_2190_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_fu_2207_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_fu_2207_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_fu_2207_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_2227_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_2227_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_10_fu_2227_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_2244_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_2244_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_2244_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_48_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        filter_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        filter_ce0 : OUT STD_LOGIC;
        filter_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        mux_case_2101288_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        mux_case_2101288_out_ap_vld : OUT STD_LOGIC;
        mux_case_199279_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        mux_case_199279_out_ap_vld : OUT STD_LOGIC;
        mux_case_097270_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        mux_case_097270_out_ap_vld : OUT STD_LOGIC;
        mux_case_236261_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        mux_case_236261_out_ap_vld : OUT STD_LOGIC;
        mux_case_134252_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        mux_case_134252_out_ap_vld : OUT STD_LOGIC;
        mux_case_032243_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        mux_case_032243_out_ap_vld : OUT STD_LOGIC;
        mux_case_218234_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        mux_case_218234_out_ap_vld : OUT STD_LOGIC;
        mux_case_116225_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        mux_case_116225_out_ap_vld : OUT STD_LOGIC;
        mux_case_014216_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        mux_case_014216_out_ap_vld : OUT STD_LOGIC );
    end component;


    component filter_kernel_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        channels : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln58_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        mul_ln58 : IN STD_LOGIC_VECTOR (61 downto 0);
        cmp2538 : IN STD_LOGIC_VECTOR (0 downto 0);
        line_buffer_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_ce0 : OUT STD_LOGIC;
        line_buffer_we0 : OUT STD_LOGIC;
        line_buffer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_1_ce0 : OUT STD_LOGIC;
        line_buffer_1_we0 : OUT STD_LOGIC;
        line_buffer_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_2_ce0 : OUT STD_LOGIC;
        line_buffer_2_we0 : OUT STD_LOGIC;
        line_buffer_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_3_ce0 : OUT STD_LOGIC;
        line_buffer_3_we0 : OUT STD_LOGIC;
        line_buffer_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_4_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_4_ce0 : OUT STD_LOGIC;
        line_buffer_4_we0 : OUT STD_LOGIC;
        line_buffer_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_5_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_5_ce0 : OUT STD_LOGIC;
        line_buffer_5_we0 : OUT STD_LOGIC;
        line_buffer_5_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_6_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_6_ce0 : OUT STD_LOGIC;
        line_buffer_6_we0 : OUT STD_LOGIC;
        line_buffer_6_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_7_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_7_ce0 : OUT STD_LOGIC;
        line_buffer_7_we0 : OUT STD_LOGIC;
        line_buffer_7_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_8_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_8_ce0 : OUT STD_LOGIC;
        line_buffer_8_we0 : OUT STD_LOGIC;
        line_buffer_8_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component filter_kernel_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        channels : IN STD_LOGIC_VECTOR (31 downto 0);
        bound81 : IN STD_LOGIC_VECTOR (63 downto 0);
        line_buffer_6_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_6_ce0 : OUT STD_LOGIC;
        line_buffer_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_7_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_7_ce0 : OUT STD_LOGIC;
        line_buffer_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_8_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_8_ce0 : OUT STD_LOGIC;
        line_buffer_8_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_ce0 : OUT STD_LOGIC;
        line_buffer_we0 : OUT STD_LOGIC;
        line_buffer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_1_ce0 : OUT STD_LOGIC;
        line_buffer_1_we0 : OUT STD_LOGIC;
        line_buffer_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_2_ce0 : OUT STD_LOGIC;
        line_buffer_2_we0 : OUT STD_LOGIC;
        line_buffer_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        bound67 : IN STD_LOGIC_VECTOR (62 downto 0);
        line_buffer_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_3_ce0 : OUT STD_LOGIC;
        line_buffer_3_we0 : OUT STD_LOGIC;
        line_buffer_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_4_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_4_ce0 : OUT STD_LOGIC;
        line_buffer_4_we0 : OUT STD_LOGIC;
        line_buffer_4_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_5_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_5_ce0 : OUT STD_LOGIC;
        line_buffer_5_we0 : OUT STD_LOGIC;
        line_buffer_5_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        line_buffer_8_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_8_ce0 : OUT STD_LOGIC;
        line_buffer_8_we0 : OUT STD_LOGIC;
        line_buffer_8_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_7_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_7_ce0 : OUT STD_LOGIC;
        line_buffer_7_we0 : OUT STD_LOGIC;
        line_buffer_7_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_6_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        line_buffer_6_ce0 : OUT STD_LOGIC;
        line_buffer_6_we0 : OUT STD_LOGIC;
        line_buffer_6_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        xor_ln114 : IN STD_LOGIC_VECTOR (63 downto 0);
        mul_ln114 : IN STD_LOGIC_VECTOR (127 downto 0);
        zext_ln114 : IN STD_LOGIC_VECTOR (30 downto 0);
        sext_ln75_1 : IN STD_LOGIC_VECTOR (30 downto 0);
        sext_ln75 : IN STD_LOGIC_VECTOR (31 downto 0);
        cmp155 : IN STD_LOGIC_VECTOR (0 downto 0);
        axie4_data : IN STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_147_14 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        window_14_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_12_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_13_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        channels : IN STD_LOGIC_VECTOR (31 downto 0);
        line_buffer_3_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_4_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        line_buffer_5_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_39_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        window_39_out_ap_vld : OUT STD_LOGIC;
        window_38_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        window_38_out_ap_vld : OUT STD_LOGIC;
        window_37_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        window_37_out_ap_vld : OUT STD_LOGIC );
    end component;


    component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_160_15 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        channels : IN STD_LOGIC_VECTOR (31 downto 0);
        window_load : IN STD_LOGIC_VECTOR (7 downto 0);
        window_1_load : IN STD_LOGIC_VECTOR (7 downto 0);
        window_2_load : IN STD_LOGIC_VECTOR (7 downto 0);
        window_9_load : IN STD_LOGIC_VECTOR (7 downto 0);
        window_10_load : IN STD_LOGIC_VECTOR (7 downto 0);
        window_11_load : IN STD_LOGIC_VECTOR (7 downto 0);
        window_18_load : IN STD_LOGIC_VECTOR (7 downto 0);
        window_19_load : IN STD_LOGIC_VECTOR (7 downto 0);
        window_20_load : IN STD_LOGIC_VECTOR (7 downto 0);
        window_3_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_4_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_5_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_12_load_2 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_13_load_2 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_14_load_2 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_21_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_22_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_23_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_6_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_7_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_8_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_15_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_16_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_17_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_24_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_25_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        window_26_load_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        mux_case_014216_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        mux_case_032243_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        mux_case_097270_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        mux_case_116225_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        mux_case_134252_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        mux_case_199279_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        mux_case_218234_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        mux_case_236261_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        mux_case_2101288_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        filter_divisor : IN STD_LOGIC_VECTOR (31 downto 0);
        output_pixel_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_pixel_2_out_ap_vld : OUT STD_LOGIC;
        output_pixel_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_pixel_1_out_ap_vld : OUT STD_LOGIC;
        output_pixel_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_pixel_out_ap_vld : OUT STD_LOGIC );
    end component;


    component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_222_20 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        empty : IN STD_LOGIC_VECTOR (4 downto 0);
        output_axie4_data : IN STD_LOGIC_VECTOR (127 downto 0);
        input_axie4_data : IN STD_LOGIC_VECTOR (127 downto 0);
        sub_ln222 : IN STD_LOGIC_VECTOR (4 downto 0);
        output_axie4_data_2_out : OUT STD_LOGIC_VECTOR (127 downto 0);
        output_axie4_data_2_out_ap_vld : OUT STD_LOGIC );
    end component;


    component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_237_21 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        next_output_axie4_data : IN STD_LOGIC_VECTOR (127 downto 0);
        remaining_channels : IN STD_LOGIC_VECTOR (30 downto 0);
        next_input_axie4_data : IN STD_LOGIC_VECTOR (127 downto 0);
        next_output_axie4_data_1_out : OUT STD_LOGIC_VECTOR (127 downto 0);
        next_output_axie4_data_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_188_18 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        empty : IN STD_LOGIC_VECTOR (4 downto 0);
        axie4_data_1 : IN STD_LOGIC_VECTOR (127 downto 0);
        output_pixel_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        output_pixel_1_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        output_pixel_2_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        sub_ln188 : IN STD_LOGIC_VECTOR (4 downto 0);
        axie4_data_3_out : OUT STD_LOGIC_VECTOR (127 downto 0);
        axie4_data_3_out_ap_vld : OUT STD_LOGIC );
    end component;


    component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_204_19 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        next_axie4_data : IN STD_LOGIC_VECTOR (127 downto 0);
        remaining_channels_1 : IN STD_LOGIC_VECTOR (30 downto 0);
        sub342_cast : IN STD_LOGIC_VECTOR (4 downto 0);
        output_pixel_2_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        output_pixel_1_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        next_axie4_data_1_out : OUT STD_LOGIC_VECTOR (127 downto 0);
        next_axie4_data_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component filter_kernel_mul_31ns_31ns_62_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (61 downto 0) );
    end component;


    component filter_kernel_mul_32ns_31ns_63_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        dout : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;


    component filter_kernel_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component filter_kernel_mul_64ns_64ns_128_3_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component filter_kernel_sparsemux_7_2_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        def : IN STD_LOGIC_VECTOR (7 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component filter_kernel_line_buffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component filter_kernel_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        filter_divisor : OUT STD_LOGIC_VECTOR (31 downto 0);
        width : OUT STD_LOGIC_VECTOR (31 downto 0);
        height : OUT STD_LOGIC_VECTOR (31 downto 0);
        channels : OUT STD_LOGIC_VECTOR (31 downto 0);
        filter_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        filter_ce0 : IN STD_LOGIC;
        filter_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component filter_kernel_control_r_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        input_image : OUT STD_LOGIC_VECTOR (63 downto 0);
        output_image : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component filter_kernel_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (11 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;


    component filter_kernel_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (11 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;



begin
    line_buffer_U : component filter_kernel_line_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_address0,
        ce0 => line_buffer_ce0,
        we0 => line_buffer_we0,
        d0 => line_buffer_d0,
        q0 => line_buffer_q0);

    line_buffer_1_U : component filter_kernel_line_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_1_address0,
        ce0 => line_buffer_1_ce0,
        we0 => line_buffer_1_we0,
        d0 => line_buffer_1_d0,
        q0 => line_buffer_1_q0);

    line_buffer_2_U : component filter_kernel_line_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_2_address0,
        ce0 => line_buffer_2_ce0,
        we0 => line_buffer_2_we0,
        d0 => line_buffer_2_d0,
        q0 => line_buffer_2_q0);

    line_buffer_3_U : component filter_kernel_line_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_3_address0,
        ce0 => line_buffer_3_ce0,
        we0 => line_buffer_3_we0,
        d0 => line_buffer_3_d0,
        q0 => line_buffer_3_q0);

    line_buffer_4_U : component filter_kernel_line_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_4_address0,
        ce0 => line_buffer_4_ce0,
        we0 => line_buffer_4_we0,
        d0 => line_buffer_4_d0,
        q0 => line_buffer_4_q0);

    line_buffer_5_U : component filter_kernel_line_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_5_address0,
        ce0 => line_buffer_5_ce0,
        we0 => line_buffer_5_we0,
        d0 => line_buffer_5_d0,
        q0 => line_buffer_5_q0);

    line_buffer_6_U : component filter_kernel_line_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_6_address0,
        ce0 => line_buffer_6_ce0,
        we0 => line_buffer_6_we0,
        d0 => line_buffer_6_d0,
        q0 => line_buffer_6_q0);

    line_buffer_7_U : component filter_kernel_line_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_7_address0,
        ce0 => line_buffer_7_ce0,
        we0 => line_buffer_7_we0,
        d0 => line_buffer_7_d0,
        q0 => line_buffer_7_q0);

    line_buffer_8_U : component filter_kernel_line_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => line_buffer_8_address0,
        ce0 => line_buffer_8_ce0,
        we0 => line_buffer_8_we0,
        d0 => line_buffer_8_d0,
        q0 => line_buffer_8_q0);

    grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907 : component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_48_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_start,
        ap_done => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_done,
        ap_idle => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_idle,
        ap_ready => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_ready,
        filter_address0 => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_filter_address0,
        filter_ce0 => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_filter_ce0,
        filter_q0 => filter_q0,
        mux_case_2101288_out => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_2101288_out,
        mux_case_2101288_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_2101288_out_ap_vld,
        mux_case_199279_out => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_199279_out,
        mux_case_199279_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_199279_out_ap_vld,
        mux_case_097270_out => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_097270_out,
        mux_case_097270_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_097270_out_ap_vld,
        mux_case_236261_out => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_236261_out,
        mux_case_236261_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_236261_out_ap_vld,
        mux_case_134252_out => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_134252_out,
        mux_case_134252_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_134252_out_ap_vld,
        mux_case_032243_out => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_032243_out,
        mux_case_032243_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_032243_out_ap_vld,
        mux_case_218234_out => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_218234_out,
        mux_case_218234_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_218234_out_ap_vld,
        mux_case_116225_out => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_116225_out,
        mux_case_116225_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_116225_out_ap_vld,
        mux_case_014216_out => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_014216_out,
        mux_case_014216_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_014216_out_ap_vld);

    grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922 : component filter_kernel_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_start,
        ap_done => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_done,
        ap_idle => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_idle,
        ap_ready => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_ready,
        channels => channels_read_reg_3067,
        mul_ln58_1 => sub_ln58_reg_3377,
        mul_ln58 => mul_ln58_reg_3370,
        cmp2538 => cmp2538_reg_3353,
        line_buffer_address0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_address0,
        line_buffer_ce0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_ce0,
        line_buffer_we0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_we0,
        line_buffer_d0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_d0,
        line_buffer_1_address0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_address0,
        line_buffer_1_ce0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_ce0,
        line_buffer_1_we0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_we0,
        line_buffer_1_d0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_d0,
        line_buffer_2_address0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_address0,
        line_buffer_2_ce0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_ce0,
        line_buffer_2_we0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_we0,
        line_buffer_2_d0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_d0,
        line_buffer_3_address0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_address0,
        line_buffer_3_ce0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_ce0,
        line_buffer_3_we0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_we0,
        line_buffer_3_d0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_d0,
        line_buffer_4_address0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_address0,
        line_buffer_4_ce0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_ce0,
        line_buffer_4_we0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_we0,
        line_buffer_4_d0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_d0,
        line_buffer_5_address0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_address0,
        line_buffer_5_ce0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_ce0,
        line_buffer_5_we0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_we0,
        line_buffer_5_d0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_d0,
        line_buffer_6_address0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_address0,
        line_buffer_6_ce0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_ce0,
        line_buffer_6_we0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_we0,
        line_buffer_6_d0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_d0,
        line_buffer_7_address0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_address0,
        line_buffer_7_ce0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_ce0,
        line_buffer_7_we0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_we0,
        line_buffer_7_d0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_d0,
        line_buffer_8_address0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_address0,
        line_buffer_8_ce0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_ce0,
        line_buffer_8_we0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_we0,
        line_buffer_8_d0 => grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_d0);

    grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939 : component filter_kernel_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_start,
        ap_done => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_done,
        ap_idle => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_idle,
        ap_ready => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_ready,
        channels => channels_read_reg_3067,
        bound81 => tmp_s_reg_3466,
        line_buffer_6_address0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_6_address0,
        line_buffer_6_ce0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_6_ce0,
        line_buffer_6_q0 => line_buffer_6_q0,
        line_buffer_7_address0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_7_address0,
        line_buffer_7_ce0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_7_ce0,
        line_buffer_7_q0 => line_buffer_7_q0,
        line_buffer_8_address0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_8_address0,
        line_buffer_8_ce0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_8_ce0,
        line_buffer_8_q0 => line_buffer_8_q0,
        line_buffer_address0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_address0,
        line_buffer_ce0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_ce0,
        line_buffer_we0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_we0,
        line_buffer_d0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_d0,
        line_buffer_1_address0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_address0,
        line_buffer_1_ce0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_ce0,
        line_buffer_1_we0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_we0,
        line_buffer_1_d0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_d0,
        line_buffer_2_address0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_address0,
        line_buffer_2_ce0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_ce0,
        line_buffer_2_we0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_we0,
        line_buffer_2_d0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_d0,
        bound67 => bound67_reg_3461,
        line_buffer_3_address0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_address0,
        line_buffer_3_ce0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_ce0,
        line_buffer_3_we0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_we0,
        line_buffer_3_d0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_d0,
        line_buffer_3_q0 => line_buffer_3_q0,
        line_buffer_4_address0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_address0,
        line_buffer_4_ce0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_ce0,
        line_buffer_4_we0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_we0,
        line_buffer_4_d0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_d0,
        line_buffer_4_q0 => line_buffer_4_q0,
        line_buffer_5_address0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_address0,
        line_buffer_5_ce0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_ce0,
        line_buffer_5_we0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_we0,
        line_buffer_5_d0 => grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_d0,
        line_buffer_5_q0 => line_buffer_5_q0);

    grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955 : component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_start,
        ap_done => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_done,
        ap_idle => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_idle,
        ap_ready => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_ready,
        line_buffer_8_address0 => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_address0,
        line_buffer_8_ce0 => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_ce0,
        line_buffer_8_we0 => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_we0,
        line_buffer_8_d0 => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_d0,
        line_buffer_7_address0 => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_address0,
        line_buffer_7_ce0 => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_ce0,
        line_buffer_7_we0 => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_we0,
        line_buffer_7_d0 => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_d0,
        line_buffer_6_address0 => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_address0,
        line_buffer_6_ce0 => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_ce0,
        line_buffer_6_we0 => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_we0,
        line_buffer_6_d0 => grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_d0,
        xor_ln114 => xor_ln114_reg_3683,
        mul_ln114 => mul_ln114_reg_3719,
        zext_ln114 => trunc_ln114_reg_3578,
        sext_ln75_1 => empty_49_reg_3121,
        sext_ln75 => channels_read_reg_3067,
        cmp155 => cmp155_reg_3496,
        axie4_data => axie4_data_reg_3724);

    grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970 : component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_147_14
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_start,
        ap_done => grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_done,
        ap_idle => grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_idle,
        ap_ready => grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_ready,
        window_14_load_1 => reg_1214,
        window_12_load_1 => reg_1208,
        window_13_load_1 => reg_1202,
        channels => channels_read_reg_3067,
        line_buffer_3_load_1 => reg_1187,
        line_buffer_4_load_1 => reg_1192,
        line_buffer_5_load_1 => reg_1197,
        window_39_out => grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_39_out,
        window_39_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_39_out_ap_vld,
        window_38_out => grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_38_out,
        window_38_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_38_out_ap_vld,
        window_37_out => grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_37_out,
        window_37_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_37_out_ap_vld);

    grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987 : component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_160_15
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_start,
        ap_done => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_done,
        ap_idle => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_idle,
        ap_ready => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_ready,
        channels => channels_read_reg_3067,
        window_load => window_fu_392,
        window_1_load => window_1_fu_396,
        window_2_load => window_2_fu_400,
        window_9_load => window_6_fu_416,
        window_10_load => window_7_fu_420,
        window_11_load => window_8_fu_424,
        window_18_load => window_12_fu_440,
        window_19_load => window_13_fu_444,
        window_20_load => window_14_fu_448,
        window_3_load_1 => window_3_load_1_reg_3890,
        window_4_load_1 => window_4_load_1_reg_3895,
        window_5_load_1 => window_5_load_1_reg_3900,
        window_12_load_2 => reg_1208,
        window_13_load_2 => reg_1202,
        window_14_load_2 => reg_1214,
        window_21_load_1 => window_15_load_1_reg_3905,
        window_22_load_1 => window_16_load_1_reg_3910,
        window_23_load_1 => window_17_load_1_reg_3915,
        window_6_load_1 => window_6_0125_load_1_reg_3818,
        window_7_load_1 => window_7_0126_load_1_reg_3823,
        window_8_load_1 => window_8_0127_load_1_reg_3828,
        window_15_load_1 => window_15_0128_load_1_reg_3833,
        window_16_load_1 => window_16_0129_load_1_reg_3838,
        window_17_load_1 => window_17_0130_load_1_reg_3843,
        window_24_load_1 => window_24_0131_load_1_reg_3848,
        window_25_load_1 => window_25_0132_load_1_reg_3853,
        window_26_load_1 => window_26_0133_load_1_reg_3858,
        mux_case_014216_reload => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_014216_out,
        mux_case_032243_reload => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_032243_out,
        mux_case_097270_reload => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_097270_out,
        mux_case_116225_reload => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_116225_out,
        mux_case_134252_reload => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_134252_out,
        mux_case_199279_reload => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_199279_out,
        mux_case_218234_reload => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_218234_out,
        mux_case_236261_reload => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_236261_out,
        mux_case_2101288_reload => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_mux_case_2101288_out,
        filter_divisor => filter_divisor_read_reg_3101,
        output_pixel_2_out => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_2_out,
        output_pixel_2_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_2_out_ap_vld,
        output_pixel_1_out => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_1_out,
        output_pixel_1_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_1_out_ap_vld,
        output_pixel_out => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_out,
        output_pixel_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_out_ap_vld);

    grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032 : component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_222_20
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_start,
        ap_done => grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_done,
        ap_idle => grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_idle,
        ap_ready => grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_ready,
        empty => byte_offset_reg_3936,
        output_axie4_data => output_axie4_data_reg_3971,
        input_axie4_data => input_axie4_data_reg_3966,
        sub_ln222 => sub_ln222_reg_3987,
        output_axie4_data_2_out => grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_output_axie4_data_2_out,
        output_axie4_data_2_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_output_axie4_data_2_out_ap_vld);

    grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041 : component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_237_21
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_start,
        ap_done => grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_done,
        ap_idle => grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_idle,
        ap_ready => grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_ready,
        next_output_axie4_data => next_output_axie4_data_reg_4032,
        remaining_channels => remaining_channels_reg_4037,
        next_input_axie4_data => next_input_axie4_data_reg_4027,
        next_output_axie4_data_1_out => grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_next_output_axie4_data_1_out,
        next_output_axie4_data_1_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_next_output_axie4_data_1_out_ap_vld);

    grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049 : component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_188_18
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_start,
        ap_done => grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_done,
        ap_idle => grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_idle,
        ap_ready => grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_ready,
        empty => byte_offset_1_reg_4058,
        axie4_data_1 => axie4_data_4_reg_4078,
        output_pixel_reload => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_out,
        output_pixel_1_reload => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_1_out,
        output_pixel_2_reload => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_2_out,
        sub_ln188 => sub_ln188_reg_4103,
        axie4_data_3_out => grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_axie4_data_3_out,
        axie4_data_3_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_axie4_data_3_out_ap_vld);

    grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060 : component filter_kernel_filter_kernel_Pipeline_VITIS_LOOP_204_19
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_start,
        ap_done => grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_done,
        ap_idle => grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_idle,
        ap_ready => grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_ready,
        next_axie4_data => next_axie4_data_reg_4132,
        remaining_channels_1 => remaining_channels_1_reg_4137,
        sub342_cast => sub342_reg_4142,
        output_pixel_2_reload => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_2_out,
        output_pixel_1_reload => grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_output_pixel_1_out,
        next_axie4_data_1_out => grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_next_axie4_data_1_out,
        next_axie4_data_1_out_ap_vld => grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_next_axie4_data_1_out_ap_vld);

    control_s_axi_U : component filter_kernel_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        filter_divisor => filter_divisor,
        width => width,
        height => height,
        channels => channels,
        filter_address0 => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_filter_address0,
        filter_ce0 => grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_filter_ce0,
        filter_q0 => filter_q0,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    control_r_s_axi_U : component filter_kernel_control_r_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_R_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_R_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_r_AWVALID,
        AWREADY => s_axi_control_r_AWREADY,
        AWADDR => s_axi_control_r_AWADDR,
        WVALID => s_axi_control_r_WVALID,
        WREADY => s_axi_control_r_WREADY,
        WDATA => s_axi_control_r_WDATA,
        WSTRB => s_axi_control_r_WSTRB,
        ARVALID => s_axi_control_r_ARVALID,
        ARREADY => s_axi_control_r_ARREADY,
        ARADDR => s_axi_control_r_ARADDR,
        RVALID => s_axi_control_r_RVALID,
        RREADY => s_axi_control_r_RREADY,
        RDATA => s_axi_control_r_RDATA,
        RRESP => s_axi_control_r_RRESP,
        BVALID => s_axi_control_r_BVALID,
        BREADY => s_axi_control_r_BREADY,
        BRESP => s_axi_control_r_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        input_image => input_image,
        output_image => output_image);

    gmem0_m_axi_U : component filter_kernel_gmem0_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 256,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 12,
        CH0_USER_DW => 128,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 8,
        NUM_WRITE_OUTSTANDING => 0)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => gmem0_0_ARVALID,
        I_CH0_ARREADY => gmem0_0_ARREADY,
        I_CH0_ARADDR => gmem0_0_ARADDR,
        I_CH0_ARLEN => gmem0_0_ARLEN,
        I_CH0_RVALID => gmem0_0_RVALID,
        I_CH0_RREADY => gmem0_0_RREADY,
        I_CH0_RDATA => gmem0_0_RDATA,
        I_CH0_RFIFONUM => gmem0_0_RFIFONUM,
        I_CH0_AWVALID => ap_const_logic_0,
        I_CH0_AWREADY => gmem0_0_AWREADY,
        I_CH0_AWADDR => ap_const_lv64_0,
        I_CH0_AWLEN => ap_const_lv32_0,
        I_CH0_WVALID => ap_const_logic_0,
        I_CH0_WREADY => gmem0_0_WREADY,
        I_CH0_WDATA => ap_const_lv128_lc_1,
        I_CH0_WSTRB => ap_const_lv16_0,
        I_CH0_BVALID => gmem0_0_BVALID,
        I_CH0_BREADY => ap_const_logic_0);

    gmem1_m_axi_U : component filter_kernel_gmem1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 256,
        MAX_WRITE_BURST_LENGTH => 256,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 12,
        CH0_USER_DW => 128,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 8,
        NUM_WRITE_OUTSTANDING => 8)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => gmem1_0_ARVALID,
        I_CH0_ARREADY => gmem1_0_ARREADY,
        I_CH0_ARADDR => gmem1_0_ARADDR,
        I_CH0_ARLEN => gmem1_0_ARLEN,
        I_CH0_RVALID => gmem1_0_RVALID,
        I_CH0_RREADY => gmem1_0_RREADY,
        I_CH0_RDATA => gmem1_0_RDATA,
        I_CH0_RFIFONUM => gmem1_0_RFIFONUM,
        I_CH0_AWVALID => gmem1_0_AWVALID,
        I_CH0_AWREADY => gmem1_0_AWREADY,
        I_CH0_AWADDR => gmem1_0_AWADDR,
        I_CH0_AWLEN => gmem1_0_AWLEN,
        I_CH0_WVALID => gmem1_0_WVALID,
        I_CH0_WREADY => gmem1_0_WREADY,
        I_CH0_WDATA => gmem1_0_WDATA,
        I_CH0_WSTRB => ap_const_lv16_FFFF,
        I_CH0_BVALID => gmem1_0_BVALID,
        I_CH0_BREADY => gmem1_0_BREADY);

    mul_31ns_31ns_62_1_1_U167 : component filter_kernel_mul_31ns_31ns_62_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 31,
        dout_WIDTH => 62)
    port map (
        din0 => mul_ln58_fu_1070_p0,
        din1 => mul_ln58_fu_1070_p1,
        dout => mul_ln58_fu_1070_p2);

    mul_32ns_31ns_63_1_1_U168 : component filter_kernel_mul_32ns_31ns_63_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 31,
        dout_WIDTH => 63)
    port map (
        din0 => bound67_fu_1074_p0,
        din1 => bound67_fu_1074_p1,
        dout => bound67_fu_1074_p2);

    mul_32s_32s_32_1_1_U169 : component filter_kernel_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => grp_fu_1078_p0,
        din1 => channels_read_reg_3067,
        dout => grp_fu_1078_p2);

    mul_64ns_64ns_128_3_1_U170 : component filter_kernel_mul_64ns_64ns_128_3_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 128)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1082_p0,
        din1 => grp_fu_1082_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1082_p2);

    sparsemux_7_2_8_1_1_U171 : component filter_kernel_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => window_3_fu_404,
        din1 => window_4_fu_408,
        din2 => window_5_fu_412,
        def => tmp_fu_1620_p7,
        sel => k_1_reg_798,
        dout => tmp_fu_1620_p9);

    sparsemux_7_2_8_1_1_U172 : component filter_kernel_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => window_6_0125_fu_244,
        din1 => window_7_0126_fu_248,
        din2 => window_8_0127_fu_252,
        def => tmp_1_fu_1640_p7,
        sel => k_1_reg_798,
        dout => tmp_1_fu_1640_p9);

    sparsemux_7_2_8_1_1_U173 : component filter_kernel_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => grp_load_fu_1134_p1,
        din1 => grp_load_fu_1139_p1,
        din2 => grp_load_fu_1144_p1,
        def => tmp_3_fu_1667_p7,
        sel => k_1_reg_798,
        dout => tmp_3_fu_1667_p9);

    sparsemux_7_2_8_1_1_U174 : component filter_kernel_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => window_15_0128_fu_256,
        din1 => window_16_0129_fu_260,
        din2 => window_17_0130_fu_264,
        def => tmp_4_fu_1687_p7,
        sel => k_1_reg_798,
        dout => tmp_4_fu_1687_p9);

    sparsemux_7_2_8_1_1_U175 : component filter_kernel_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => window_15_fu_452,
        din1 => window_16_fu_456,
        din2 => window_17_fu_460,
        def => tmp_6_fu_1714_p7,
        sel => k_1_reg_798,
        dout => tmp_6_fu_1714_p9);

    sparsemux_7_2_8_1_1_U176 : component filter_kernel_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => window_24_0131_fu_268,
        din1 => window_25_0132_fu_272,
        din2 => window_26_0133_fu_276,
        def => tmp_7_fu_1734_p7,
        sel => k_1_reg_798,
        dout => tmp_7_fu_1734_p9);

    sparsemux_7_2_8_1_1_U177 : component filter_kernel_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => window_18_fu_1761_p2,
        din1 => window_18_fu_1761_p4,
        din2 => window_18_fu_1761_p6,
        def => window_18_fu_1761_p7,
        sel => select_ln89_1_reg_3543,
        dout => window_18_fu_1761_p9);

    sparsemux_7_2_8_1_1_U178 : component filter_kernel_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => line_buffer_load_reg_3729,
        din1 => line_buffer_1_load_reg_3734,
        din2 => line_buffer_2_load_reg_3739,
        def => tmp_5_fu_2190_p7,
        sel => trunc_ln136_fu_2186_p1,
        dout => tmp_5_fu_2190_p9);

    sparsemux_7_2_8_1_1_U179 : component filter_kernel_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => reg_1187,
        din1 => reg_1192,
        din2 => reg_1197,
        def => tmp_8_fu_2207_p7,
        sel => trunc_ln136_fu_2186_p1,
        dout => tmp_8_fu_2207_p9);

    sparsemux_7_2_8_1_1_U180 : component filter_kernel_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => line_buffer_6_load_reg_3744,
        din1 => line_buffer_7_load_reg_3749,
        din2 => line_buffer_8_load_reg_3754,
        def => tmp_10_fu_2227_p7,
        sel => trunc_ln136_fu_2186_p1,
        dout => tmp_10_fu_2227_p9);

    sparsemux_7_2_8_1_1_U181 : component filter_kernel_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tmp_5_fu_2190_p9,
        din1 => tmp_8_fu_2207_p9,
        din2 => tmp_10_fu_2227_p9,
        def => tmp_11_fu_2244_p7,
        sel => i_2_reg_864,
        dout => tmp_11_fu_2244_p9);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state22) and (gmem0_0_RVALID = ap_const_logic_1))) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_ready = ap_const_logic_1)) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_ready = ap_const_logic_1)) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = and_ln155_1_fu_2529_p2) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_ready = ap_const_logic_1)) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_ready = ap_const_logic_1)) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state99)) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_ready = ap_const_logic_1)) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_ready = ap_const_logic_1)) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_ready = ap_const_logic_1)) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_ready = ap_const_logic_1)) then 
                    grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_ready = ap_const_logic_1)) then 
                    grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln99_fu_1599_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln89_fu_1531_p2 = ap_const_lv1_1))) then 
                    grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_ready = ap_const_logic_1)) then 
                    grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    axie4_data300_0_lcssa_reg_897_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp2538_reg_3353 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state83) and (gmem1_0_AWREADY = ap_const_logic_1))) then 
                axie4_data300_0_lcssa_reg_897 <= axie4_data_3_loc_fu_292;
            elsif (((cmp2538_reg_3353 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state80))) then 
                axie4_data300_0_lcssa_reg_897 <= axie4_data_4_reg_4078;
            end if; 
        end if;
    end process;

    col_reg_753_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state68) and (ap_const_boolean_0 = ap_block_state68))) then 
                col_reg_753 <= indvars_iv_next122_reg_3515;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln85_fu_1476_p2 = ap_const_lv1_1))) then 
                col_reg_753 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    i_2_reg_864_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln136_fu_2175_p2 = ap_const_lv1_0))) then 
                i_2_reg_864 <= add_ln135_reg_3762;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                i_2_reg_864 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i_reg_776_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_0))) then 
                i_reg_776 <= select_ln89_1_reg_3543;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln87_fu_1508_p2 = ap_const_lv1_1))) then 
                i_reg_776 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    indvar_flatten55_reg_765_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_0))) then 
                indvar_flatten55_reg_765 <= add_ln89_1_reg_3531;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln87_fu_1508_p2 = ap_const_lv1_1))) then 
                indvar_flatten55_reg_765 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    indvars_iv5_reg_853_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10_on_subcall_done))) then 
                indvars_iv5_reg_853 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_done = ap_const_logic_1))) then 
                indvars_iv5_reg_853 <= add_ln114_1_reg_3612;
            end if; 
        end if;
    end process;

    j_1_reg_831_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10_on_subcall_done))) then 
                j_1_reg_831 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_done = ap_const_logic_1))) then 
                j_1_reg_831 <= add_ln114_reg_3607;
            end if; 
        end if;
    end process;

    j_reg_787_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_0))) then 
                j_reg_787 <= indvars_iv_next62_reg_3549;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln87_fu_1508_p2 = ap_const_lv1_1))) then 
                j_reg_787 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    k_1_reg_798_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then 
                k_1_reg_798 <= add_ln91_fu_1614_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln89_fu_1531_p2 = ap_const_lv1_0))) then 
                k_1_reg_798 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    k_5_reg_876_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln136_fu_2175_p2 = ap_const_lv1_1))) then 
                k_5_reg_876 <= add_ln136_fu_2180_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln135_fu_2123_p2 = ap_const_lv1_0))) then 
                k_5_reg_876 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    output_axie4_data_0_lcssa_reg_887_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp2538_reg_3353 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44) and (gmem1_0_AWREADY = ap_const_logic_1))) then 
                output_axie4_data_0_lcssa_reg_887 <= output_axie4_data_2_loc_fu_284;
            elsif (((cmp2538_reg_3353 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                output_axie4_data_0_lcssa_reg_887 <= output_axie4_data_reg_3971;
            end if; 
        end if;
    end process;

    phi_ln114_1_reg_842_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10_on_subcall_done))) then 
                phi_ln114_1_reg_842 <= ap_const_lv63_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_done = ap_const_logic_1))) then 
                phi_ln114_1_reg_842 <= add_ln114_2_reg_3617;
            end if; 
        end if;
    end process;

    phi_ln114_reg_809_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10_on_subcall_done))) then 
                phi_ln114_reg_809 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_done = ap_const_logic_1))) then 
                phi_ln114_reg_809 <= add_ln114_4_reg_3627;
            end if; 
        end if;
    end process;

    phi_mul_fu_236_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul_fu_236 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln87_fu_1508_p2 = ap_const_lv1_0))) then 
                phi_mul_fu_236 <= add_ln85_1_reg_3483;
            end if; 
        end if;
    end process;

    row_fu_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                row_fu_240 <= ap_const_lv31_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln87_fu_1508_p2 = ap_const_lv1_0))) then 
                row_fu_240 <= add_ln85_reg_3491;
            end if; 
        end if;
    end process;

    tripcount_iv_reg_820_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10_on_subcall_done))) then 
                tripcount_iv_reg_820 <= ap_const_lv32_10;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_done = ap_const_logic_1))) then 
                tripcount_iv_reg_820 <= add_ln114_3_reg_3622;
            end if; 
        end if;
    end process;

    window_10_fu_432_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cond292_reg_3554 = ap_const_lv1_0) and (select_ln89_1_reg_3543 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_1) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then 
                window_10_fu_432 <= window_18_fu_1761_p9;
            elsif (((cmp2538_reg_3353 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                window_10_fu_432 <= grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_37_out;
            end if; 
        end if;
    end process;

    window_11_fu_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_1)) and not((ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_0)) and (cond292_reg_3554 = ap_const_lv1_0) and (select_ln89_1_reg_3543 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then 
                window_11_fu_436 <= window_18_fu_1761_p9;
            elsif (((cmp2538_reg_3353 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                window_11_fu_436 <= grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_39_out;
            end if; 
        end if;
    end process;

    window_9_fu_428_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cond292_reg_3554 = ap_const_lv1_0) and (select_ln89_1_reg_3543 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_0) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then 
                window_9_fu_428 <= window_18_fu_1761_p9;
            elsif (((cmp2538_reg_3353 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                window_9_fu_428 <= grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_38_out;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln114_1_reg_3612 <= add_ln114_1_fu_1948_p2;
                add_ln114_2_reg_3617 <= add_ln114_2_fu_1953_p2;
                add_ln114_3_reg_3622 <= add_ln114_3_fu_1958_p2;
                add_ln114_4_reg_3627 <= add_ln114_4_fu_1964_p2;
                add_ln114_reg_3607 <= add_ln114_fu_1942_p2;
                add_ln115_reg_3596 <= add_ln115_fu_1931_p2;
                add_ln119_reg_3601 <= add_ln119_fu_1936_p2;
                cmp193_reg_3632 <= cmp193_fu_1970_p2;
                select_ln114_reg_3583 <= select_ln114_fu_1896_p3;
                sext_ln114_reg_3570 <= sext_ln114_fu_1870_p1;
                sub_ln114_reg_3588 <= sub_ln114_fu_1925_p2;
                trunc_ln114_reg_3578 <= trunc_ln114_fu_1883_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                add_ln135_reg_3762 <= add_ln135_fu_2129_p2;
                sel_tmp13_reg_3785 <= sel_tmp13_fu_2165_p2;
                sel_tmp1_reg_3773 <= sel_tmp1_fu_2141_p2;
                sel_tmp_reg_3767 <= sel_tmp_fu_2135_p2;
                tmp60_reg_3780 <= tmp60_fu_2147_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln85_1_reg_3483 <= add_ln85_1_fu_1467_p2;
                add_ln85_reg_3491 <= add_ln85_fu_1481_p2;
                and_ln155_reg_3501 <= and_ln155_fu_1498_p2;
                cmp155_reg_3496 <= cmp155_fu_1487_p2;
                phi_mul_load_reg_3477 <= phi_mul_fu_236;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                add_ln89_1_reg_3531 <= add_ln89_1_fu_1537_p2;
                and_ln89_reg_3536 <= and_ln89_fu_1565_p2;
                cond292_reg_3554 <= cond292_fu_1593_p2;
                icmp_ln99_reg_3558 <= icmp_ln99_fu_1599_p2;
                indvars_iv_next62_reg_3549 <= indvars_iv_next62_fu_1579_p3;
                select_ln89_1_reg_3543 <= select_ln89_1_fu_1571_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                and_ln155_1_reg_3814 <= and_ln155_1_fu_2529_p2;
                window_15_0128_load_1_reg_3833 <= window_15_0128_fu_256;
                window_15_load_1_reg_3905 <= window_15_fu_452;
                window_16_0129_load_1_reg_3838 <= window_16_0129_fu_260;
                window_16_load_1_reg_3910 <= window_16_fu_456;
                window_17_0130_load_1_reg_3843 <= window_17_0130_fu_264;
                window_17_load_1_reg_3915 <= window_17_fu_460;
                window_24_0131_load_1_reg_3848 <= window_24_0131_fu_268;
                window_25_0132_load_1_reg_3853 <= window_25_0132_fu_272;
                window_26_0133_load_1_reg_3858 <= window_26_0133_fu_276;
                window_3_load_1_reg_3890 <= window_3_fu_404;
                window_4_load_1_reg_3895 <= window_4_fu_408;
                window_5_load_1_reg_3900 <= window_5_fu_412;
                window_6_0125_load_1_reg_3818 <= window_6_0125_fu_244;
                window_7_0126_load_1_reg_3823 <= window_7_0126_fu_248;
                window_8_0127_load_1_reg_3828 <= window_8_0127_fu_252;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state82) and (grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_axie4_data_3_out_ap_vld = ap_const_logic_1))) then
                axie4_data_3_loc_fu_292 <= grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_axie4_data_3_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                axie4_data_4_reg_4078 <= gmem1_0_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                axie4_data_reg_3724 <= gmem0_0_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                axie4_idx_1_reg_4053 <= axie4_idx_1_fu_2806_p3;
                byte_offset_1_reg_4058 <= byte_offset_1_fu_2830_p3;
                trunc_ln_reg_4066 <= add_ln186_fu_2849_p2(63 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                axie4_idx_reg_3931 <= axie4_idx_fu_2574_p3;
                byte_offset_reg_3936 <= byte_offset_fu_2598_p3;
                trunc_ln1_reg_3948 <= add_ln220_fu_2632_p2(63 downto 4);
                trunc_ln9_reg_3943 <= add_ln219_fu_2617_p2(63 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                bound67_reg_3461 <= bound67_fu_1074_p2;
                sext_ln75_1_reg_3409 <= sext_ln75_1_fu_1351_p1;
                    sext_ln85_1_reg_3450(62 downto 4) <= sext_ln85_1_fu_1398_p1(62 downto 4);
                sext_ln85_2_reg_3455 <= sext_ln85_2_fu_1414_p1;
                    sext_ln85_reg_3445(63 downto 4) <= sext_ln85_fu_1394_p1(63 downto 4);
                sub192_reg_3420 <= sub192_fu_1363_p2;
                sub_ln85_1_reg_3435 <= sub_ln85_1_fu_1377_p2;
                sub_ln85_3_cast_reg_3471 <= sub_ln85_3_cast_fu_1457_p1;
                sub_ln85_reg_3425 <= sub_ln85_fu_1368_p2;
                sub_reg_3415 <= sub_fu_1358_p2;
                    tmp_s_reg_3466(63 downto 1) <= tmp_s_fu_1422_p3(63 downto 1);
                trunc_ln85_1_reg_3440 <= trunc_ln85_1_fu_1383_p1;
                trunc_ln85_reg_3430 <= trunc_ln85_fu_1373_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                channels_read_reg_3067 <= channels;
                cmp2538_reg_3353 <= cmp2538_fu_1259_p2;
                empty_49_reg_3121 <= empty_49_fu_1255_p1;
                empty_50_reg_3359 <= empty_50_fu_1265_p2;
                filter_divisor_read_reg_3101 <= filter_divisor;
                height_read_reg_3086 <= height;
                input_image_read_reg_3114 <= input_image;
                output_image_read_reg_3106 <= output_image;
                smax26_reg_3364 <= smax26_fu_1271_p3;
                width_read_reg_3092 <= width;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
                gmem1_addr_1_reg_4071 <= sext_ln186_1_fu_2864_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                gmem1_addr_2_reg_4020 <= sext_ln235_fu_2782_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state90)) then
                gmem1_addr_3_reg_4125 <= sext_ln202_1_fu_2973_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                gmem1_addr_reg_3959 <= sext_ln220_fu_2657_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state83)) then
                icmp_ln200_reg_4116 <= icmp_ln200_fu_2935_p2;
                trunc_ln200_reg_4111 <= trunc_ln200_fu_2931_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                icmp_ln232_reg_4000 <= icmp_ln232_fu_2719_p2;
                trunc_ln232_reg_3995 <= trunc_ln232_fu_2715_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                indvars_iv_next122_reg_3515 <= indvars_iv_next122_fu_1513_p2;
                    zext_ln87_1_reg_3506(30 downto 0) <= zext_ln87_1_fu_1504_p1(30 downto 0);
                    zext_ln87_reg_3521(30 downto 0) <= zext_ln87_fu_1519_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                input_axie4_data_reg_3966 <= gmem0_0_RDATA;
                output_axie4_data_reg_3971 <= gmem1_0_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                line_buffer_1_load_reg_3734 <= line_buffer_1_q0;
                line_buffer_2_load_reg_3739 <= line_buffer_2_q0;
                line_buffer_6_load_reg_3744 <= line_buffer_6_q0;
                line_buffer_7_load_reg_3749 <= line_buffer_7_q0;
                line_buffer_8_load_reg_3754 <= line_buffer_8_q0;
                line_buffer_load_reg_3729 <= line_buffer_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                mul_ln114_reg_3719 <= grp_fu_1082_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                mul_ln58_reg_3370 <= mul_ln58_fu_1070_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state98)) then
                next_axie4_data_reg_4132 <= gmem1_0_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then
                next_input_axie4_data_reg_4027 <= gmem0_0_RDATA;
                next_output_axie4_data_reg_4032 <= gmem1_0_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state43) and (grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_output_axie4_data_2_out_ap_vld = ap_const_logic_1))) then
                output_axie4_data_2_loc_fu_284 <= grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_output_axie4_data_2_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state12))) then
                reg_1183 <= grp_fu_1078_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state24))) then
                reg_1187 <= line_buffer_3_q0;
                reg_1192 <= line_buffer_4_q0;
                reg_1197 <= line_buffer_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state27))) then
                reg_1202 <= grp_load_fu_1139_p1;
                reg_1208 <= grp_load_fu_1134_p1;
                reg_1214 <= grp_load_fu_1144_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = and_ln155_1_fu_2529_p2) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((ap_const_lv1_0 = and_ln155_1_fu_2529_p2) and (ap_const_logic_1 = ap_CS_fsm_state29)))) then
                reg_1220 <= grp_fu_1161_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state30))) then
                reg_1225 <= grp_fu_1078_p2(31 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state99)) then
                remaining_channels_1_reg_4137 <= remaining_channels_1_fu_2983_p2;
                sub342_reg_4142 <= sub342_fu_2989_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state60)) then
                remaining_channels_reg_4037 <= remaining_channels_fu_2792_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state80)) then
                sext_ln182_reg_4093 <= sext_ln182_fu_2883_p1;
                sext_ln183_reg_4098 <= sext_ln183_fu_2886_p1;
                sub_ln188_reg_4103 <= sub_ln188_fu_2918_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                sext_ln216_reg_3977 <= sext_ln216_fu_2667_p1;
                sext_ln217_reg_3982 <= sext_ln217_fu_2670_p1;
                sub_ln222_reg_3987 <= sub_ln222_fu_2702_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                sub_ln119_reg_3688 <= sub_ln119_fu_2026_p2;
                xor_ln114_reg_3683 <= xor_ln114_fu_1999_p2;
                xor_ln119_reg_3693 <= xor_ln119_fu_2042_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                sub_ln58_reg_3377 <= sub_ln58_fu_1314_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then
                tmp_16_reg_4042 <= grp_fu_1078_p2(31 downto 31);
                trunc_ln183_reg_4048 <= trunc_ln183_fu_2802_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                tmp_19_reg_3920 <= grp_fu_1078_p2(31 downto 31);
                trunc_ln217_reg_3926 <= trunc_ln217_fu_2570_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state89)) then
                trunc_ln2_reg_4120 <= add_ln202_1_fu_2958_p2(63 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                trunc_ln3_reg_3698 <= add_ln116_fu_2086_p2(63 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                trunc_ln4_reg_4004 <= add_ln234_1_fu_2742_p2(63 downto 4);
                trunc_ln5_reg_4009 <= add_ln235_fu_2757_p2(63 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((select_ln89_1_reg_3543 = ap_const_lv2_1)) and not((select_ln89_1_reg_3543 = ap_const_lv2_0)) and (cond292_reg_3554 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_0) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_12_fu_440 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((select_ln89_1_reg_3543 = ap_const_lv2_1)) and not((select_ln89_1_reg_3543 = ap_const_lv2_0)) and (cond292_reg_3554 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_1) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_13_fu_444 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_1)) and not((ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_0)) and not((select_ln89_1_reg_3543 = ap_const_lv2_1)) and not((select_ln89_1_reg_3543 = ap_const_lv2_0)) and (cond292_reg_3554 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_14_fu_448 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln136_fu_2175_p2 = ap_const_lv1_1))) then
                window_15_0128_fu_256 <= storemerge328_fu_2428_p3;
                window_16_0129_fu_260 <= storemerge325_fu_2441_p3;
                window_17_0130_fu_264 <= storemerge331_fu_2415_p3;
                window_24_0131_fu_268 <= storemerge346_fu_2307_p3;
                window_25_0132_fu_272 <= storemerge343_fu_2320_p3;
                window_26_0133_fu_276 <= storemerge349_fu_2294_p3;
                window_6_0125_fu_244 <= storemerge338_fu_2389_p3;
                window_7_0126_fu_248 <= storemerge335_fu_2402_p3;
                window_8_0127_fu_252 <= storemerge341_fu_2351_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((select_ln89_1_reg_3543 = ap_const_lv2_1)) and not((select_ln89_1_reg_3543 = ap_const_lv2_0)) and (cond292_reg_3554 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_0) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_15_fu_452 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((select_ln89_1_reg_3543 = ap_const_lv2_1)) and not((select_ln89_1_reg_3543 = ap_const_lv2_0)) and (cond292_reg_3554 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_1) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_16_fu_456 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_1)) and not((ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_0)) and not((select_ln89_1_reg_3543 = ap_const_lv2_1)) and not((select_ln89_1_reg_3543 = ap_const_lv2_0)) and (cond292_reg_3554 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_17_fu_460 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cond292_reg_3554 = ap_const_lv1_1) and (select_ln89_1_reg_3543 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_1) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_1_fu_396 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_1)) and not((ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_0)) and (cond292_reg_3554 = ap_const_lv1_1) and (select_ln89_1_reg_3543 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_2_fu_400 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cond292_reg_3554 = ap_const_lv1_0) and (select_ln89_1_reg_3543 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_0) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_3_fu_404 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cond292_reg_3554 = ap_const_lv1_0) and (select_ln89_1_reg_3543 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_1) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_4_fu_408 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_1)) and not((ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_0)) and (cond292_reg_3554 = ap_const_lv1_0) and (select_ln89_1_reg_3543 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_5_fu_412 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cond292_reg_3554 = ap_const_lv1_1) and (select_ln89_1_reg_3543 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_0) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_6_fu_416 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cond292_reg_3554 = ap_const_lv1_1) and (select_ln89_1_reg_3543 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_1) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_7_fu_420 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_1)) and not((ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_0)) and (cond292_reg_3554 = ap_const_lv1_1) and (select_ln89_1_reg_3543 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_8_fu_424 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cond292_reg_3554 = ap_const_lv1_1) and (select_ln89_1_reg_3543 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state9) and (ap_phi_mux_k_1_phi_fu_802_p4 = ap_const_lv2_0) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1))) then
                window_fu_392 <= window_18_fu_1761_p9;
            end if;
        end if;
    end process;
    sext_ln85_reg_3445(3 downto 0) <= "0000";
    sext_ln85_1_reg_3450(3 downto 0) <= "0000";
    tmp_s_reg_3466(0) <= '0';
    zext_ln87_1_reg_3506(31) <= '0';
    zext_ln87_reg_3521(63 downto 31) <= "000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state14, ap_CS_fsm_state22, ap_CS_fsm_state32, ap_CS_fsm_state40, ap_CS_fsm_state51, ap_CS_fsm_state59, ap_CS_fsm_state71, ap_CS_fsm_state79, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state89, ap_CS_fsm_state90, ap_CS_fsm_state98, ap_CS_fsm_state101, ap_CS_fsm_state102, ap_CS_fsm_state68, icmp_ln200_reg_4116, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state50, ap_CS_fsm_state62, ap_CS_fsm_state63, icmp_ln232_reg_4000, ap_CS_fsm_state69, ap_CS_fsm_state29, and_ln155_1_fu_2529_p2, cmp2538_reg_3353, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state41, ap_CS_fsm_state80, grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_done, grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_done, grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_done, grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_done, grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_done, grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_done, grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_done, gmem0_0_ARREADY, gmem0_0_RVALID, gmem1_0_AWREADY, gmem1_0_WREADY, gmem1_0_ARREADY, gmem1_0_RVALID, gmem1_0_BVALID, icmp_ln85_fu_1476_p2, ap_block_state68, icmp_ln87_fu_1508_p2, icmp_ln91_fu_1609_p2, icmp_ln89_fu_1531_p2, ap_CS_fsm_state23, ap_CS_fsm_state10, ap_block_state10_on_subcall_done, icmp_ln136_fu_2175_p2, icmp_ln135_fu_2123_p2, ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state43, ap_CS_fsm_state61, ap_CS_fsm_state82, ap_CS_fsm_state100, icmp_ln114_1_fu_1878_p2, ap_block_state32_io, ap_block_state40, ap_block_state51_io, ap_block_state59, ap_block_state4_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_boolean_0 = ap_block_state4_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln85_fu_1476_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln87_fu_1508_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln89_fu_1531_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (ap_const_boolean_0 = ap_block_state10_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln114_1_fu_1878_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (gmem0_0_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state22) and (gmem0_0_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state23) and (grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln135_fu_2123_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state26 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln136_fu_2175_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (((ap_const_lv1_1 = and_ln155_1_fu_2529_p2) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state32) and (ap_const_boolean_0 = ap_block_state32_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state40) and (ap_const_boolean_0 = ap_block_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state41 => 
                if (((cmp2538_reg_3353 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state43) and (grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state44 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state44) and (gmem1_0_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state45) and (gmem1_0_WREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                if (((icmp_ln232_reg_4000 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50) and (gmem1_0_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                elsif (((icmp_ln232_reg_4000 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state50) and (gmem1_0_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state51 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state51) and (ap_const_boolean_0 = ap_block_state51_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                else
                    ap_NS_fsm <= ap_ST_fsm_state51;
                end if;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state59) and (ap_const_boolean_0 = ap_block_state59))) then
                    ap_NS_fsm <= ap_ST_fsm_state60;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state61) and (grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state61;
                end if;
            when ap_ST_fsm_state62 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state62) and (gmem1_0_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state62;
                end if;
            when ap_ST_fsm_state63 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state63) and (gmem1_0_WREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state64;
                else
                    ap_NS_fsm <= ap_ST_fsm_state63;
                end if;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state68) and (ap_const_boolean_0 = ap_block_state68))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state68;
                end if;
            when ap_ST_fsm_state69 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state69) and (grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state71) and (gmem1_0_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state72;
                else
                    ap_NS_fsm <= ap_ST_fsm_state71;
                end if;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state79) and (gmem1_0_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state80;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when ap_ST_fsm_state80 => 
                if (((cmp2538_reg_3353 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state80))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_state81;
                end if;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state82) and (grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when ap_ST_fsm_state83 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state83) and (gmem1_0_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state84;
                else
                    ap_NS_fsm <= ap_ST_fsm_state83;
                end if;
            when ap_ST_fsm_state84 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state84) and (gmem1_0_WREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state85;
                else
                    ap_NS_fsm <= ap_ST_fsm_state84;
                end if;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state88;
            when ap_ST_fsm_state88 => 
                ap_NS_fsm <= ap_ST_fsm_state89;
            when ap_ST_fsm_state89 => 
                if (((icmp_ln200_reg_4116 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state89) and (gmem1_0_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state90;
                elsif (((icmp_ln200_reg_4116 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state89) and (gmem1_0_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state68;
                else
                    ap_NS_fsm <= ap_ST_fsm_state89;
                end if;
            when ap_ST_fsm_state90 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state90) and (gmem1_0_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state91;
                else
                    ap_NS_fsm <= ap_ST_fsm_state90;
                end if;
            when ap_ST_fsm_state91 => 
                ap_NS_fsm <= ap_ST_fsm_state92;
            when ap_ST_fsm_state92 => 
                ap_NS_fsm <= ap_ST_fsm_state93;
            when ap_ST_fsm_state93 => 
                ap_NS_fsm <= ap_ST_fsm_state94;
            when ap_ST_fsm_state94 => 
                ap_NS_fsm <= ap_ST_fsm_state95;
            when ap_ST_fsm_state95 => 
                ap_NS_fsm <= ap_ST_fsm_state96;
            when ap_ST_fsm_state96 => 
                ap_NS_fsm <= ap_ST_fsm_state97;
            when ap_ST_fsm_state97 => 
                ap_NS_fsm <= ap_ST_fsm_state98;
            when ap_ST_fsm_state98 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state98) and (gmem1_0_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state99;
                else
                    ap_NS_fsm <= ap_ST_fsm_state98;
                end if;
            when ap_ST_fsm_state99 => 
                ap_NS_fsm <= ap_ST_fsm_state100;
            when ap_ST_fsm_state100 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state100) and (grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state101;
                else
                    ap_NS_fsm <= ap_ST_fsm_state100;
                end if;
            when ap_ST_fsm_state101 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state101) and (gmem1_0_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state102;
                else
                    ap_NS_fsm <= ap_ST_fsm_state101;
                end if;
            when ap_ST_fsm_state102 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state102) and (gmem1_0_WREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state103;
                else
                    ap_NS_fsm <= ap_ST_fsm_state102;
                end if;
            when ap_ST_fsm_state103 => 
                ap_NS_fsm <= ap_ST_fsm_state104;
            when ap_ST_fsm_state104 => 
                ap_NS_fsm <= ap_ST_fsm_state105;
            when ap_ST_fsm_state105 => 
                ap_NS_fsm <= ap_ST_fsm_state106;
            when ap_ST_fsm_state106 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln114_1_fu_1948_p2 <= std_logic_vector(signed(sext_ln85_reg_3445) + signed(indvars_iv5_reg_853));
    add_ln114_2_fu_1953_p2 <= std_logic_vector(signed(sext_ln85_1_reg_3450) + signed(phi_ln114_1_reg_842));
    add_ln114_3_fu_1958_p2 <= std_logic_vector(signed(tripcount_iv_reg_820) + signed(ap_const_lv32_FFFFFFF0));
    add_ln114_4_fu_1964_p2 <= std_logic_vector(unsigned(phi_ln114_reg_809) + unsigned(ap_const_lv32_FFFFFFF0));
    add_ln114_fu_1942_p2 <= std_logic_vector(unsigned(j_1_reg_831) + unsigned(ap_const_lv32_10));
    add_ln115_fu_1931_p2 <= std_logic_vector(unsigned(j_1_reg_831) + unsigned(phi_mul_load_reg_3477));
    add_ln116_fu_2086_p2 <= std_logic_vector(signed(sext_ln116_fu_2082_p1) + signed(input_image_read_reg_3114));
    add_ln119_2_fu_2005_p2 <= std_logic_vector(signed(sext_ln114_reg_3570) + signed(zext_ln114_1_fu_1986_p1));
    add_ln119_fu_1936_p2 <= std_logic_vector(unsigned(phi_ln114_reg_809) + unsigned(zext_ln114_2_fu_1903_p1));
    add_ln135_fu_2129_p2 <= std_logic_vector(unsigned(i_2_reg_864) + unsigned(ap_const_lv2_1));
    add_ln136_fu_2180_p2 <= std_logic_vector(unsigned(k_5_reg_876) + unsigned(ap_const_lv31_1));
    add_ln186_fu_2849_p2 <= std_logic_vector(signed(sext_ln186_fu_2845_p1) + signed(output_image_read_reg_3106));
        add_ln188_cast_fu_2902_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln188_fu_2892_p2),33));

    add_ln188_fu_2892_p2 <= std_logic_vector(signed(sext_ln188_fu_2889_p1) + signed(ap_const_lv6_30));
    add_ln200_fu_2927_p2 <= std_logic_vector(signed(sext_ln183_reg_4098) + signed(channels_read_reg_3067));
    add_ln202_1_fu_2958_p2 <= std_logic_vector(signed(sext_ln202_fu_2954_p1) + signed(output_image_read_reg_3106));
    add_ln202_fu_2941_p2 <= std_logic_vector(signed(sext_ln182_reg_4093) + signed(ap_const_lv29_1));
    add_ln219_fu_2617_p2 <= std_logic_vector(signed(sext_ln219_fu_2613_p1) + signed(input_image_read_reg_3114));
    add_ln220_fu_2632_p2 <= std_logic_vector(signed(sext_ln219_fu_2613_p1) + signed(output_image_read_reg_3106));
        add_ln222_cast80_fu_2682_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln222_fu_2676_p2),32));

    add_ln222_fu_2676_p2 <= std_logic_vector(signed(sext_ln217_1_fu_2673_p1) + signed(ap_const_lv6_30));
    add_ln232_fu_2711_p2 <= std_logic_vector(signed(sext_ln217_reg_3982) + signed(channels_read_reg_3067));
    add_ln234_1_fu_2742_p2 <= std_logic_vector(signed(sext_ln234_fu_2738_p1) + signed(input_image_read_reg_3114));
    add_ln234_fu_2725_p2 <= std_logic_vector(signed(sext_ln216_reg_3977) + signed(ap_const_lv29_1));
    add_ln235_fu_2757_p2 <= std_logic_vector(signed(sext_ln234_fu_2738_p1) + signed(output_image_read_reg_3106));
    add_ln85_1_fu_1467_p2 <= std_logic_vector(unsigned(phi_mul_fu_236) + unsigned(width_read_reg_3092));
    add_ln85_fu_1481_p2 <= std_logic_vector(unsigned(row_fu_240) + unsigned(ap_const_lv31_1));
    add_ln89_1_fu_1537_p2 <= std_logic_vector(unsigned(indvar_flatten55_reg_765) + unsigned(ap_const_lv3_1));
    add_ln89_fu_1547_p2 <= std_logic_vector(unsigned(i_reg_776) + unsigned(ap_const_lv2_1));
    add_ln91_fu_1614_p2 <= std_logic_vector(unsigned(k_1_reg_798) + unsigned(ap_const_lv2_1));
    and_ln155_1_fu_2529_p2 <= (and_ln155_reg_3501 and and_ln155_2_fu_2524_p2);
    and_ln155_2_fu_2524_p2 <= (icmp_ln155_fu_2518_p2 and cmp193_reg_3632);
    and_ln155_fu_1498_p2 <= (cmp237_fu_1492_p2 and cmp155_fu_1487_p2);
    and_ln89_fu_1565_p2 <= (xor_ln89_fu_1559_p2 and trunc_ln89_fu_1543_p1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state100 <= ap_CS_fsm(99);
    ap_CS_fsm_state101 <= ap_CS_fsm(100);
    ap_CS_fsm_state102 <= ap_CS_fsm(101);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state89 <= ap_CS_fsm(88);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_CS_fsm_state90 <= ap_CS_fsm(89);
    ap_CS_fsm_state98 <= ap_CS_fsm(97);
    ap_CS_fsm_state99 <= ap_CS_fsm(98);

    ap_ST_fsm_state100_blk_assign_proc : process(grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_done)
    begin
        if ((grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state100_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state100_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state101_blk_assign_proc : process(gmem1_0_AWREADY)
    begin
        if ((gmem1_0_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state101_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state101_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state102_blk_assign_proc : process(gmem1_0_WREADY)
    begin
        if ((gmem1_0_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state102_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state102_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state103_blk <= ap_const_logic_0;
    ap_ST_fsm_state104_blk <= ap_const_logic_0;
    ap_ST_fsm_state105_blk <= ap_const_logic_0;
    ap_ST_fsm_state106_blk <= ap_const_logic_0;

    ap_ST_fsm_state10_blk_assign_proc : process(ap_block_state10_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state10_on_subcall_done)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(gmem0_0_ARREADY)
    begin
        if ((gmem0_0_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(gmem0_0_RVALID)
    begin
        if ((gmem0_0_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state23_blk_assign_proc : process(grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_done)
    begin
        if ((grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_done)
    begin
        if ((grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;

    ap_ST_fsm_state32_blk_assign_proc : process(ap_block_state32_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state32_io)) then 
            ap_ST_fsm_state32_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state32_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state40_blk_assign_proc : process(ap_block_state40)
    begin
        if ((ap_const_boolean_1 = ap_block_state40)) then 
            ap_ST_fsm_state40_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state40_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;

    ap_ST_fsm_state43_blk_assign_proc : process(grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_done)
    begin
        if ((grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state43_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state43_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state44_blk_assign_proc : process(gmem1_0_AWREADY)
    begin
        if ((gmem1_0_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state44_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state44_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state45_blk_assign_proc : process(gmem1_0_WREADY)
    begin
        if ((gmem1_0_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state45_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state45_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_on_subcall_done)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state50_blk_assign_proc : process(gmem1_0_BVALID)
    begin
        if ((gmem1_0_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state50_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state50_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state51_blk_assign_proc : process(ap_block_state51_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state51_io)) then 
            ap_ST_fsm_state51_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state51_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;

    ap_ST_fsm_state59_blk_assign_proc : process(ap_block_state59)
    begin
        if ((ap_const_boolean_1 = ap_block_state59)) then 
            ap_ST_fsm_state59_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state59_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;

    ap_ST_fsm_state61_blk_assign_proc : process(grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_done)
    begin
        if ((grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state61_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state61_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state62_blk_assign_proc : process(gmem1_0_AWREADY)
    begin
        if ((gmem1_0_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state62_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state62_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state63_blk_assign_proc : process(gmem1_0_WREADY)
    begin
        if ((gmem1_0_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state63_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state63_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;

    ap_ST_fsm_state68_blk_assign_proc : process(ap_block_state68)
    begin
        if ((ap_const_boolean_1 = ap_block_state68)) then 
            ap_ST_fsm_state68_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state68_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state69_blk_assign_proc : process(grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_done)
    begin
        if ((grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state69_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state69_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;

    ap_ST_fsm_state71_blk_assign_proc : process(gmem1_0_ARREADY)
    begin
        if ((gmem1_0_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state71_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state71_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;

    ap_ST_fsm_state79_blk_assign_proc : process(gmem1_0_RVALID)
    begin
        if ((gmem1_0_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state79_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state79_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;

    ap_ST_fsm_state82_blk_assign_proc : process(grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_done)
    begin
        if ((grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state82_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state82_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state83_blk_assign_proc : process(gmem1_0_AWREADY)
    begin
        if ((gmem1_0_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state83_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state83_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state84_blk_assign_proc : process(gmem1_0_WREADY)
    begin
        if ((gmem1_0_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state84_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state84_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state85_blk <= ap_const_logic_0;
    ap_ST_fsm_state86_blk <= ap_const_logic_0;
    ap_ST_fsm_state87_blk <= ap_const_logic_0;
    ap_ST_fsm_state88_blk <= ap_const_logic_0;

    ap_ST_fsm_state89_blk_assign_proc : process(gmem1_0_BVALID)
    begin
        if ((gmem1_0_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state89_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state89_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state90_blk_assign_proc : process(gmem1_0_ARREADY)
    begin
        if ((gmem1_0_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state90_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state90_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state91_blk <= ap_const_logic_0;
    ap_ST_fsm_state92_blk <= ap_const_logic_0;
    ap_ST_fsm_state93_blk <= ap_const_logic_0;
    ap_ST_fsm_state94_blk <= ap_const_logic_0;
    ap_ST_fsm_state95_blk <= ap_const_logic_0;
    ap_ST_fsm_state96_blk <= ap_const_logic_0;
    ap_ST_fsm_state97_blk <= ap_const_logic_0;

    ap_ST_fsm_state98_blk_assign_proc : process(gmem1_0_RVALID)
    begin
        if ((gmem1_0_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state98_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state98_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state99_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state10_on_subcall_done_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_done)
    begin
                ap_block_state10_on_subcall_done <= ((grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_done = ap_const_logic_0) and (icmp_ln99_reg_3558 = ap_const_lv1_1));
    end process;


    ap_block_state32_io_assign_proc : process(gmem0_0_ARREADY, gmem1_0_ARREADY)
    begin
                ap_block_state32_io <= ((gmem1_0_ARREADY = ap_const_logic_0) or (gmem0_0_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state40_assign_proc : process(gmem0_0_RVALID, gmem1_0_RVALID)
    begin
                ap_block_state40 <= ((gmem1_0_RVALID = ap_const_logic_0) or (gmem0_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_done, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_done = ap_const_logic_0) or (grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_done = ap_const_logic_0));
    end process;


    ap_block_state51_io_assign_proc : process(gmem0_0_ARREADY, gmem1_0_ARREADY)
    begin
                ap_block_state51_io <= ((gmem1_0_ARREADY = ap_const_logic_0) or (gmem0_0_ARREADY = ap_const_logic_0));
    end process;


    ap_block_state59_assign_proc : process(gmem0_0_RVALID, gmem1_0_RVALID)
    begin
                ap_block_state59 <= ((gmem1_0_RVALID = ap_const_logic_0) or (gmem0_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state68_assign_proc : process(gmem1_0_BVALID, ap_predicate_op722_writeresp_state68, ap_predicate_op725_writeresp_state68)
    begin
                ap_block_state68 <= (((ap_predicate_op725_writeresp_state68 = ap_const_boolean_1) and (gmem1_0_BVALID = ap_const_logic_0)) or ((ap_predicate_op722_writeresp_state68 = ap_const_boolean_1) and (gmem1_0_BVALID = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state6, icmp_ln85_fu_1476_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln85_fu_1476_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_k_1_phi_fu_802_p4 <= k_1_reg_798;

    ap_predicate_op722_writeresp_state68_assign_proc : process(and_ln155_1_reg_3814, icmp_ln232_reg_4000)
    begin
                ap_predicate_op722_writeresp_state68 <= ((icmp_ln232_reg_4000 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln155_1_reg_3814));
    end process;


    ap_predicate_op725_writeresp_state68_assign_proc : process(and_ln155_1_reg_3814, icmp_ln200_reg_4116)
    begin
                ap_predicate_op725_writeresp_state68 <= ((icmp_ln200_reg_4116 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln155_1_reg_3814));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6, icmp_ln85_fu_1476_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln85_fu_1476_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_window_10_load_assign_proc : process(ap_CS_fsm_state29, cmp2538_reg_3353, grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_37_out, window_10_fu_432)
    begin
        if (((cmp2538_reg_3353 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            ap_sig_allocacmp_window_10_load <= grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_37_out;
        else 
            ap_sig_allocacmp_window_10_load <= window_10_fu_432;
        end if; 
    end process;


    ap_sig_allocacmp_window_11_load_assign_proc : process(ap_CS_fsm_state29, cmp2538_reg_3353, grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_39_out, window_11_fu_436)
    begin
        if (((cmp2538_reg_3353 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            ap_sig_allocacmp_window_11_load <= grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_39_out;
        else 
            ap_sig_allocacmp_window_11_load <= window_11_fu_436;
        end if; 
    end process;


    ap_sig_allocacmp_window_9_load_assign_proc : process(ap_CS_fsm_state29, cmp2538_reg_3353, grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_38_out, window_9_fu_428)
    begin
        if (((cmp2538_reg_3353 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            ap_sig_allocacmp_window_9_load <= grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_window_38_out;
        else 
            ap_sig_allocacmp_window_9_load <= window_9_fu_428;
        end if; 
    end process;

    axie4_idx_1_fu_2806_p3 <= 
        grp_fu_1245_p2 when (tmp_16_reg_4042(0) = '1') else 
        reg_1225;
    axie4_idx_fu_2574_p3 <= 
        grp_fu_1245_p2 when (tmp_19_reg_3920(0) = '1') else 
        reg_1225;
    bound67_fu_1074_p0 <= bound67_fu_1074_p00(32 - 1 downto 0);
    bound67_fu_1074_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(width_read_reg_3092),63));
    bound67_fu_1074_p1 <= bound67_fu_1074_p10(31 - 1 downto 0);
    bound67_fu_1074_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(smax26_reg_3364),63));
    byte_offset_1_fu_2830_p3 <= 
        sub_ln183_fu_2824_p2 when (tmp_16_reg_4042(0) = '1') else 
        zext_ln183_fu_2813_p1;
    byte_offset_fu_2598_p3 <= 
        sub_ln217_fu_2592_p2 when (tmp_19_reg_3920(0) = '1') else 
        zext_ln217_fu_2581_p1;
    cmp155_fu_1487_p2 <= "1" when (signed(zext_ln85_fu_1472_p1) < signed(sub_reg_3415)) else "0";
    cmp193_fu_1970_p2 <= "1" when (signed(zext_ln87_1_reg_3506) < signed(sub192_reg_3420)) else "0";
    cmp237_fu_1492_p2 <= "0" when (row_fu_240 = ap_const_lv31_0) else "1";
    cmp2538_fu_1259_p0 <= channels;
    cmp2538_fu_1259_p2 <= "1" when (signed(cmp2538_fu_1259_p0) > signed(ap_const_lv32_0)) else "0";
    cond292_fu_1593_p2 <= (j_1_cast_not_fu_1587_p2 or icmp_ln90_fu_1553_p2);
    empty_49_fu_1255_p0 <= width;
    empty_49_fu_1255_p1 <= empty_49_fu_1255_p0(31 - 1 downto 0);
    empty_50_fu_1265_p0 <= width;
    empty_50_fu_1265_p2 <= "1" when (signed(empty_50_fu_1265_p0) > signed(ap_const_lv32_0)) else "0";
    empty_52_fu_2032_p2 <= "1" when (unsigned(sub_ln114_reg_3588) > unsigned(sub_ln85_3_cast_reg_3471)) else "0";
    empty_53_fu_2359_p2 <= (trunc_ln136_fu_2186_p1 or i_2_reg_864);
    empty_54_fu_2383_p2 <= "1" when (tmp_23_fu_2375_p3 = ap_const_lv31_0) else "0";
    empty_55_fu_2898_p1 <= add_ln188_fu_2892_p2(5 - 1 downto 0);
    empty_56_fu_2906_p2 <= "1" when (unsigned(add_ln188_cast_fu_2902_p1) < unsigned(sub_ln85_1_reg_3435)) else "0";
    empty_57_fu_2686_p1 <= add_ln222_fu_2676_p2(5 - 1 downto 0);
    empty_58_fu_2690_p2 <= "1" when (unsigned(add_ln222_cast80_fu_2682_p1) < unsigned(sub_ln85_reg_3425)) else "0";
    empty_fu_1251_p0 <= channels;
    empty_fu_1251_p1 <= empty_fu_1251_p0(31 - 1 downto 0);

    gmem0_0_ARADDR_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state32, ap_CS_fsm_state51, gmem0_0_ARREADY, sext_ln116_1_fu_2101_p1, sext_ln219_1_fu_2647_p1, sext_ln234_1_fu_2772_p1, ap_block_state32_io, ap_block_state51_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state51) and (ap_const_boolean_0 = ap_block_state51_io))) then 
            gmem0_0_ARADDR <= sext_ln234_1_fu_2772_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) and (ap_const_boolean_0 = ap_block_state32_io))) then 
            gmem0_0_ARADDR <= sext_ln219_1_fu_2647_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (gmem0_0_ARREADY = ap_const_logic_1))) then 
            gmem0_0_ARADDR <= sext_ln116_1_fu_2101_p1;
        else 
            gmem0_0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    gmem0_0_ARLEN <= ap_const_lv64_1(32 - 1 downto 0);

    gmem0_0_ARVALID_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state32, ap_CS_fsm_state51, gmem0_0_ARREADY, ap_block_state32_io, ap_block_state51_io)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state51) and (ap_const_boolean_0 = ap_block_state51_io)) or ((ap_const_logic_1 = ap_CS_fsm_state32) and (ap_const_boolean_0 = ap_block_state32_io)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (gmem0_0_ARREADY = ap_const_logic_1)))) then 
            gmem0_0_ARVALID <= ap_const_logic_1;
        else 
            gmem0_0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_0_RREADY_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state40, ap_CS_fsm_state59, gmem0_0_RVALID, ap_block_state40, ap_block_state59)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state59) and (ap_const_boolean_0 = ap_block_state59)) or ((ap_const_logic_1 = ap_CS_fsm_state40) and (ap_const_boolean_0 = ap_block_state40)) or ((ap_const_logic_1 = ap_CS_fsm_state22) and (gmem0_0_RVALID = ap_const_logic_1)))) then 
            gmem0_0_RREADY <= ap_const_logic_1;
        else 
            gmem0_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_blk_n_AR_assign_proc : process(m_axi_gmem0_ARREADY, ap_CS_fsm_state14, ap_CS_fsm_state32, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            gmem0_blk_n_AR <= m_axi_gmem0_ARREADY;
        else 
            gmem0_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_R_assign_proc : process(m_axi_gmem0_RVALID, ap_CS_fsm_state22, ap_CS_fsm_state40, ap_CS_fsm_state59)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            gmem0_blk_n_R <= m_axi_gmem0_RVALID;
        else 
            gmem0_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_0_ARADDR_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state51, ap_CS_fsm_state71, ap_CS_fsm_state90, gmem1_0_ARREADY, sext_ln220_fu_2657_p1, sext_ln235_fu_2782_p1, sext_ln186_1_fu_2864_p1, sext_ln202_1_fu_2973_p1, ap_block_state32_io, ap_block_state51_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state90) and (gmem1_0_ARREADY = ap_const_logic_1))) then 
            gmem1_0_ARADDR <= sext_ln202_1_fu_2973_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state71) and (gmem1_0_ARREADY = ap_const_logic_1))) then 
            gmem1_0_ARADDR <= sext_ln186_1_fu_2864_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state51) and (ap_const_boolean_0 = ap_block_state51_io))) then 
            gmem1_0_ARADDR <= sext_ln235_fu_2782_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state32) and (ap_const_boolean_0 = ap_block_state32_io))) then 
            gmem1_0_ARADDR <= sext_ln220_fu_2657_p1;
        else 
            gmem1_0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    gmem1_0_ARLEN <= ap_const_lv64_1(32 - 1 downto 0);

    gmem1_0_ARVALID_assign_proc : process(ap_CS_fsm_state32, ap_CS_fsm_state51, ap_CS_fsm_state71, ap_CS_fsm_state90, gmem1_0_ARREADY, ap_block_state32_io, ap_block_state51_io)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state90) and (gmem1_0_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state71) and (gmem1_0_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state51) and (ap_const_boolean_0 = ap_block_state51_io)) or ((ap_const_logic_1 = ap_CS_fsm_state32) and (ap_const_boolean_0 = ap_block_state32_io)))) then 
            gmem1_0_ARVALID <= ap_const_logic_1;
        else 
            gmem1_0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_0_AWADDR_assign_proc : process(ap_CS_fsm_state83, ap_CS_fsm_state101, ap_CS_fsm_state44, ap_CS_fsm_state62, gmem1_addr_reg_3959, gmem1_addr_2_reg_4020, gmem1_addr_1_reg_4071, gmem1_addr_3_reg_4125, gmem1_0_AWREADY)
    begin
        if ((gmem1_0_AWREADY = ap_const_logic_1)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state101)) then 
                gmem1_0_AWADDR <= gmem1_addr_3_reg_4125;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
                gmem1_0_AWADDR <= gmem1_addr_1_reg_4071;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
                gmem1_0_AWADDR <= gmem1_addr_2_reg_4020;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                gmem1_0_AWADDR <= gmem1_addr_reg_3959;
            else 
                gmem1_0_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gmem1_0_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    gmem1_0_AWLEN <= ap_const_lv64_1(32 - 1 downto 0);

    gmem1_0_AWVALID_assign_proc : process(ap_CS_fsm_state83, ap_CS_fsm_state101, ap_CS_fsm_state44, ap_CS_fsm_state62, gmem1_0_AWREADY)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state62) and (gmem1_0_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state44) and (gmem1_0_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state101) and (gmem1_0_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state83) and (gmem1_0_AWREADY = ap_const_logic_1)))) then 
            gmem1_0_AWVALID <= ap_const_logic_1;
        else 
            gmem1_0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_0_BREADY_assign_proc : process(ap_CS_fsm_state89, ap_CS_fsm_state68, ap_CS_fsm_state50, gmem1_0_BVALID, ap_predicate_op722_writeresp_state68, ap_predicate_op725_writeresp_state68, ap_block_state68)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state50) and (gmem1_0_BVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state68) and (ap_const_boolean_0 = ap_block_state68) and (ap_predicate_op725_writeresp_state68 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state68) and (ap_const_boolean_0 = ap_block_state68) and (ap_predicate_op722_writeresp_state68 = ap_const_boolean_1)) or ((ap_const_logic_1 = ap_CS_fsm_state89) and (gmem1_0_BVALID = ap_const_logic_1)))) then 
            gmem1_0_BREADY <= ap_const_logic_1;
        else 
            gmem1_0_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_0_RREADY_assign_proc : process(ap_CS_fsm_state40, ap_CS_fsm_state59, ap_CS_fsm_state79, ap_CS_fsm_state98, gmem1_0_RVALID, ap_block_state40, ap_block_state59)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state98) and (gmem1_0_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state79) and (gmem1_0_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state59) and (ap_const_boolean_0 = ap_block_state59)) or ((ap_const_logic_1 = ap_CS_fsm_state40) and (ap_const_boolean_0 = ap_block_state40)))) then 
            gmem1_0_RREADY <= ap_const_logic_1;
        else 
            gmem1_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_0_WDATA_assign_proc : process(ap_CS_fsm_state84, ap_CS_fsm_state102, ap_CS_fsm_state45, ap_CS_fsm_state63, grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_next_output_axie4_data_1_out, grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_next_axie4_data_1_out, output_axie4_data_0_lcssa_reg_887, axie4_data300_0_lcssa_reg_897)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state102)) then 
            gmem1_0_WDATA <= grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_next_axie4_data_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            gmem1_0_WDATA <= axie4_data300_0_lcssa_reg_897;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
            gmem1_0_WDATA <= grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_next_output_axie4_data_1_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            gmem1_0_WDATA <= output_axie4_data_0_lcssa_reg_887;
        else 
            gmem1_0_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem1_0_WVALID_assign_proc : process(ap_CS_fsm_state84, ap_CS_fsm_state102, ap_CS_fsm_state45, ap_CS_fsm_state63, gmem1_0_WREADY)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state63) and (gmem1_0_WREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state45) and (gmem1_0_WREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state102) and (gmem1_0_WREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state84) and (gmem1_0_WREADY = ap_const_logic_1)))) then 
            gmem1_0_WVALID <= ap_const_logic_1;
        else 
            gmem1_0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_blk_n_AR_assign_proc : process(m_axi_gmem1_ARREADY, ap_CS_fsm_state32, ap_CS_fsm_state51, ap_CS_fsm_state71, ap_CS_fsm_state90)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state90) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state32))) then 
            gmem1_blk_n_AR <= m_axi_gmem1_ARREADY;
        else 
            gmem1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_AW_assign_proc : process(m_axi_gmem1_AWREADY, ap_CS_fsm_state83, ap_CS_fsm_state101, ap_CS_fsm_state44, ap_CS_fsm_state62)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state101) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            gmem1_blk_n_AW <= m_axi_gmem1_AWREADY;
        else 
            gmem1_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_B_assign_proc : process(m_axi_gmem1_BVALID, ap_CS_fsm_state89, ap_CS_fsm_state68, and_ln155_1_reg_3814, icmp_ln200_reg_4116, ap_CS_fsm_state50, icmp_ln232_reg_4000)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state89) or ((icmp_ln232_reg_4000 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln155_1_reg_3814) and (ap_const_logic_1 = ap_CS_fsm_state68)) or ((icmp_ln200_reg_4116 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln155_1_reg_3814) and (ap_const_logic_1 = ap_CS_fsm_state68)))) then 
            gmem1_blk_n_B <= m_axi_gmem1_BVALID;
        else 
            gmem1_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_R_assign_proc : process(m_axi_gmem1_RVALID, ap_CS_fsm_state40, ap_CS_fsm_state59, ap_CS_fsm_state79, ap_CS_fsm_state98)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state98) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            gmem1_blk_n_R <= m_axi_gmem1_RVALID;
        else 
            gmem1_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_W_assign_proc : process(m_axi_gmem1_WREADY, ap_CS_fsm_state84, ap_CS_fsm_state102, ap_CS_fsm_state45, ap_CS_fsm_state63)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state102) or (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            gmem1_blk_n_W <= m_axi_gmem1_WREADY;
        else 
            gmem1_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_start <= grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_ap_start_reg;
    grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_start <= grp_filter_kernel_Pipeline_VITIS_LOOP_147_14_fu_970_ap_start_reg;
    grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_start <= grp_filter_kernel_Pipeline_VITIS_LOOP_160_15_fu_987_ap_start_reg;
    grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_start <= grp_filter_kernel_Pipeline_VITIS_LOOP_188_18_fu_1049_ap_start_reg;
    grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_start <= grp_filter_kernel_Pipeline_VITIS_LOOP_204_19_fu_1060_ap_start_reg;
    grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_start <= grp_filter_kernel_Pipeline_VITIS_LOOP_222_20_fu_1032_ap_start_reg;
    grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_start <= grp_filter_kernel_Pipeline_VITIS_LOOP_237_21_fu_1041_ap_start_reg;
    grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_start <= grp_filter_kernel_Pipeline_VITIS_LOOP_48_1_fu_907_ap_start_reg;
    grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_start <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_ap_start_reg;
    grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_start <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_ap_start_reg;

    grp_fu_1078_p0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state30, ap_CS_fsm_state69, reg_1220, add_ln115_reg_3596)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            grp_fu_1078_p0 <= reg_1220;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_1078_p0 <= add_ln115_reg_3596;
        else 
            grp_fu_1078_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_1082_p0 <= grp_fu_1082_p00(64 - 1 downto 0);
    grp_fu_1082_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln114_1_fu_2111_p1),128));
    grp_fu_1082_p1 <= grp_fu_1082_p10(64 - 1 downto 0);
    grp_fu_1082_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln119_reg_3693),128));
    grp_fu_1161_p2 <= std_logic_vector(unsigned(zext_ln87_1_reg_3506) + unsigned(phi_mul_load_reg_3477));
    grp_fu_1229_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(reg_1183));
    grp_fu_1235_p4 <= grp_fu_1229_p2(31 downto 4);
    grp_fu_1245_p2 <= std_logic_vector(unsigned(ap_const_lv28_0) - unsigned(grp_fu_1235_p4));

    grp_load_fu_1134_p1_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state29, and_ln155_1_fu_2529_p2, and_ln89_reg_3536, select_ln89_1_reg_3543, ap_CS_fsm_state9, icmp_ln91_fu_1609_p2, window_9_fu_428, ap_sig_allocacmp_window_9_load)
    begin
        if (((ap_const_lv1_1 = and_ln155_1_fu_2529_p2) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_load_fu_1134_p1 <= ap_sig_allocacmp_window_9_load;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or ((select_ln89_1_reg_3543 = ap_const_lv2_1) and (ap_const_lv1_0 = and_ln89_reg_3536) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1)))) then 
            grp_load_fu_1134_p1 <= window_9_fu_428;
        else 
            grp_load_fu_1134_p1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_load_fu_1139_p1_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state29, and_ln155_1_fu_2529_p2, and_ln89_reg_3536, select_ln89_1_reg_3543, ap_CS_fsm_state9, icmp_ln91_fu_1609_p2, window_10_fu_432, ap_sig_allocacmp_window_10_load)
    begin
        if (((ap_const_lv1_1 = and_ln155_1_fu_2529_p2) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_load_fu_1139_p1 <= ap_sig_allocacmp_window_10_load;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or ((select_ln89_1_reg_3543 = ap_const_lv2_1) and (ap_const_lv1_0 = and_ln89_reg_3536) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1)))) then 
            grp_load_fu_1139_p1 <= window_10_fu_432;
        else 
            grp_load_fu_1139_p1 <= "XXXXXXXX";
        end if; 
    end process;


    grp_load_fu_1144_p1_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state29, and_ln155_1_fu_2529_p2, and_ln89_reg_3536, select_ln89_1_reg_3543, ap_CS_fsm_state9, icmp_ln91_fu_1609_p2, window_11_fu_436, ap_sig_allocacmp_window_11_load)
    begin
        if (((ap_const_lv1_1 = and_ln155_1_fu_2529_p2) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            grp_load_fu_1144_p1 <= ap_sig_allocacmp_window_11_load;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or ((select_ln89_1_reg_3543 = ap_const_lv2_1) and (ap_const_lv1_0 = and_ln89_reg_3536) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln91_fu_1609_p2 = ap_const_lv1_1)))) then 
            grp_load_fu_1144_p1 <= window_11_fu_436;
        else 
            grp_load_fu_1144_p1 <= "XXXXXXXX";
        end if; 
    end process;

    icmp_ln114_1_fu_1878_p2 <= "1" when (signed(zext_ln114_fu_1874_p1) < signed(sext_ln75_1_reg_3409)) else "0";
    icmp_ln114_2_fu_1907_p2 <= "1" when (signed(phi_ln114_1_reg_842) > signed(ap_const_lv63_10)) else "0";
    icmp_ln114_3_fu_1989_p2 <= "1" when (unsigned(sub_ln114_reg_3588) > unsigned(sext_ln85_2_reg_3455)) else "0";
    icmp_ln114_4_fu_2010_p2 <= "1" when (unsigned(add_ln119_reg_3601) > unsigned(ap_const_lv32_10)) else "0";
    icmp_ln114_fu_1891_p2 <= "1" when (signed(zext_ln114_fu_1874_p1) > signed(sext_ln75_1_reg_3409)) else "0";
    icmp_ln135_fu_2123_p2 <= "1" when (i_2_reg_864 = ap_const_lv2_3) else "0";
    icmp_ln136_fu_2175_p2 <= "1" when (signed(zext_ln136_fu_2171_p1) < signed(channels_read_reg_3067)) else "0";
    icmp_ln155_fu_2518_p2 <= "0" when (col_reg_753 = ap_const_lv31_0) else "1";
    icmp_ln200_fu_2935_p2 <= "1" when (signed(add_ln200_fu_2927_p2) > signed(ap_const_lv32_10)) else "0";
    icmp_ln232_fu_2719_p2 <= "1" when (signed(add_ln232_fu_2711_p2) > signed(ap_const_lv32_10)) else "0";
    icmp_ln85_fu_1476_p2 <= "1" when (signed(zext_ln85_fu_1472_p1) < signed(height_read_reg_3086)) else "0";
    icmp_ln87_fu_1508_p2 <= "1" when (signed(zext_ln87_1_fu_1504_p1) < signed(width_read_reg_3092)) else "0";
    icmp_ln89_fu_1531_p2 <= "1" when (indvar_flatten55_reg_765 = ap_const_lv3_6) else "0";
    icmp_ln90_fu_1553_p2 <= "1" when (j_reg_787 = ap_const_lv2_2) else "0";
    icmp_ln91_fu_1609_p2 <= "1" when (signed(zext_ln91_fu_1605_p1) < signed(channels_read_reg_3067)) else "0";
    icmp_ln99_fu_1599_p2 <= "1" when (col_reg_753 = ap_const_lv31_0) else "0";
    indvars_iv_next122_cast_fu_1974_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indvars_iv_next122_reg_3515),64));
    indvars_iv_next122_fu_1513_p2 <= std_logic_vector(unsigned(col_reg_753) + unsigned(ap_const_lv31_1));
    indvars_iv_next62_fu_1579_p3 <= 
        ap_const_lv2_2 when (and_ln89_fu_1565_p2(0) = '1') else 
        ap_const_lv2_1;
    j_1_cast_not_fu_1587_p2 <= (trunc_ln89_fu_1543_p1 xor ap_const_lv1_1);

    line_buffer_1_address0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_address0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_address0, ap_CS_fsm_state10, ap_CS_fsm_state4, indvars_iv_next122_cast_fu_1974_p1)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_1_address0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_1_address0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_address0;
        else 
            line_buffer_1_address0 <= indvars_iv_next122_cast_fu_1974_p1(11 - 1 downto 0);
        end if; 
    end process;


    line_buffer_1_ce0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_ce0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_ce0, ap_CS_fsm_state10, ap_CS_fsm_state4, line_buffer_1_ce0_local)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_1_ce0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_1_ce0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_ce0;
        else 
            line_buffer_1_ce0 <= line_buffer_1_ce0_local;
        end if; 
    end process;


    line_buffer_1_ce0_local_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            line_buffer_1_ce0_local <= ap_const_logic_1;
        else 
            line_buffer_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_d0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_d0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_d0, ap_CS_fsm_state10, ap_CS_fsm_state4)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_1_d0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_1_d0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_d0;
        else 
            line_buffer_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_1_we0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_we0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_we0, ap_CS_fsm_state10, ap_CS_fsm_state4)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_1_we0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_1_we0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_1_we0;
        else 
            line_buffer_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_address0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_address0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_address0, ap_CS_fsm_state10, ap_CS_fsm_state4, indvars_iv_next122_cast_fu_1974_p1)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_2_address0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_2_address0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_address0;
        else 
            line_buffer_2_address0 <= indvars_iv_next122_cast_fu_1974_p1(11 - 1 downto 0);
        end if; 
    end process;


    line_buffer_2_ce0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_ce0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_ce0, ap_CS_fsm_state10, ap_CS_fsm_state4, line_buffer_2_ce0_local)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_2_ce0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_2_ce0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_ce0;
        else 
            line_buffer_2_ce0 <= line_buffer_2_ce0_local;
        end if; 
    end process;


    line_buffer_2_ce0_local_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            line_buffer_2_ce0_local <= ap_const_logic_1;
        else 
            line_buffer_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_d0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_d0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_d0, ap_CS_fsm_state10, ap_CS_fsm_state4)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_2_d0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_2_d0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_d0;
        else 
            line_buffer_2_d0 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_2_we0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_we0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_we0, ap_CS_fsm_state10, ap_CS_fsm_state4)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_2_we0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_2_we0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_2_we0;
        else 
            line_buffer_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_3_address0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_address0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_address0, ap_CS_fsm_state10, ap_CS_fsm_state4, line_buffer_3_address0_local)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_3_address0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_3_address0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_address0;
        else 
            line_buffer_3_address0 <= line_buffer_3_address0_local;
        end if; 
    end process;


    line_buffer_3_address0_local_assign_proc : process(zext_ln87_reg_3521, ap_CS_fsm_state11, ap_CS_fsm_state25, indvars_iv_next122_cast_fu_1974_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            line_buffer_3_address0_local <= zext_ln87_reg_3521(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            line_buffer_3_address0_local <= indvars_iv_next122_cast_fu_1974_p1(11 - 1 downto 0);
        else 
            line_buffer_3_address0_local <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_3_ce0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_ce0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_ce0, ap_CS_fsm_state10, ap_CS_fsm_state4, line_buffer_3_ce0_local)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_3_ce0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_3_ce0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_ce0;
        else 
            line_buffer_3_ce0 <= line_buffer_3_ce0_local;
        end if; 
    end process;


    line_buffer_3_ce0_local_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            line_buffer_3_ce0_local <= ap_const_logic_1;
        else 
            line_buffer_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_3_d0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_d0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_d0, ap_CS_fsm_state10, ap_CS_fsm_state4)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_3_d0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_3_d0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_d0;
        else 
            line_buffer_3_d0 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_3_we0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_we0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_we0, ap_CS_fsm_state10, ap_CS_fsm_state4)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_3_we0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_3_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_3_we0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_3_we0;
        else 
            line_buffer_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_4_address0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_address0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_address0, ap_CS_fsm_state10, ap_CS_fsm_state4, line_buffer_4_address0_local)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_4_address0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_4_address0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_address0;
        else 
            line_buffer_4_address0 <= line_buffer_4_address0_local;
        end if; 
    end process;


    line_buffer_4_address0_local_assign_proc : process(zext_ln87_reg_3521, ap_CS_fsm_state11, ap_CS_fsm_state25, indvars_iv_next122_cast_fu_1974_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            line_buffer_4_address0_local <= zext_ln87_reg_3521(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            line_buffer_4_address0_local <= indvars_iv_next122_cast_fu_1974_p1(11 - 1 downto 0);
        else 
            line_buffer_4_address0_local <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_4_ce0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_ce0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_ce0, ap_CS_fsm_state10, ap_CS_fsm_state4, line_buffer_4_ce0_local)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_4_ce0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_4_ce0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_ce0;
        else 
            line_buffer_4_ce0 <= line_buffer_4_ce0_local;
        end if; 
    end process;


    line_buffer_4_ce0_local_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            line_buffer_4_ce0_local <= ap_const_logic_1;
        else 
            line_buffer_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_4_d0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_d0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_d0, ap_CS_fsm_state10, ap_CS_fsm_state4)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_4_d0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_4_d0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_d0;
        else 
            line_buffer_4_d0 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_4_we0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_we0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_we0, ap_CS_fsm_state10, ap_CS_fsm_state4)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_4_we0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_4_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_4_we0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_4_we0;
        else 
            line_buffer_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_5_address0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_address0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_address0, ap_CS_fsm_state10, ap_CS_fsm_state4, line_buffer_5_address0_local)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_5_address0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_5_address0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_address0;
        else 
            line_buffer_5_address0 <= line_buffer_5_address0_local;
        end if; 
    end process;


    line_buffer_5_address0_local_assign_proc : process(zext_ln87_reg_3521, ap_CS_fsm_state11, ap_CS_fsm_state25, indvars_iv_next122_cast_fu_1974_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            line_buffer_5_address0_local <= zext_ln87_reg_3521(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            line_buffer_5_address0_local <= indvars_iv_next122_cast_fu_1974_p1(11 - 1 downto 0);
        else 
            line_buffer_5_address0_local <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_5_ce0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_ce0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_ce0, ap_CS_fsm_state10, ap_CS_fsm_state4, line_buffer_5_ce0_local)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_5_ce0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_5_ce0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_ce0;
        else 
            line_buffer_5_ce0 <= line_buffer_5_ce0_local;
        end if; 
    end process;


    line_buffer_5_ce0_local_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            line_buffer_5_ce0_local <= ap_const_logic_1;
        else 
            line_buffer_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_5_d0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_d0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_d0, ap_CS_fsm_state10, ap_CS_fsm_state4)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_5_d0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_5_d0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_d0;
        else 
            line_buffer_5_d0 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_5_we0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_we0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_we0, ap_CS_fsm_state10, ap_CS_fsm_state4)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_5_we0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_5_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_5_we0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_5_we0;
        else 
            line_buffer_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_6_address0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_address0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_6_address0, grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_address0, ap_CS_fsm_state23, ap_CS_fsm_state10, ap_CS_fsm_state4, indvars_iv_next122_cast_fu_1974_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            line_buffer_6_address0 <= grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_address0;
        elsif (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_6_address0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_6_address0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_address0;
        else 
            line_buffer_6_address0 <= indvars_iv_next122_cast_fu_1974_p1(11 - 1 downto 0);
        end if; 
    end process;


    line_buffer_6_ce0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_ce0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_6_ce0, grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_ce0, ap_CS_fsm_state23, ap_CS_fsm_state10, ap_CS_fsm_state4, line_buffer_6_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            line_buffer_6_ce0 <= grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_ce0;
        elsif (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_6_ce0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_6_ce0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_ce0;
        else 
            line_buffer_6_ce0 <= line_buffer_6_ce0_local;
        end if; 
    end process;


    line_buffer_6_ce0_local_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            line_buffer_6_ce0_local <= ap_const_logic_1;
        else 
            line_buffer_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_6_d0_assign_proc : process(grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_d0, grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_d0, ap_CS_fsm_state23, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            line_buffer_6_d0 <= grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_6_d0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_d0;
        else 
            line_buffer_6_d0 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_6_we0_assign_proc : process(grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_we0, grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_we0, ap_CS_fsm_state23, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            line_buffer_6_we0 <= grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_6_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_6_we0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_6_we0;
        else 
            line_buffer_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_7_address0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_address0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_7_address0, grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_address0, ap_CS_fsm_state23, ap_CS_fsm_state10, ap_CS_fsm_state4, indvars_iv_next122_cast_fu_1974_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            line_buffer_7_address0 <= grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_address0;
        elsif (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_7_address0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_7_address0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_address0;
        else 
            line_buffer_7_address0 <= indvars_iv_next122_cast_fu_1974_p1(11 - 1 downto 0);
        end if; 
    end process;


    line_buffer_7_ce0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_ce0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_7_ce0, grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_ce0, ap_CS_fsm_state23, ap_CS_fsm_state10, ap_CS_fsm_state4, line_buffer_7_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            line_buffer_7_ce0 <= grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_ce0;
        elsif (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_7_ce0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_7_ce0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_ce0;
        else 
            line_buffer_7_ce0 <= line_buffer_7_ce0_local;
        end if; 
    end process;


    line_buffer_7_ce0_local_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            line_buffer_7_ce0_local <= ap_const_logic_1;
        else 
            line_buffer_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_7_d0_assign_proc : process(grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_d0, grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_d0, ap_CS_fsm_state23, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            line_buffer_7_d0 <= grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_7_d0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_d0;
        else 
            line_buffer_7_d0 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_7_we0_assign_proc : process(grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_we0, grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_we0, ap_CS_fsm_state23, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            line_buffer_7_we0 <= grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_7_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_7_we0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_7_we0;
        else 
            line_buffer_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_8_address0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_address0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_8_address0, grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_address0, ap_CS_fsm_state23, ap_CS_fsm_state10, ap_CS_fsm_state4, indvars_iv_next122_cast_fu_1974_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            line_buffer_8_address0 <= grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_address0;
        elsif (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_8_address0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_8_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_8_address0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_address0;
        else 
            line_buffer_8_address0 <= indvars_iv_next122_cast_fu_1974_p1(11 - 1 downto 0);
        end if; 
    end process;


    line_buffer_8_ce0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_ce0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_8_ce0, grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_ce0, ap_CS_fsm_state23, ap_CS_fsm_state10, ap_CS_fsm_state4, line_buffer_8_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            line_buffer_8_ce0 <= grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_ce0;
        elsif (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_8_ce0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_8_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_8_ce0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_ce0;
        else 
            line_buffer_8_ce0 <= line_buffer_8_ce0_local;
        end if; 
    end process;


    line_buffer_8_ce0_local_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            line_buffer_8_ce0_local <= ap_const_logic_1;
        else 
            line_buffer_8_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_8_d0_assign_proc : process(grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_d0, grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_d0, ap_CS_fsm_state23, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            line_buffer_8_d0 <= grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_8_d0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_d0;
        else 
            line_buffer_8_d0 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_8_we0_assign_proc : process(grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_we0, grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_we0, ap_CS_fsm_state23, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            line_buffer_8_we0 <= grp_filter_kernel_Pipeline_VITIS_LOOP_119_10_VITIS_LOOP_120_11_fu_955_line_buffer_8_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_8_we0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_8_we0;
        else 
            line_buffer_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_address0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_address0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_address0, ap_CS_fsm_state10, ap_CS_fsm_state4, indvars_iv_next122_cast_fu_1974_p1)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_address0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_address0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_address0;
        else 
            line_buffer_address0 <= indvars_iv_next122_cast_fu_1974_p1(11 - 1 downto 0);
        end if; 
    end process;


    line_buffer_ce0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_ce0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_ce0, ap_CS_fsm_state10, ap_CS_fsm_state4, line_buffer_ce0_local)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_ce0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_ce0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_ce0;
        else 
            line_buffer_ce0 <= line_buffer_ce0_local;
        end if; 
    end process;


    line_buffer_ce0_local_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            line_buffer_ce0_local <= ap_const_logic_1;
        else 
            line_buffer_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_d0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_d0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_d0, ap_CS_fsm_state10, ap_CS_fsm_state4)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_d0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_d0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_d0;
        else 
            line_buffer_d0 <= "XXXXXXXX";
        end if; 
    end process;


    line_buffer_we0_assign_proc : process(icmp_ln99_reg_3558, grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_we0, grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_we0, ap_CS_fsm_state10, ap_CS_fsm_state4)
    begin
        if (((icmp_ln99_reg_3558 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            line_buffer_we0 <= grp_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9_fu_939_line_buffer_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            line_buffer_we0 <= grp_filter_kernel_Pipeline_init_line_buffer_VITIS_LOOP_76_3_VITIS_LOOP_77_4_fu_922_line_buffer_we0;
        else 
            line_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln58_fu_1070_p0 <= mul_ln58_fu_1070_p00(31 - 1 downto 0);
    mul_ln58_fu_1070_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(smax_fu_1289_p3),62));
    mul_ln58_fu_1070_p1 <= mul_ln58_fu_1070_p10(31 - 1 downto 0);
    mul_ln58_fu_1070_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(smax26_reg_3364),62));
    p_shl_fu_1307_p3 <= (mul_ln58_reg_3370 & ap_const_lv2_0);
    remaining_channels_1_fu_2983_p2 <= std_logic_vector(unsigned(trunc_ln200_reg_4111) + unsigned(ap_const_lv31_7FFFFFF0));
    remaining_channels_fu_2792_p2 <= std_logic_vector(unsigned(trunc_ln232_reg_3995) + unsigned(ap_const_lv31_7FFFFFF0));
    sel_tmp11_fu_2153_p2 <= "0" when (i_2_reg_864 = ap_const_lv2_0) else "1";
    sel_tmp12_fu_2159_p2 <= "0" when (i_2_reg_864 = ap_const_lv2_1) else "1";
    sel_tmp13_fu_2165_p2 <= (sel_tmp12_fu_2159_p2 and sel_tmp11_fu_2153_p2);
    sel_tmp14_fu_2302_p2 <= (sel_tmp2_fu_2271_p2 and sel_tmp13_reg_3785);
    sel_tmp1_fu_2141_p2 <= "1" when (i_2_reg_864 = ap_const_lv2_1) else "0";
    sel_tmp22_fu_2315_p2 <= (sel_tmp3_fu_2277_p2 and sel_tmp13_reg_3785);
    sel_tmp27_fu_2328_p2 <= "0" when (k_5_reg_876 = ap_const_lv31_0) else "1";
    sel_tmp29_fu_2334_p2 <= "0" when (k_5_reg_876 = ap_const_lv31_1) else "1";
    sel_tmp2_fu_2271_p2 <= "1" when (k_5_reg_876 = ap_const_lv31_0) else "0";
    sel_tmp30_fu_2346_p2 <= (tmp62_fu_2340_p2 and sel_tmp_reg_3767);
    sel_tmp38_fu_2397_p2 <= (sel_tmp_reg_3767 and sel_tmp3_fu_2277_p2);
    sel_tmp3_fu_2277_p2 <= "1" when (k_5_reg_876 = ap_const_lv31_1) else "0";
    sel_tmp46_fu_2410_p2 <= (tmp62_fu_2340_p2 and sel_tmp1_reg_3773);
    sel_tmp50_fu_2423_p2 <= (sel_tmp2_fu_2271_p2 and sel_tmp1_reg_3773);
    sel_tmp54_fu_2436_p2 <= (sel_tmp3_fu_2277_p2 and sel_tmp1_reg_3773);
    sel_tmp6_fu_2289_p2 <= (tmp61_fu_2283_p2 or tmp60_reg_3780);
    sel_tmp_fu_2135_p2 <= "1" when (i_2_reg_864 = ap_const_lv2_0) else "0";
    select_ln114_1_fu_1913_p3 <= 
        trunc_ln114_1_fu_1887_p1 when (icmp_ln114_2_fu_1907_p2(0) = '1') else 
        ap_const_lv62_10;
    select_ln114_2_fu_1993_p3 <= 
        sub_ln114_reg_3588 when (icmp_ln114_3_fu_1989_p2(0) = '1') else 
        sext_ln85_2_reg_3455;
    select_ln114_3_fu_2015_p3 <= 
        add_ln119_reg_3601 when (icmp_ln114_4_fu_2010_p2(0) = '1') else 
        ap_const_lv32_10;
    select_ln114_fu_1896_p3 <= 
        trunc_ln114_fu_1883_p1 when (icmp_ln114_fu_1891_p2(0) = '1') else 
        empty_49_reg_3121;
    select_ln115_fu_2066_p3 <= 
        grp_fu_1245_p2 when (tmp_14_fu_2048_p3(0) = '1') else 
        tmp_15_fu_2056_p4;
    select_ln85_fu_1407_p3 <= 
        xor_ln85_fu_1402_p2 when (cmp2538_reg_3353(0) = '1') else 
        ap_const_lv32_FFFFFFFF;
    select_ln89_1_fu_1571_p3 <= 
        add_ln89_fu_1547_p2 when (icmp_ln90_fu_1553_p2(0) = '1') else 
        i_reg_776;
        sext_ln114_1_fu_2111_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln119_reg_3688),64));

        sext_ln114_fu_1870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tripcount_iv_reg_820),33));

        sext_ln116_1_fu_2101_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln3_reg_3698),64));

        sext_ln116_fu_2082_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1_fu_2074_p3),64));

        sext_ln119_fu_2022_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln114_3_fu_2015_p3),33));

        sext_ln182_fu_2883_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(axie4_idx_1_reg_4053),29));

        sext_ln183_fu_2886_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(byte_offset_1_reg_4058),32));

        sext_ln186_1_fu_2864_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_4066),64));

        sext_ln186_fu_2845_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln4_fu_2837_p3),64));

        sext_ln188_fu_2889_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(byte_offset_1_reg_4058),6));

        sext_ln202_1_fu_2973_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_reg_4120),64));

        sext_ln202_fu_2954_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln8_fu_2946_p3),64));

        sext_ln216_fu_2667_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(axie4_idx_reg_3931),29));

        sext_ln217_1_fu_2673_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(byte_offset_reg_3936),6));

        sext_ln217_fu_2670_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(byte_offset_reg_3936),32));

        sext_ln219_1_fu_2647_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln9_reg_3943),64));

        sext_ln219_fu_2613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln3_fu_2605_p3),64));

        sext_ln220_fu_2657_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_reg_3948),64));

        sext_ln234_1_fu_2772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_reg_4004),64));

        sext_ln234_fu_2738_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln7_fu_2730_p3),64));

        sext_ln235_fu_2782_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln5_reg_4009),64));

        sext_ln75_1_fu_1351_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(width_read_reg_3092),33));

        sext_ln75_fu_1348_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(channels_read_reg_3067),33));

        sext_ln85_1_fu_1398_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1387_p3),63));

        sext_ln85_2_fu_1414_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln85_fu_1407_p3),64));

        sext_ln85_fu_1394_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_1387_p3),64));

    shl_ln1_fu_2074_p3 <= (select_ln115_fu_2066_p3 & ap_const_lv4_0);
    shl_ln3_fu_2605_p3 <= (axie4_idx_fu_2574_p3 & ap_const_lv4_0);
    shl_ln4_fu_2837_p3 <= (axie4_idx_1_fu_2806_p3 & ap_const_lv4_0);
    shl_ln7_fu_2730_p3 <= (add_ln234_fu_2725_p2 & ap_const_lv4_0);
    shl_ln8_fu_2946_p3 <= (add_ln202_fu_2941_p2 & ap_const_lv4_0);
    shl_ln_fu_1387_p3 <= (channels_read_reg_3067 & ap_const_lv4_0);
    smax105_fu_1443_p3 <= 
        ap_const_lv32_FFFFFFFF when (tmp_13_fu_1435_p3(0) = '1') else 
        xor_ln85_fu_1402_p2;
    smax26_fu_1271_p3 <= 
        empty_fu_1251_p1 when (cmp2538_fu_1259_p2(0) = '1') else 
        ap_const_lv31_0;
    smax_fu_1289_p3 <= 
        empty_49_reg_3121 when (empty_50_reg_3359(0) = '1') else 
        ap_const_lv31_0;
    storemerge325_fu_2441_p3 <= 
        storemerge_fu_2264_p3 when (sel_tmp54_fu_2436_p2(0) = '1') else 
        window_16_0129_fu_260;
    storemerge328_fu_2428_p3 <= 
        storemerge_fu_2264_p3 when (sel_tmp50_fu_2423_p2(0) = '1') else 
        window_15_0128_fu_256;
    storemerge331_fu_2415_p3 <= 
        storemerge_fu_2264_p3 when (sel_tmp46_fu_2410_p2(0) = '1') else 
        window_17_0130_fu_264;
    storemerge335_fu_2402_p3 <= 
        storemerge_fu_2264_p3 when (sel_tmp38_fu_2397_p2(0) = '1') else 
        window_7_0126_fu_248;
    storemerge338_fu_2389_p3 <= 
        storemerge_fu_2264_p3 when (empty_54_fu_2383_p2(0) = '1') else 
        window_6_0125_fu_244;
    storemerge341_fu_2351_p3 <= 
        storemerge_fu_2264_p3 when (sel_tmp30_fu_2346_p2(0) = '1') else 
        window_8_0127_fu_252;
    storemerge343_fu_2320_p3 <= 
        storemerge_fu_2264_p3 when (sel_tmp22_fu_2315_p2(0) = '1') else 
        window_25_0132_fu_272;
    storemerge346_fu_2307_p3 <= 
        storemerge_fu_2264_p3 when (sel_tmp14_fu_2302_p2(0) = '1') else 
        window_24_0131_fu_268;
    storemerge349_fu_2294_p3 <= 
        window_26_0133_fu_276 when (sel_tmp6_fu_2289_p2(0) = '1') else 
        storemerge_fu_2264_p3;
    storemerge_fu_2264_p3 <= 
        tmp_11_fu_2244_p9 when (cmp193_reg_3632(0) = '1') else 
        ap_const_lv8_0;
    sub192_fu_1363_p2 <= std_logic_vector(signed(width_read_reg_3092) + signed(ap_const_lv32_FFFFFFFF));
    sub342_fu_2989_p2 <= std_logic_vector(signed(ap_const_lv5_10) - signed(byte_offset_1_reg_4058));
    sub_fu_1358_p2 <= std_logic_vector(unsigned(height_read_reg_3086) + unsigned(ap_const_lv32_FFFFFFFF));
    sub_ln114_fu_1925_p2 <= std_logic_vector(unsigned(indvars_iv5_reg_853) - unsigned(zext_ln114_3_fu_1921_p1));
    sub_ln119_fu_2026_p2 <= std_logic_vector(unsigned(add_ln119_2_fu_2005_p2) - unsigned(sext_ln119_fu_2022_p1));
    sub_ln183_fu_2824_p2 <= std_logic_vector(unsigned(ap_const_lv5_0) - unsigned(zext_ln183_1_fu_2820_p1));
    sub_ln188_fu_2918_p2 <= std_logic_vector(unsigned(ap_const_lv5_0) - unsigned(umax1_fu_2911_p3));
    sub_ln217_fu_2592_p2 <= std_logic_vector(unsigned(ap_const_lv5_0) - unsigned(zext_ln217_1_fu_2588_p1));
    sub_ln222_fu_2702_p2 <= std_logic_vector(unsigned(ap_const_lv5_0) - unsigned(umax_fu_2695_p3));
    sub_ln58_fu_1314_p2 <= std_logic_vector(unsigned(p_shl_fu_1307_p3) - unsigned(zext_ln58_3_fu_1304_p1));
    sub_ln85_1_fu_1377_p2 <= std_logic_vector(unsigned(ap_const_lv33_0) - unsigned(sext_ln75_fu_1348_p1));
    sub_ln85_2_fu_1430_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) - signed(channels_read_reg_3067));
        sub_ln85_3_cast_fu_1457_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln85_3_fu_1451_p2),64));

    sub_ln85_3_fu_1451_p2 <= std_logic_vector(unsigned(sub_ln85_2_fu_1430_p2) - unsigned(smax105_fu_1443_p3));
    sub_ln85_fu_1368_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(channels_read_reg_3067));
    tmp60_fu_2147_p2 <= (sel_tmp_fu_2135_p2 or sel_tmp1_fu_2141_p2);
    tmp61_fu_2283_p2 <= (sel_tmp3_fu_2277_p2 or sel_tmp2_fu_2271_p2);
    tmp62_fu_2340_p2 <= (sel_tmp29_fu_2334_p2 and sel_tmp27_fu_2328_p2);
    tmp_10_fu_2227_p7 <= "XXXXXXXX";
    tmp_11_fu_2244_p7 <= "XXXXXXXX";
    tmp_13_fu_1435_p3 <= xor_ln85_fu_1402_p2(31 downto 31);
    tmp_14_fu_2048_p3 <= reg_1183(31 downto 31);
    tmp_15_fu_2056_p4 <= reg_1183(31 downto 4);
    tmp_1_fu_1640_p7 <= "XXXXXXXX";
    tmp_22_fu_2365_p4 <= k_5_reg_876(30 downto 2);
    tmp_23_fu_2375_p3 <= (tmp_22_fu_2365_p4 & empty_53_fu_2359_p2);
    tmp_3_fu_1667_p7 <= "XXXXXXXX";
    tmp_4_fu_1687_p7 <= "XXXXXXXX";
    tmp_5_fu_2190_p7 <= "XXXXXXXX";
    tmp_6_fu_1714_p7 <= "XXXXXXXX";
    tmp_7_fu_1734_p7 <= "XXXXXXXX";
    tmp_8_fu_2207_p7 <= "XXXXXXXX";
    tmp_fu_1620_p7 <= "XXXXXXXX";
    tmp_s_fu_1422_p3 <= (bound67_fu_1074_p2 & ap_const_lv1_0);
    trunc_ln114_1_fu_1887_p1 <= phi_ln114_1_reg_842(62 - 1 downto 0);
    trunc_ln114_fu_1883_p1 <= j_1_reg_831(31 - 1 downto 0);
    trunc_ln136_fu_2186_p1 <= k_5_reg_876(2 - 1 downto 0);
    trunc_ln183_1_fu_2816_p1 <= grp_fu_1229_p2(4 - 1 downto 0);
    trunc_ln183_fu_2802_p1 <= grp_fu_1078_p2(4 - 1 downto 0);
    trunc_ln200_fu_2931_p1 <= add_ln200_fu_2927_p2(31 - 1 downto 0);
    trunc_ln217_1_fu_2584_p1 <= grp_fu_1229_p2(4 - 1 downto 0);
    trunc_ln217_fu_2570_p1 <= grp_fu_1078_p2(4 - 1 downto 0);
    trunc_ln232_fu_2715_p1 <= add_ln232_fu_2711_p2(31 - 1 downto 0);
    trunc_ln85_1_fu_1383_p1 <= sub_ln85_1_fu_1377_p2(5 - 1 downto 0);
    trunc_ln85_fu_1373_p1 <= sub_ln85_fu_1368_p2(5 - 1 downto 0);
    trunc_ln89_fu_1543_p1 <= j_reg_787(1 - 1 downto 0);
    umax106_fu_2036_p3 <= 
        sub_ln114_reg_3588 when (empty_52_fu_2032_p2(0) = '1') else 
        sub_ln85_3_cast_reg_3471;
    umax1_fu_2911_p3 <= 
        trunc_ln85_1_reg_3440 when (empty_56_fu_2906_p2(0) = '1') else 
        empty_55_fu_2898_p1;
    umax_fu_2695_p3 <= 
        trunc_ln85_reg_3430 when (empty_58_fu_2690_p2(0) = '1') else 
        empty_57_fu_2686_p1;
    window_18_fu_1761_p2 <= 
        tmp_1_fu_1640_p9 when (and_ln89_reg_3536(0) = '1') else 
        tmp_fu_1620_p9;
    window_18_fu_1761_p4 <= 
        tmp_4_fu_1687_p9 when (and_ln89_reg_3536(0) = '1') else 
        tmp_3_fu_1667_p9;
    window_18_fu_1761_p6 <= 
        tmp_7_fu_1734_p9 when (and_ln89_reg_3536(0) = '1') else 
        tmp_6_fu_1714_p9;
    window_18_fu_1761_p7 <= "XXXXXXXX";
    xor_ln114_fu_1999_p2 <= (select_ln114_2_fu_1993_p3 xor ap_const_lv64_FFFFFFFFFFFFFFFF);
    xor_ln119_fu_2042_p2 <= (umax106_fu_2036_p3 xor ap_const_lv64_FFFFFFFFFFFFFFFF);
    xor_ln85_fu_1402_p2 <= (channels_read_reg_3067 xor ap_const_lv32_FFFFFFFF);
    xor_ln89_fu_1559_p2 <= (icmp_ln90_fu_1553_p2 xor ap_const_lv1_1);
    zext_ln114_1_fu_1986_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln114_reg_3583),33));
    zext_ln114_2_fu_1903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln114_fu_1896_p3),32));
    zext_ln114_3_fu_1921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln114_1_fu_1913_p3),64));
    zext_ln114_fu_1874_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_831),33));
    zext_ln136_fu_2171_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_5_reg_876),32));
    zext_ln183_1_fu_2820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln183_1_fu_2816_p1),5));
    zext_ln183_fu_2813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln183_reg_4048),5));
    zext_ln217_1_fu_2588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln217_1_fu_2584_p1),5));
    zext_ln217_fu_2581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln217_reg_3926),5));
    zext_ln58_3_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln58_reg_3370),64));
    zext_ln85_fu_1472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_fu_240),32));
    zext_ln87_1_fu_1504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_reg_753),32));
    zext_ln87_fu_1519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_reg_753),64));
    zext_ln91_fu_1605_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_reg_798),32));
end behav;
