// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module filter_kernel_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        channels,
        bound81,
        line_buffer_6_address0,
        line_buffer_6_ce0,
        line_buffer_6_q0,
        line_buffer_7_address0,
        line_buffer_7_ce0,
        line_buffer_7_q0,
        line_buffer_8_address0,
        line_buffer_8_ce0,
        line_buffer_8_q0,
        line_buffer_address0,
        line_buffer_ce0,
        line_buffer_we0,
        line_buffer_d0,
        line_buffer_1_address0,
        line_buffer_1_ce0,
        line_buffer_1_we0,
        line_buffer_1_d0,
        line_buffer_2_address0,
        line_buffer_2_ce0,
        line_buffer_2_we0,
        line_buffer_2_d0,
        bound67,
        line_buffer_3_address0,
        line_buffer_3_ce0,
        line_buffer_3_we0,
        line_buffer_3_d0,
        line_buffer_3_q0,
        line_buffer_4_address0,
        line_buffer_4_ce0,
        line_buffer_4_we0,
        line_buffer_4_d0,
        line_buffer_4_q0,
        line_buffer_5_address0,
        line_buffer_5_ce0,
        line_buffer_5_we0,
        line_buffer_5_d0,
        line_buffer_5_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] channels;
input  [63:0] bound81;
output  [10:0] line_buffer_6_address0;
output   line_buffer_6_ce0;
input  [7:0] line_buffer_6_q0;
output  [10:0] line_buffer_7_address0;
output   line_buffer_7_ce0;
input  [7:0] line_buffer_7_q0;
output  [10:0] line_buffer_8_address0;
output   line_buffer_8_ce0;
input  [7:0] line_buffer_8_q0;
output  [10:0] line_buffer_address0;
output   line_buffer_ce0;
output   line_buffer_we0;
output  [7:0] line_buffer_d0;
output  [10:0] line_buffer_1_address0;
output   line_buffer_1_ce0;
output   line_buffer_1_we0;
output  [7:0] line_buffer_1_d0;
output  [10:0] line_buffer_2_address0;
output   line_buffer_2_ce0;
output   line_buffer_2_we0;
output  [7:0] line_buffer_2_d0;
input  [62:0] bound67;
output  [10:0] line_buffer_3_address0;
output   line_buffer_3_ce0;
output   line_buffer_3_we0;
output  [7:0] line_buffer_3_d0;
input  [7:0] line_buffer_3_q0;
output  [10:0] line_buffer_4_address0;
output   line_buffer_4_ce0;
output   line_buffer_4_we0;
output  [7:0] line_buffer_4_d0;
input  [7:0] line_buffer_4_q0;
output  [10:0] line_buffer_5_address0;
output   line_buffer_5_ce0;
output   line_buffer_5_we0;
output  [7:0] line_buffer_5_d0;
input  [7:0] line_buffer_5_q0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [0:0] icmp_ln101_reg_717;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] bound67_cast_fu_333_p1;
reg   [63:0] bound67_cast_reg_702;
wire   [0:0] cmp253849_fu_337_p2;
reg   [0:0] cmp253849_reg_707;
reg   [63:0] indvar_flatten75_load_reg_712;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln101_fu_374_p2;
wire   [0:0] icmp_ln102_fu_385_p2;
reg   [0:0] icmp_ln102_reg_721;
wire   [1:0] select_ln102_fu_447_p3;
reg   [1:0] select_ln102_reg_731;
wire    ap_block_pp0_stage2_11001;
wire   [63:0] zext_ln102_fu_467_p1;
reg   [63:0] zext_ln102_reg_737;
wire   [0:0] first_iter_2_fu_485_p2;
reg   [0:0] first_iter_2_reg_747;
wire   [0:0] icmp_ln103_1_fu_501_p2;
reg   [0:0] icmp_ln103_1_reg_781;
wire   [0:0] cond_fu_541_p2;
reg   [0:0] cond_reg_815;
wire   [0:0] empty_47_fu_547_p2;
reg   [0:0] empty_47_reg_819;
reg   [7:0] line_buffer_6_load_reg_824;
reg   [7:0] line_buffer_7_load_reg_829;
reg   [7:0] line_buffer_8_load_reg_834;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_block_pp0_stage1_subdone;
wire   [7:0] ap_phi_reg_pp0_iter0_line_buffer_3_load25_reg_255;
reg   [7:0] ap_phi_reg_pp0_iter1_line_buffer_3_load25_reg_255;
wire   [7:0] ap_phi_reg_pp0_iter0_line_buffer_4_load24_reg_264;
reg   [7:0] ap_phi_reg_pp0_iter1_line_buffer_4_load24_reg_264;
wire   [7:0] ap_phi_reg_pp0_iter0_line_buffer_5_load23_reg_273;
reg   [7:0] ap_phi_reg_pp0_iter1_line_buffer_5_load23_reg_273;
reg   [7:0] ap_phi_mux_empty_44_phi_fu_285_p8;
wire   [7:0] select_ln105_fu_610_p3;
wire   [7:0] ap_phi_reg_pp0_iter1_empty_44_reg_282;
reg   [7:0] ap_phi_mux_empty_45_phi_fu_302_p8;
wire   [7:0] ap_phi_reg_pp0_iter1_empty_45_reg_299;
reg   [7:0] ap_phi_mux_empty_46_phi_fu_319_p8;
wire   [7:0] ap_phi_reg_pp0_iter1_empty_46_reg_316;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage1;
reg   [1:0] k_fu_64;
wire   [1:0] add_ln103_fu_491_p2;
wire    ap_loop_init;
reg   [30:0] j_fu_68;
wire   [30:0] select_ln102_2_fu_477_p3;
reg   [63:0] indvar_flatten75_fu_72;
wire   [63:0] select_ln102_3_fu_558_p3;
reg   [1:0] i_fu_76;
wire   [1:0] select_ln101_4_fu_534_p3;
wire    ap_block_pp0_stage0;
reg   [63:0] indvar_flatten99_fu_80;
wire   [63:0] add_ln101_fu_379_p2;
reg   [7:0] empty_fu_84;
reg   [7:0] empty_42_fu_88;
reg   [7:0] empty_43_fu_92;
reg    line_buffer_3_ce0_local;
reg   [10:0] line_buffer_3_address0_local;
reg    line_buffer_3_we0_local;
reg    line_buffer_4_ce0_local;
reg   [10:0] line_buffer_4_address0_local;
reg    line_buffer_4_we0_local;
reg    line_buffer_5_ce0_local;
reg   [10:0] line_buffer_5_address0_local;
reg    line_buffer_5_we0_local;
reg    line_buffer_6_ce0_local;
reg    line_buffer_7_ce0_local;
reg    line_buffer_8_ce0_local;
reg    line_buffer_1_we0_local;
reg    line_buffer_1_ce0_local;
reg    line_buffer_we0_local;
reg    line_buffer_ce0_local;
reg    line_buffer_2_we0_local;
reg    line_buffer_2_ce0_local;
wire   [31:0] zext_ln103_fu_398_p1;
wire   [10:0] trunc_ln101_fu_424_p1;
wire   [0:0] icmp_ln103_fu_402_p2;
wire   [30:0] select_ln101_fu_410_p3;
wire   [0:0] select_ln101_3_fu_435_p3;
wire   [1:0] select_ln101_1_fu_417_p3;
wire   [30:0] add_ln102_fu_441_p2;
wire   [10:0] select_ln101_2_fu_428_p3;
wire   [10:0] trunc_ln102_fu_455_p1;
wire   [10:0] select_ln102_1_fu_459_p3;
wire   [31:0] zext_ln103_1_fu_497_p1;
wire   [1:0] indvars_iv_next76_fu_528_p2;
wire   [63:0] add_ln102_1_fu_553_p2;
wire   [7:0] tmp_s_fu_575_p7;
wire   [7:0] tmp_9_fu_594_p7;
wire   [7:0] tmp_9_fu_594_p9;
wire   [7:0] tmp_s_fu_575_p9;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to0;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_done_pending_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [1:0] tmp_s_fu_575_p1;
wire   [1:0] tmp_s_fu_575_p3;
wire  signed [1:0] tmp_s_fu_575_p5;
wire   [1:0] tmp_9_fu_594_p1;
wire   [1:0] tmp_9_fu_594_p3;
wire  signed [1:0] tmp_9_fu_594_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 k_fu_64 = 2'd0;
#0 j_fu_68 = 31'd0;
#0 indvar_flatten75_fu_72 = 64'd0;
#0 i_fu_76 = 2'd0;
#0 indvar_flatten99_fu_80 = 64'd0;
#0 empty_fu_84 = 8'd0;
#0 empty_42_fu_88 = 8'd0;
#0 empty_43_fu_92 = 8'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) filter_kernel_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U24(
    .din0(ap_phi_reg_pp0_iter1_line_buffer_3_load25_reg_255),
    .din1(ap_phi_reg_pp0_iter1_line_buffer_4_load24_reg_264),
    .din2(ap_phi_reg_pp0_iter1_line_buffer_5_load23_reg_273),
    .def(tmp_s_fu_575_p7),
    .sel(select_ln102_reg_731),
    .dout(tmp_s_fu_575_p9)
);

(* dissolve_hierarchy = "yes" *) filter_kernel_sparsemux_7_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 8 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 8 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 8 ),
    .def_WIDTH( 8 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
sparsemux_7_2_8_1_1_U25(
    .din0(line_buffer_6_load_reg_824),
    .din1(line_buffer_7_load_reg_829),
    .din2(line_buffer_8_load_reg_834),
    .def(tmp_9_fu_594_p7),
    .sel(select_ln102_reg_731),
    .dout(tmp_9_fu_594_p9)
);

filter_kernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter1_stage0) | ((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0)))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_717 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (first_iter_2_reg_747 == 1'd1))) begin
        ap_phi_reg_pp0_iter1_line_buffer_3_load25_reg_255 <= line_buffer_3_q0;
    end else if (((icmp_ln101_reg_717 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (first_iter_2_reg_747 == 1'd0))) begin
        ap_phi_reg_pp0_iter1_line_buffer_3_load25_reg_255 <= empty_fu_84;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter1_line_buffer_3_load25_reg_255 <= ap_phi_reg_pp0_iter0_line_buffer_3_load25_reg_255;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_717 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (first_iter_2_reg_747 == 1'd1))) begin
        ap_phi_reg_pp0_iter1_line_buffer_4_load24_reg_264 <= line_buffer_4_q0;
    end else if (((icmp_ln101_reg_717 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (first_iter_2_reg_747 == 1'd0))) begin
        ap_phi_reg_pp0_iter1_line_buffer_4_load24_reg_264 <= empty_42_fu_88;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter1_line_buffer_4_load24_reg_264 <= ap_phi_reg_pp0_iter0_line_buffer_4_load24_reg_264;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln101_reg_717 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (first_iter_2_reg_747 == 1'd1))) begin
        ap_phi_reg_pp0_iter1_line_buffer_5_load23_reg_273 <= line_buffer_5_q0;
    end else if (((icmp_ln101_reg_717 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (first_iter_2_reg_747 == 1'd0))) begin
        ap_phi_reg_pp0_iter1_line_buffer_5_load23_reg_273 <= empty_43_fu_92;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_phi_reg_pp0_iter1_line_buffer_5_load23_reg_273 <= ap_phi_reg_pp0_iter0_line_buffer_5_load23_reg_273;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_76 <= 2'd0;
        end else if (((icmp_ln101_reg_717 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_76 <= select_ln101_4_fu_534_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten75_fu_72 <= 64'd0;
        end else if (((icmp_ln101_reg_717 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten75_fu_72 <= select_ln102_3_fu_558_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten99_fu_80 <= 64'd0;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln101_fu_374_p2 == 1'd0))) begin
        indvar_flatten99_fu_80 <= add_ln101_fu_379_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_68 <= 31'd0;
    end else if (((icmp_ln101_reg_717 == 1'd0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        j_fu_68 <= select_ln102_2_fu_477_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_fu_64 <= 2'd0;
    end else if (((icmp_ln101_reg_717 == 1'd0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        k_fu_64 <= add_ln103_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bound67_cast_reg_702[62 : 0] <= bound67_cast_fu_333_p1[62 : 0];
        cmp253849_reg_707 <= cmp253849_fu_337_p2;
        cond_reg_815 <= cond_fu_541_p2;
        empty_47_reg_819 <= empty_47_fu_547_p2;
        line_buffer_6_load_reg_824 <= line_buffer_6_q0;
        line_buffer_7_load_reg_829 <= line_buffer_7_q0;
        line_buffer_8_load_reg_834 <= line_buffer_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_42_fu_88 <= ap_phi_mux_empty_45_phi_fu_302_p8;
        empty_43_fu_92 <= ap_phi_mux_empty_44_phi_fu_285_p8;
        empty_fu_84 <= ap_phi_mux_empty_46_phi_fu_319_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        first_iter_2_reg_747 <= first_iter_2_fu_485_p2;
        icmp_ln103_1_reg_781 <= icmp_ln103_1_fu_501_p2;
        select_ln102_reg_731 <= select_ln102_fu_447_p3;
        zext_ln102_reg_737[10 : 0] <= zext_ln102_fu_467_p1[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln101_reg_717 <= icmp_ln101_fu_374_p2;
        icmp_ln102_reg_721 <= icmp_ln102_fu_385_p2;
        indvar_flatten75_load_reg_712 <= indvar_flatten75_fu_72;
    end
end

always @ (*) begin
    if (((icmp_ln101_reg_717 == 1'd1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln101_reg_717 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (ap_loop_exit_ready == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln101_reg_717 == 1'd0) & (cond_reg_815 == 1'd1)) | ((icmp_ln101_reg_717 == 1'd0) & (cond_reg_815 == 1'd0) & (select_ln102_reg_731 == 2'd1)) | ((icmp_ln101_reg_717 == 1'd0) & (cond_reg_815 == 1'd0) & (select_ln102_reg_731 == 2'd0)))) begin
        ap_phi_mux_empty_44_phi_fu_285_p8 = ap_phi_reg_pp0_iter1_line_buffer_5_load23_reg_273;
    end else if ((~(select_ln102_reg_731 == 2'd1) & ~(select_ln102_reg_731 == 2'd0) & (icmp_ln101_reg_717 == 1'd0) & (cond_reg_815 == 1'd0))) begin
        ap_phi_mux_empty_44_phi_fu_285_p8 = select_ln105_fu_610_p3;
    end else begin
        ap_phi_mux_empty_44_phi_fu_285_p8 = ap_phi_reg_pp0_iter1_empty_44_reg_282;
    end
end

always @ (*) begin
    if (((icmp_ln101_reg_717 == 1'd0) & (cond_reg_815 == 1'd0) & (select_ln102_reg_731 == 2'd1))) begin
        ap_phi_mux_empty_45_phi_fu_302_p8 = select_ln105_fu_610_p3;
    end else if (((~(select_ln102_reg_731 == 2'd1) & ~(select_ln102_reg_731 == 2'd0) & (icmp_ln101_reg_717 == 1'd0) & (cond_reg_815 == 1'd0)) | ((icmp_ln101_reg_717 == 1'd0) & (cond_reg_815 == 1'd1)) | ((icmp_ln101_reg_717 == 1'd0) & (cond_reg_815 == 1'd0) & (select_ln102_reg_731 == 2'd0)))) begin
        ap_phi_mux_empty_45_phi_fu_302_p8 = ap_phi_reg_pp0_iter1_line_buffer_4_load24_reg_264;
    end else begin
        ap_phi_mux_empty_45_phi_fu_302_p8 = ap_phi_reg_pp0_iter1_empty_45_reg_299;
    end
end

always @ (*) begin
    if (((icmp_ln101_reg_717 == 1'd0) & (cond_reg_815 == 1'd0) & (select_ln102_reg_731 == 2'd0))) begin
        ap_phi_mux_empty_46_phi_fu_319_p8 = select_ln105_fu_610_p3;
    end else if (((~(select_ln102_reg_731 == 2'd1) & ~(select_ln102_reg_731 == 2'd0) & (icmp_ln101_reg_717 == 1'd0) & (cond_reg_815 == 1'd0)) | ((icmp_ln101_reg_717 == 1'd0) & (cond_reg_815 == 1'd1)) | ((icmp_ln101_reg_717 == 1'd0) & (cond_reg_815 == 1'd0) & (select_ln102_reg_731 == 2'd1)))) begin
        ap_phi_mux_empty_46_phi_fu_319_p8 = ap_phi_reg_pp0_iter1_line_buffer_3_load25_reg_255;
    end else begin
        ap_phi_mux_empty_46_phi_fu_319_p8 = ap_phi_reg_pp0_iter1_empty_46_reg_316;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        line_buffer_1_ce0_local = 1'b1;
    end else begin
        line_buffer_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cond_reg_815 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln102_reg_731 == 2'd1))) begin
        line_buffer_1_we0_local = 1'b1;
    end else begin
        line_buffer_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        line_buffer_2_ce0_local = 1'b1;
    end else begin
        line_buffer_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(select_ln102_reg_731 == 2'd1) & ~(select_ln102_reg_731 == 2'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cond_reg_815 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        line_buffer_2_we0_local = 1'b1;
    end else begin
        line_buffer_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        line_buffer_3_address0_local = zext_ln102_reg_737;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        line_buffer_3_address0_local = zext_ln102_fu_467_p1;
    end else begin
        line_buffer_3_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        line_buffer_3_ce0_local = 1'b1;
    end else begin
        line_buffer_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln103_1_reg_781 == 1'd0) & (cmp253849_reg_707 == 1'd1))) begin
        line_buffer_3_we0_local = 1'b1;
    end else begin
        line_buffer_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        line_buffer_4_address0_local = zext_ln102_reg_737;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        line_buffer_4_address0_local = zext_ln102_fu_467_p1;
    end else begin
        line_buffer_4_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        line_buffer_4_ce0_local = 1'b1;
    end else begin
        line_buffer_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln103_1_reg_781 == 1'd0) & (cmp253849_reg_707 == 1'd1))) begin
        line_buffer_4_we0_local = 1'b1;
    end else begin
        line_buffer_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        line_buffer_5_address0_local = zext_ln102_reg_737;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        line_buffer_5_address0_local = zext_ln102_fu_467_p1;
    end else begin
        line_buffer_5_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        line_buffer_5_ce0_local = 1'b1;
    end else begin
        line_buffer_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln103_1_reg_781 == 1'd0) & (cmp253849_reg_707 == 1'd1))) begin
        line_buffer_5_we0_local = 1'b1;
    end else begin
        line_buffer_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        line_buffer_6_ce0_local = 1'b1;
    end else begin
        line_buffer_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        line_buffer_7_ce0_local = 1'b1;
    end else begin
        line_buffer_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        line_buffer_8_ce0_local = 1'b1;
    end else begin
        line_buffer_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        line_buffer_ce0_local = 1'b1;
    end else begin
        line_buffer_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cond_reg_815 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln102_reg_731 == 2'd0))) begin
        line_buffer_we0_local = 1'b1;
    end else begin
        line_buffer_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln101_fu_379_p2 = (indvar_flatten99_fu_80 + 64'd1);

assign add_ln102_1_fu_553_p2 = (indvar_flatten75_load_reg_712 + 64'd1);

assign add_ln102_fu_441_p2 = (select_ln101_fu_410_p3 + 31'd1);

assign add_ln103_fu_491_p2 = (select_ln102_fu_447_p3 + 2'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_phi_reg_pp0_iter0_line_buffer_3_load25_reg_255 = 'bx;

assign ap_phi_reg_pp0_iter0_line_buffer_4_load24_reg_264 = 'bx;

assign ap_phi_reg_pp0_iter0_line_buffer_5_load23_reg_273 = 'bx;

assign ap_phi_reg_pp0_iter1_empty_44_reg_282 = 'bx;

assign ap_phi_reg_pp0_iter1_empty_45_reg_299 = 'bx;

assign ap_phi_reg_pp0_iter1_empty_46_reg_316 = 'bx;

assign ap_ready = ap_ready_sig;

assign bound67_cast_fu_333_p1 = bound67;

assign cmp253849_fu_337_p2 = (($signed(channels) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign cond_fu_541_p2 = ((select_ln101_4_fu_534_p3 == 2'd0) ? 1'b1 : 1'b0);

assign empty_47_fu_547_p2 = ((select_ln101_4_fu_534_p3 == 2'd1) ? 1'b1 : 1'b0);

assign first_iter_2_fu_485_p2 = ((select_ln102_fu_447_p3 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln101_fu_374_p2 = ((indvar_flatten99_fu_80 == bound81) ? 1'b1 : 1'b0);

assign icmp_ln102_fu_385_p2 = ((indvar_flatten75_fu_72 == bound67_cast_reg_702) ? 1'b1 : 1'b0);

assign icmp_ln103_1_fu_501_p2 = (($signed(zext_ln103_1_fu_497_p1) < $signed(channels)) ? 1'b1 : 1'b0);

assign icmp_ln103_fu_402_p2 = (($signed(zext_ln103_fu_398_p1) < $signed(channels)) ? 1'b1 : 1'b0);

assign indvars_iv_next76_fu_528_p2 = (i_fu_76 + 2'd1);

assign line_buffer_1_address0 = zext_ln102_reg_737;

assign line_buffer_1_ce0 = line_buffer_1_ce0_local;

assign line_buffer_1_d0 = select_ln105_fu_610_p3;

assign line_buffer_1_we0 = line_buffer_1_we0_local;

assign line_buffer_2_address0 = zext_ln102_reg_737;

assign line_buffer_2_ce0 = line_buffer_2_ce0_local;

assign line_buffer_2_d0 = select_ln105_fu_610_p3;

assign line_buffer_2_we0 = line_buffer_2_we0_local;

assign line_buffer_3_address0 = line_buffer_3_address0_local;

assign line_buffer_3_ce0 = line_buffer_3_ce0_local;

assign line_buffer_3_d0 = ap_phi_mux_empty_46_phi_fu_319_p8;

assign line_buffer_3_we0 = line_buffer_3_we0_local;

assign line_buffer_4_address0 = line_buffer_4_address0_local;

assign line_buffer_4_ce0 = line_buffer_4_ce0_local;

assign line_buffer_4_d0 = ap_phi_mux_empty_45_phi_fu_302_p8;

assign line_buffer_4_we0 = line_buffer_4_we0_local;

assign line_buffer_5_address0 = line_buffer_5_address0_local;

assign line_buffer_5_ce0 = line_buffer_5_ce0_local;

assign line_buffer_5_d0 = ap_phi_mux_empty_44_phi_fu_285_p8;

assign line_buffer_5_we0 = line_buffer_5_we0_local;

assign line_buffer_6_address0 = zext_ln102_fu_467_p1;

assign line_buffer_6_ce0 = line_buffer_6_ce0_local;

assign line_buffer_7_address0 = zext_ln102_fu_467_p1;

assign line_buffer_7_ce0 = line_buffer_7_ce0_local;

assign line_buffer_8_address0 = zext_ln102_fu_467_p1;

assign line_buffer_8_ce0 = line_buffer_8_ce0_local;

assign line_buffer_address0 = zext_ln102_reg_737;

assign line_buffer_ce0 = line_buffer_ce0_local;

assign line_buffer_d0 = select_ln105_fu_610_p3;

assign line_buffer_we0 = line_buffer_we0_local;

assign select_ln101_1_fu_417_p3 = ((icmp_ln102_reg_721[0:0] == 1'b1) ? 2'd0 : k_fu_64);

assign select_ln101_2_fu_428_p3 = ((icmp_ln102_reg_721[0:0] == 1'b1) ? 11'd0 : trunc_ln101_fu_424_p1);

assign select_ln101_3_fu_435_p3 = ((icmp_ln102_reg_721[0:0] == 1'b1) ? cmp253849_reg_707 : icmp_ln103_fu_402_p2);

assign select_ln101_4_fu_534_p3 = ((icmp_ln102_reg_721[0:0] == 1'b1) ? indvars_iv_next76_fu_528_p2 : i_fu_76);

assign select_ln101_fu_410_p3 = ((icmp_ln102_reg_721[0:0] == 1'b1) ? 31'd0 : j_fu_68);

assign select_ln102_1_fu_459_p3 = ((select_ln101_3_fu_435_p3[0:0] == 1'b1) ? select_ln101_2_fu_428_p3 : trunc_ln102_fu_455_p1);

assign select_ln102_2_fu_477_p3 = ((select_ln101_3_fu_435_p3[0:0] == 1'b1) ? select_ln101_fu_410_p3 : add_ln102_fu_441_p2);

assign select_ln102_3_fu_558_p3 = ((icmp_ln102_reg_721[0:0] == 1'b1) ? 64'd1 : add_ln102_1_fu_553_p2);

assign select_ln102_fu_447_p3 = ((select_ln101_3_fu_435_p3[0:0] == 1'b1) ? select_ln101_1_fu_417_p3 : 2'd0);

assign select_ln105_fu_610_p3 = ((empty_47_reg_819[0:0] == 1'b1) ? tmp_9_fu_594_p9 : tmp_s_fu_575_p9);

assign tmp_9_fu_594_p7 = 'bx;

assign tmp_s_fu_575_p7 = 'bx;

assign trunc_ln101_fu_424_p1 = j_fu_68[10:0];

assign trunc_ln102_fu_455_p1 = add_ln102_fu_441_p2[10:0];

assign zext_ln102_fu_467_p1 = select_ln102_1_fu_459_p3;

assign zext_ln103_1_fu_497_p1 = add_ln103_fu_491_p2;

assign zext_ln103_fu_398_p1 = k_fu_64;

always @ (posedge ap_clk) begin
    bound67_cast_reg_702[63] <= 1'b0;
    zext_ln102_reg_737[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //filter_kernel_filter_kernel_Pipeline_shift_lines_VITIS_LOOP_102_8_VITIS_LOOP_103_9
